// Generated by psc version 0.6.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function showStringImpl(s) {
      return JSON.stringify(s);
    }
    ;
    
    function showNumberImpl(n) {
      return n.toString();
    }
    ;
    
    function showArrayImpl(f) {
      return function(xs) {
        var ss = [];
        for (var i = 0, l = xs.length; i < l; i++) {
          ss[i] = f(xs[i]);
        }
        return '[' + ss.join(',') + ']';
      };
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function numDiv(n1) {
      return function(n2) {
        return n1 / n2;
      };
    }
    ;
    
    function numMod(n1) {
      return function(n2) {
        return n1 % n2;
      };
    }
    ;
    
    function numNegate(n) {
      return -n;
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function eqArrayImpl(f) {
      return function(xs) {
        return function(ys) {
          if (xs.length !== ys.length) return false;
          for (var i = 0; i < xs.length; i++) {
            if (!f(xs[i])(ys[i])) return false;
          }
          return true;
        };
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function numShl(n1) {
      return function(n2) {
        return n1 << n2;
      };
    }
    ;
    
    function numShr(n1) {
      return function(n2) {
        return n1 >> n2;
      };
    }
    ;
    
    function numZshr(n1) {
      return function(n2) {
        return n1 >>> n2;
      };
    }
    ;
    
    function numAnd(n1) {
      return function(n2) {
        return n1 & n2;
      };
    }
    ;
    
    function numOr(n1) {
      return function(n2) {
        return n1 | n2;
      };
    }
    ;
    
    function numXor(n1) {
      return function(n2) {
        return n1 ^ n2;
      };
    }
    ;
    
    function numComplement(n) {
      return ~n;
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    
    function concatString(s1) {
      return function(s2) {
        return s1 + s2;
      };
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Num = function ($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var Bits = function ($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $dot$bar$dot = function (dict) {
        return dict[".|."];
    };
    var $dot$up$dot = function (dict) {
        return dict[".^."];
    };
    var $dot$amp$dot = function (dict) {
        return dict[".&."];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = new Show(function (_48) {
        return "Unit {}";
    });
    var showString = new Show(showStringImpl);
    var showOrdering = new Show(function (_56) {
        if (_56 instanceof LT) {
            return "LT";
        };
        if (_56 instanceof GT) {
            return "GT";
        };
        if (_56 instanceof EQ) {
            return "EQ";
        };
        throw new Error("Failed pattern match");
    });
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_49) {
        if (_49) {
            return "true";
        };
        if (!_49) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupUnit = new Semigroup(function (_63) {
        return function (_64) {
            return {};
        };
    });
    var semigroupString = new Semigroup(concatString);
    var semigroupArr = function (__dict_Semigroup_4) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_6) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_6)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = new Eq(function (_52) {
        return function (_53) {
            return false;
        };
    }, function (_50) {
        return function (_51) {
            return true;
        };
    });
    var ordUnit = new Ord(function () {
        return eqUnit;
    }, function (_57) {
        return function (_58) {
            return EQ.value;
        };
    });
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var ordBoolean = new Ord(function () {
        return eqBoolean;
    }, function (_59) {
        return function (_60) {
            if (!_59 && !_60) {
                return EQ.value;
            };
            if (!_59 && _60) {
                return LT.value;
            };
            if (_59 && _60) {
                return EQ.value;
            };
            if (_59 && !_60) {
                return GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
    var $$const = function (_44) {
        return function (_45) {
            return _44;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _766 = compare(__dict_Ord_11)(a1)(a2);
                if (_766 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _767 = compare(__dict_Ord_12)(a1)(a2);
                if (_767 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _768 = compare(__dict_Ord_13)(a1)(a2);
                if (_768 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _769 = compare(__dict_Ord_14)(a1)(a2);
                if (_769 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_10) {
        return new Ord(function () {
            return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
        }, function (_61) {
            return function (_62) {
                if (_61.length === 0 && _62.length === 0) {
                    return EQ.value;
                };
                if (_61.length === 0) {
                    return LT.value;
                };
                if (_62.length === 0) {
                    return GT.value;
                };
                if (_61.length >= 1) {
                    var _776 = _61.slice(1);
                    if (_62.length >= 1) {
                        var _774 = _62.slice(1);
                        var _772 = compare(__dict_Ord_10)(_61[0])(_62[0]);
                        if (_772 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_10))(_776)(_774);
                        };
                        return _772;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = new Eq(function (x) {
        return function (y) {
            return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
        };
    }, function (_54) {
        return function (_55) {
            if (_54 instanceof LT && _55 instanceof LT) {
                return true;
            };
            if (_54 instanceof GT && _55 instanceof GT) {
                return true;
            };
            if (_54 instanceof EQ && _55 instanceof EQ) {
                return true;
            };
            return false;
        };
    });
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var asTypeOf = function (_46) {
        return function (_47) {
            return _46;
        };
    };
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var bindArr = new Bind(function (m) {
        return function (f) {
            return function (x) {
                return f(m(x))(x);
            };
        };
    }, function () {
        return applyArr;
    });
    var applicativeArr = new Applicative(function () {
        return applyArr;
    }, $$const);
    var monadArr = new Monad(function () {
        return applicativeArr;
    }, function () {
        return bindArr;
    });
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        zshr: zshr, 
        shr: shr, 
        shl: shl, 
        ".^.": $dot$up$dot, 
        ".|.": $dot$bar$dot, 
        ".&.": $dot$amp$dot, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "/": $div, 
        "*": $times, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        asTypeOf: asTypeOf, 
        "const": $$const, 
        flip: flip, 
        otherwise: otherwise, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showUnit: showUnit, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        functorArr: functorArr, 
        applyArr: applyArr, 
        applicativeArr: applicativeArr, 
        bindArr: bindArr, 
        monadArr: monadArr, 
        numNumber: numNumber, 
        eqUnit: eqUnit, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        eqBoolean: eqBoolean, 
        eqArray: eqArray, 
        eqOrdering: eqOrdering, 
        showOrdering: showOrdering, 
        ordUnit: ordUnit, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordArray: ordArray, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupUnit: semigroupUnit, 
        semigroupString: semigroupString, 
        semigroupArr: semigroupArr
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function unsafeIndex(xs) {
      return function(n) {
        return xs[n];
      };
    }
    ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var abs = Math.abs;;
    var acos = Math.acos;;
    var asin = Math.asin;;
    var atan = Math.atan;;
    function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
    var ceil = Math.ceil;;
    var cos = Math.cos;;
    var exp = Math.exp;;
    var floor = Math.floor;;
    var log = Math.log;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    function pow(n){  return function(p) {    return Math.pow(n, p);  }};
    var round = Math.round;;
    var sin = Math.sin;;
    var sqrt = Math.sqrt;;
    var tan = Math.tan;;
    var e       = Math.E;;
    var ln2     = Math.LN2;;
    var ln10    = Math.LN10;;
    var log2e   = Math.LOG2E;;
    var log10e  = Math.LOG10E;;
    var pi      = Math.PI;;
    var sqrt1_2 = Math.SQRT1_2;;
    var sqrt2   = Math.SQRT2;;
    return {
        sqrt2: sqrt2, 
        sqrt1_2: sqrt1_2, 
        pi: pi, 
        log10e: log10e, 
        log2e: log2e, 
        ln10: ln10, 
        ln2: ln2, 
        e: e, 
        tan: tan, 
        sqrt: sqrt, 
        sin: sin, 
        round: round, 
        pow: pow, 
        min: min, 
        max: max, 
        log: log, 
        floor: floor, 
        exp: exp, 
        cos: cos, 
        ceil: ceil, 
        atan2: atan2, 
        atan: atan, 
        asin: asin, 
        acos: acos, 
        abs: abs
    };
})();
var PS = PS || {};
PS.Global = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var nan = NaN;;
    var infinity = Infinity;;
    function readInt(radix) {  return function(n) {    return parseInt(n, radix);  };};
    var readFloat = parseFloat;;
    return {
        readFloat: readFloat, 
        readInt: readInt, 
        isFinite: isFinite, 
        infinity: infinity, 
        isNaN: isNaN, 
        nan: nan
    };
})();
var PS = PS || {};
PS.Debug_Spy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function _spy(s){
      return function(x){
        console.log(s);
        return x;
      };
    }
  ;
    var spy = function (__dict_Show_16) {
        return function (x) {
            return _spy(Prelude.show(__dict_Show_16)(x))(x);
        };
    };
    return {
        spy: spy
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Profunctor = function (dimap) {
        this.dimap = dimap;
    };
    var profunctorArr = new Profunctor(function (a2b) {
        return function (c2d) {
            return function (b2c) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(a2b)(Prelude[">>>"](Prelude.semigroupoidArr)(b2c)(c2d));
            };
        };
    });
    var dimap = function (dict) {
        return dict.dimap;
    };
    var lmap = function (__dict_Profunctor_17) {
        return function (a2b) {
            return dimap(__dict_Profunctor_17)(a2b)(Prelude.id(Prelude.categoryArr));
        };
    };
    var rmap = function (__dict_Profunctor_18) {
        return function (b2c) {
            return dimap(__dict_Profunctor_18)(Prelude.id(Prelude.categoryArr))(b2c);
        };
    };
    return {
        Profunctor: Profunctor, 
        rmap: rmap, 
        lmap: lmap, 
        dimap: dimap, 
        profunctorArr: profunctorArr
    };
})();
var PS = PS || {};
PS.Optic_Internal_Iso = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Exchange = (function () {
        function Exchange(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Exchange.create = function (value0) {
            return function (value1) {
                return new Exchange(value0, value1);
            };
        };
        return Exchange;
    })();
    var profunctorExchange = new Data_Profunctor.Profunctor(function (_67) {
        return function (_68) {
            return function (_69) {
                return new Exchange(Prelude[">>>"](Prelude.semigroupoidArr)(_67)(_69.value0), Prelude[">>>"](Prelude.semigroupoidArr)(_69.value1)(_68));
            };
        };
    });
    var functorExchange = new Prelude.Functor(function (_65) {
        return function (_66) {
            return new Exchange(_66.value0, Prelude[">>>"](Prelude.semigroupoidArr)(_66.value1)(_65));
        };
    });
    return {
        Exchange: Exchange, 
        functorExchange: functorExchange, 
        profunctorExchange: profunctorExchange
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function mkFn0(fn) {
      return function() {
        return fn({});
      };
    }
    ;
    
    function mkFn1(fn) {
      return function(a) {
        return fn(a);
      };
    }
    ;
    
    function mkFn2(fn) {
      return function(a, b) {
        return fn(a)(b);
      };
    }
    ;
    
    function mkFn3(fn) {
      return function(a, b, c) {
        return fn(a)(b)(c);
      };
    }
    ;
    
    function mkFn4(fn) {
      return function(a, b, c, d) {
        return fn(a)(b)(c)(d);
      };
    }
    ;
    
    function mkFn5(fn) {
      return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e);
      };
    }
    ;
    
    function mkFn6(fn) {
      return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f);
      };
    }
    ;
    
    function mkFn7(fn) {
      return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g);
      };
    }
    ;
    
    function mkFn8(fn) {
      return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h);
      };
    }
    ;
    
    function mkFn9(fn) {
      return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
      };
    }
    ;
    
    function mkFn10(fn) {
      return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
      };
    }
    ;
    
    function runFn0(fn) {
      return fn();
    }
    ;
    
    function runFn1(fn) {
      return function(a) {
        return fn(a);
      };
    }
    ;
    
    function runFn2(fn) {
      return function(a) {
        return function(b) {
          return fn(a, b);
        };
      };
    }
    ;
    
    function runFn3(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return fn(a, b, c);
          };
        };
      };
    }
    ;
    
    function runFn4(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return fn(a, b, c, d);
            };
          };
        };
      };
    }
    ;
    
    function runFn5(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return fn(a, b, c, d, e);
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn6(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return fn(a, b, c, d, e, f);
                };
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn7(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return fn(a, b, c, d, e, f, g);
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn8(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return function(h) {
                      return fn(a, b, c, d, e, f, g, h);
                    };
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn9(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return function(h) {
                      return function(i) {
                        return fn(a, b, c, d, e, f, g, h, i);
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn10(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return function(h) {
                      return function(i) {
                        return function(j) {
                          return fn(a, b, c, d, e, f, g, h, i, j);
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn10: runFn10, 
        runFn9: runFn9, 
        runFn8: runFn8, 
        runFn7: runFn7, 
        runFn6: runFn6, 
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        runFn1: runFn1, 
        runFn0: runFn0, 
        mkFn10: mkFn10, 
        mkFn9: mkFn9, 
        mkFn8: mkFn8, 
        mkFn7: mkFn7, 
        mkFn6: mkFn6, 
        mkFn5: mkFn5, 
        mkFn4: mkFn4, 
        mkFn3: mkFn3, 
        mkFn2: mkFn2, 
        mkFn1: mkFn1, 
        mkFn0: mkFn0, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Contravariant = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Contravariant = function ($greater$dollar$less) {
        this[">$<"] = $greater$dollar$less;
    };
    var $greater$dollar$less = function (dict) {
        return dict[">$<"];
    };
    return {
        Contravariant: Contravariant, 
        ">$<": $greater$dollar$less
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;
    
    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
    var Char = function (x) {
        return x;
    };
    var showChar = new Prelude.Show(function (_75) {
        return "Char " + Prelude.show(Prelude.showString)(_75);
    });
    var eqChar = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqChar)(a)(b);
        };
    }, function (_71) {
        return function (_72) {
            return _71 === _72;
        };
    });
    var ordChar = new Prelude.Ord(function () {
        return eqChar;
    }, function (_73) {
        return function (_74) {
            return Prelude.compare(Prelude.ordString)(_73)(_74);
        };
    });
    var charString = function (_70) {
        return _70;
    };
    return {
        toCharCode: toCharCode, 
        fromCharCode: fromCharCode, 
        charString: charString, 
        eqChar: eqChar, 
        ordChar: ordChar, 
        showChar: showChar
    };
})();
var PS = PS || {};
PS.Data_String_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Char = PS.Data_Char;
    
    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;
    
    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
    return {
        charCodeAt: charCodeAt, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var MonadTrans = function (lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Error = function (noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    var noMsg = function (dict) {
        return dict.noMsg;
    };
    var errorString = new Error("", Prelude.id(Prelude.categoryArr));
    return {
        Error: Error, 
        strMsg: strMsg, 
        noMsg: noMsg, 
        errorString: errorString
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    
    function runPure(f) {
      return f();
    }
    ;
    
    function untilE(f) {
      return function() {
        while (!f());
        return {};
      };
    }
    ;
    
    function whileE(f) {
      return function(a) {
        return function() {
          while (f()) {
            a();
          }
          return {};
        };
      };
    }
    ;
    
    function forE(lo) {
      return function(hi) {
        return function(f) {
          return function() {
            for (var i = lo; i < hi; i++) {
              f(i)();
            }
          };
        };
      };
    }
    ;
    
    function foreachE(as) {
      return function(f) {
        return function() {
          for (var i = 0; i < as.length; i++) {
            f(as[i])();
          }
        };
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        foreachE: foreachE, 
        forE: forE, 
        whileE: whileE, 
        untilE: untilE, 
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function unsafeInterleaveEff(f) {
      return f;
    }
    ;
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    
    function newSTRef(val) {
      return function() {
        return { value: val };
      };
    }
    ;
    
    function readSTRef(ref) {
      return function() {
        return ref.value;
      };
    }
    ;
    
    function modifySTRef(ref) {
      return function(f) {
        return function() {
          return ref.value = f(ref.value);
        };
      };
    }
    ;
    
    function writeSTRef(ref) {
      return function(a) {
        return function() {
          return ref.value = a;
        };
      };
    }
    ;
    
    function runST(f) {
      return f;
    }
    ;
    var pureST = function (st) {
        return Control_Monad_Eff.runPure(runST(st));
    };
    return {
        pureST: pureST, 
        runST: runST, 
        writeSTRef: writeSTRef, 
        modifySTRef: modifySTRef, 
        readSTRef: readSTRef, 
        newSTRef: newSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function trace(s) {
      return function() {
        console.log(s);
        return {};
      };
    }
    ;
    var print = function (__dict_Show_19) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_19)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Debug_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Debug_Trace = PS.Debug_Trace;
    
    function fprint(x){
      return function(){
        console.log(x);
        return x;
      };
    }
  ;
    
    function fprintUnsafe(x){
      console.log(x);
      return x;
    }
  ;
    
    function fprintStringify(x){
      console.log(JSON.stringify(x));
      return x;
    }
  ;
    var fspy = fprintUnsafe;
    return {
        fspy: fspy, 
        fprintStringify: fprintStringify, 
        fprintUnsafe: fprintUnsafe, 
        fprint: fprint
    };
})();
var PS = PS || {};
PS.Debug_Foreign_Eval = (function () {
    "use strict";
    var Debug_Foreign = PS.Debug_Foreign;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Debug_Trace = PS.Debug_Trace;
    
  function evaluate(x){
    return function(){
      return eval(x);
    };
  }
;
    var fpeek = function (x) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)(evaluate(x))(Debug_Foreign.fprint);
    };
    return {
        fpeek: fpeek, 
        evaluate: evaluate
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var ContT = function (x) {
        return x;
    };
    var runContT = function (_76) {
        return function (_77) {
            return _76(_77);
        };
    };
    var withContT = function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(f(k));
            };
        };
    };
    var monadTransContT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_20) {
        return function (m) {
            return function (k) {
                return Prelude[">>="](__dict_Monad_20["__superclass_Prelude.Bind_1"]())(m)(k);
            };
        };
    });
    var mapContT = function (f) {
        return function (m) {
            return function (k) {
                return f(runContT(m)(k));
            };
        };
    };
    var functorContT = function (__dict_Monad_22) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runContT(m)(function (a) {
                        return k(f(a));
                    });
                };
            };
        });
    };
    var callCC = function (f) {
        return function (k) {
            return runContT(f(function (a) {
                return function (_) {
                    return k(a);
                };
            }))(k);
        };
    };
    var applyContT = function (__dict_Functor_24) {
        return function (__dict_Monad_25) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return function (k) {
                        return runContT(f)(function (g) {
                            return runContT(v)(function (a) {
                                return k(g(a));
                            });
                        });
                    };
                };
            }, function () {
                return functorContT(__dict_Monad_25);
            });
        };
    };
    var bindContT = function (__dict_Monad_23) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (k$prime) {
                    return runContT(m)(function (a) {
                        return runContT(k(a))(k$prime);
                    });
                };
            };
        }, function () {
            return applyContT(((__dict_Monad_23["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_23);
        });
    };
    var applicativeContT = function (__dict_Functor_26) {
        return function (__dict_Monad_27) {
            return new Prelude.Applicative(function () {
                return applyContT(__dict_Functor_26)(__dict_Monad_27);
            }, function (a) {
                return function (k) {
                    return k(a);
                };
            });
        };
    };
    var monadContT = function (__dict_Monad_21) {
        return new Prelude.Monad(function () {
            return applicativeContT(((__dict_Monad_21["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_21);
        }, function () {
            return bindContT(__dict_Monad_21);
        });
    };
    return {
        ContT: ContT, 
        callCC: callCC, 
        withContT: withContT, 
        mapContT: mapContT, 
        runContT: runContT, 
        functorContT: functorContT, 
        applyContT: applyContT, 
        applicativeContT: applicativeContT, 
        bindContT: bindContT, 
        monadContT: monadContT, 
        monadTransContT: monadTransContT
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_28) {
        return function (_83) {
            return function (_84) {
                if (_83) {
                    return _84;
                };
                if (!_83) {
                    return Prelude["return"](__dict_Monad_28)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_29) {
        return function (_85) {
            return function (_86) {
                if (!_85) {
                    return _86;
                };
                if (_85) {
                    return Prelude["return"](__dict_Monad_29)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_30) {
        return function (_78) {
            return function (_79) {
                if (_78 === 0) {
                    return Prelude["return"](__dict_Monad_30)([  ]);
                };
                return Prelude[">>="](__dict_Monad_30["__superclass_Prelude.Bind_1"]())(_79)(function (_4) {
                    return Prelude[">>="](__dict_Monad_30["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_30)(_78 - 1)(_79))(function (_3) {
                        return Prelude["return"](__dict_Monad_30)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_31) {
        return function (_80) {
            return function (_81) {
                return function (_82) {
                    if (_82.length === 0) {
                        return Prelude["return"](__dict_Monad_31)(_81);
                    };
                    if (_82.length >= 1) {
                        var _812 = _82.slice(1);
                        return Prelude[">>="](__dict_Monad_31["__superclass_Prelude.Bind_1"]())(_80(_81)(_82[0]))(function (a$prime) {
                            return foldM(__dict_Monad_31)(_80)(a$prime)(_812);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        unless: unless, 
        when: when, 
        foldM: foldM, 
        replicateM: replicateM
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Lazy = function (defer) {
        this.defer = defer;
    };
    var Lazy1 = function (defer1) {
        this.defer1 = defer1;
    };
    var Lazy2 = function (defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_32) {
        return function (f) {
            return defer2(__dict_Lazy2_32)(function (_) {
                return f(fix2(__dict_Lazy2_32)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_33) {
        return function (f) {
            return defer1(__dict_Lazy1_33)(function (_) {
                return f(fix1(__dict_Lazy1_33)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_34) {
        return function (f) {
            return defer(__dict_Lazy_34)(function (_) {
                return f(fix(__dict_Lazy_34)(f));
            });
        };
    };
    return {
        Lazy2: Lazy2, 
        Lazy1: Lazy1, 
        Lazy: Lazy, 
        fix2: fix2, 
        fix1: fix1, 
        fix: fix, 
        defer2: defer2, 
        defer1: defer1, 
        defer: defer
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Extend = function ($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_35) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_35)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_36) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_36)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_37) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_37)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_38) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_38)(w)(w$prime));
                    });
                };
            };
        }, function () {
            return Prelude.functorArr;
        });
    };
    var duplicate = function (__dict_Extend_39) {
        return function (w) {
            return $less$less$eq(__dict_Extend_39)(Prelude.id(Prelude.categoryArr))(w);
        };
    };
    return {
        Extend: Extend, 
        duplicate: duplicate, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        "<<=": $less$less$eq, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Comonad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var ComonadTrans = function (lower) {
        this.lower = lower;
    };
    var lower = function (dict) {
        return dict.lower;
    };
    return {
        ComonadTrans: ComonadTrans, 
        lower: lower
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_40) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_40)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_41) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_41)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_42) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_42)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_43) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_43)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    var ifM = function (__dict_Bind_44) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_44)(cond)(function (cond$prime) {
                        if (cond$prime) {
                            return t;
                        };
                        if (!cond$prime) {
                            return f;
                        };
                        throw new Error("Failed pattern match");
                    });
                };
            };
        };
    };
    return {
        ifM: ifM, 
        join: join, 
        "<=<": $less$eq$less, 
        ">=>": $greater$eq$greater, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_45) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_45)(Prelude["<$>"](__dict_Apply_45["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_46) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_46)(Prelude["<$>"](__dict_Apply_46["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_47) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_47)(Prelude["<*>"](__dict_Apply_47)(Prelude["<*>"](__dict_Apply_47)(Prelude["<*>"](__dict_Apply_47)(Prelude["<$>"](__dict_Apply_47["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_48) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_48)(Prelude["<*>"](__dict_Apply_48)(Prelude["<*>"](__dict_Apply_48)(Prelude["<$>"](__dict_Apply_48["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_49) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_49)(Prelude["<*>"](__dict_Apply_49)(Prelude["<$>"](__dict_Apply_49["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_50) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_50)(Prelude["<$>"](__dict_Apply_50["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_51) {
        return function (a) {
            return $times$greater(__dict_Apply_51)(a)(forever(__dict_Apply_51)(a));
        };
    };
    return {
        forever: forever, 
        lift5: lift5, 
        lift4: lift4, 
        lift3: lift3, 
        lift2: lift2, 
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_52) {
        return function (__dict_Lazy1_53) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_52["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_52["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_53)(function (_) {
                    return many(__dict_Alternative_52)(__dict_Lazy1_53)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_54) {
        return function (__dict_Lazy1_55) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_54["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_54)(__dict_Lazy1_55)(v))(Prelude.pure(__dict_Alternative_54["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_56) {
        return function (_87) {
            if (_87) {
                return Prelude["return"](__dict_MonadPlus_56["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_87) {
                return Control_Plus.empty((__dict_MonadPlus_56["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ReaderT = function (x) {
        return x;
    };
    var runReaderT = function (_88) {
        return _88;
    };
    var withReaderT = function (f) {
        return function (m) {
            return ReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(runReaderT(m))(f));
        };
    };
    var mapReaderT = function (f) {
        return function (m) {
            return ReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runReaderT(m)));
        };
    };
    var liftReaderT = function (m) {
        return Prelude["const"](m);
    };
    var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_59) {
        return liftReaderT;
    });
    var liftCatchReader = function ($$catch) {
        return function (m) {
            return function (h) {
                return ReaderT(function (r) {
                    return $$catch(runReaderT(m)(r))(function (e) {
                        return runReaderT(h(e))(r);
                    });
                });
            };
        };
    };
    var liftCallCCReader = function (callCC) {
        return function (f) {
            return ReaderT(function (r) {
                return callCC(function (c) {
                    return runReaderT(f(function (a) {
                        return ReaderT(Prelude["const"](c(a)));
                    }))(r);
                });
            });
        };
    };
    var functorReaderT = function (__dict_Functor_61) {
        return new Prelude.Functor(function (f) {
            return mapReaderT(Prelude["<$>"](__dict_Functor_61)(f));
        });
    };
    var applyReaderT = function (__dict_Applicative_63) {
        return new Prelude.Apply(function (f) {
            return function (v) {
                return function (r) {
                    return Prelude["<*>"](__dict_Applicative_63["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
                };
            };
        }, function () {
            return functorReaderT((__dict_Applicative_63["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindReaderT = function (__dict_Monad_62) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (r) {
                    return Prelude[">>="](__dict_Monad_62["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_5) {
                        return runReaderT(k(_5))(r);
                    });
                };
            };
        }, function () {
            return applyReaderT(__dict_Monad_62["__superclass_Prelude.Applicative_0"]());
        });
    };
    var applicativeReaderT = function (__dict_Applicative_64) {
        return new Prelude.Applicative(function () {
            return applyReaderT(__dict_Applicative_64);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftReaderT)(Prelude.pure(__dict_Applicative_64)));
    };
    var monadReaderT = function (__dict_Monad_57) {
        return new Prelude.Monad(function () {
            return applicativeReaderT(__dict_Monad_57["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindReaderT(__dict_Monad_57);
        });
    };
    var altReaderT = function (__dict_Alt_66) {
        return new Control_Alt.Alt(function (m) {
            return function (n) {
                return function (r) {
                    return Control_Alt["<|>"](__dict_Alt_66)(runReaderT(m)(r))(runReaderT(n)(r));
                };
            };
        }, function () {
            return functorReaderT(__dict_Alt_66["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusReaderT = function (__dict_Plus_60) {
        return new Control_Plus.Plus(function () {
            return altReaderT(__dict_Plus_60["__superclass_Control.Alt.Alt_0"]());
        }, liftReaderT(Control_Plus.empty(__dict_Plus_60)));
    };
    var alternativeReaderT = function (__dict_Alternative_65) {
        return new Control_Alternative.Alternative(function () {
            return plusReaderT(__dict_Alternative_65["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeReaderT(__dict_Alternative_65["__superclass_Prelude.Applicative_0"]());
        });
    };
    var monadPlusReaderT = function (__dict_MonadPlus_58) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeReaderT(__dict_MonadPlus_58["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadReaderT(__dict_MonadPlus_58["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        ReaderT: ReaderT, 
        liftCallCCReader: liftCallCCReader, 
        liftCatchReader: liftCatchReader, 
        liftReaderT: liftReaderT, 
        mapReaderT: mapReaderT, 
        withReaderT: withReaderT, 
        runReaderT: runReaderT, 
        functorReaderT: functorReaderT, 
        applyReaderT: applyReaderT, 
        applicativeReaderT: applicativeReaderT, 
        altReaderT: altReaderT, 
        plusReaderT: plusReaderT, 
        alternativeReaderT: alternativeReaderT, 
        bindReaderT: bindReaderT, 
        monadReaderT: monadReaderT, 
        monadPlusReaderT: monadPlusReaderT, 
        monadTransReaderT: monadTransReaderT
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var showEither = function (__dict_Show_67) {
        return function (__dict_Show_68) {
            return new Prelude.Show(function (_98) {
                if (_98 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_67)(_98.value0) + ")");
                };
                if (_98 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_68)(_98.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = new Prelude.Functor(function (_92) {
        return function (_93) {
            if (_93 instanceof Left) {
                return new Left(_93.value0);
            };
            if (_93 instanceof Right) {
                return new Right(_92(_93.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var eqEither = function (__dict_Eq_71) {
        return function (__dict_Eq_72) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_71)(__dict_Eq_72))(a)(b);
                };
            }, function (_99) {
                return function (_100) {
                    if (_99 instanceof Left && _100 instanceof Left) {
                        return Prelude["=="](__dict_Eq_71)(_99.value0)(_100.value0);
                    };
                    if (_99 instanceof Right && _100 instanceof Right) {
                        return Prelude["=="](__dict_Eq_72)(_99.value0)(_100.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_69) {
        return function (__dict_Ord_70) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_69["__superclass_Prelude.Eq_0"]())(__dict_Ord_70["__superclass_Prelude.Eq_0"]());
            }, function (_101) {
                return function (_102) {
                    if (_101 instanceof Left && _102 instanceof Left) {
                        return Prelude.compare(__dict_Ord_69)(_101.value0)(_102.value0);
                    };
                    if (_101 instanceof Right && _102 instanceof Right) {
                        return Prelude.compare(__dict_Ord_70)(_101.value0)(_102.value0);
                    };
                    if (_101 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_102 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_89) {
        return function (_90) {
            return function (_91) {
                if (_91 instanceof Left) {
                    return _89(_91.value0);
                };
                if (_91 instanceof Right) {
                    return _90(_91.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = new Prelude.Apply(function (_94) {
        return function (_95) {
            if (_94 instanceof Left) {
                return new Left(_94.value0);
            };
            if (_94 instanceof Right) {
                return Prelude["<$>"](functorEither)(_94.value0)(_95);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_96) {
        return function (_97) {
            if (_96 instanceof Left) {
                return _97;
            };
            return _96;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        isRight: isRight, 
        isLeft: isLeft, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither, 
        showEither: showEither, 
        eqEither: eqEither, 
        ordEither: ordEither
    };
})();
var PS = PS || {};
PS.Data_Either_Nested = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var choice2 = Data_Either.either;
    var choice3 = function (a) {
        return function (b) {
            return function (c) {
                return Data_Either.either(a)(choice2(b)(c));
            };
        };
    };
    var choice4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Data_Either.either(a)(choice3(b)(c)(d));
                };
            };
        };
    };
    var choice5 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return Data_Either.either(a)(choice4(b)(c)(d)(e));
                    };
                };
            };
        };
    };
    var choice6 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return Data_Either.either(a)(choice5(b)(c)(d)(e)(f));
                        };
                    };
                };
            };
        };
    };
    var choice7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return Data_Either.either(a)(choice6(b)(c)(d)(e)(f)(g));
                            };
                        };
                    };
                };
            };
        };
    };
    var choice8 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return Data_Either.either(a)(choice7(b)(c)(d)(e)(f)(g)(h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice9 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return Data_Either.either(a)(choice8(b)(c)(d)(e)(f)(g)(h)(i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice10 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return Data_Either.either(a)(choice9(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        choice10: choice10, 
        choice9: choice9, 
        choice8: choice8, 
        choice7: choice7, 
        choice6: choice6, 
        choice5: choice5, 
        choice4: choice4, 
        choice3: choice3, 
        choice2: choice2
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Choice = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Profunctor = PS.Data_Profunctor;
    var Choice = function (__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this.left = left;
        this.right = right;
    };
    var right = function (dict) {
        return dict.right;
    };
    var left = function (dict) {
        return dict.left;
    };
    var choiceArr = new Choice(function () {
        return Data_Profunctor.profunctorArr;
    }, function (_103) {
        return function (_104) {
            if (_104 instanceof Data_Either.Left) {
                return Data_Either.Left.create(_103(_104.value0));
            };
            if (_104 instanceof Data_Either.Right) {
                return new Data_Either.Right(_104.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, Prelude["<$>"](Data_Either.functorEither));
    return {
        Choice: Choice, 
        right: right, 
        left: left, 
        choiceArr: choiceArr
    };
})();
var PS = PS || {};
PS.Optic_Internal_Prism = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Market = (function () {
        function Market(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Market.create = function (value0) {
            return function (value1) {
                return new Market(value0, value1);
            };
        };
        return Market;
    })();
    var profunctorMarket = new Data_Profunctor.Profunctor(function (_107) {
        return function (_108) {
            return function (_109) {
                return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_109.value0)(_108), Prelude[">>>"](Prelude.semigroupoidArr)(_107)(Prelude[">>>"](Prelude.semigroupoidArr)(_109.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(_108)(Data_Either.Left.create))(Data_Either.Right.create))));
            };
        };
    });
    var functorMarket = new Prelude.Functor(function (_105) {
        return function (_106) {
            return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_106.value0)(_105), Prelude[">>>"](Prelude.semigroupoidArr)(_106.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(_105)(Data_Either.Left.create))(Data_Either.Right.create)));
        };
    });
    var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
        return profunctorMarket;
    }, function (_110) {
        return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_110.value0)(Data_Either.Left.create), function (thing) {
            if (thing instanceof Data_Either.Left) {
                return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Either.Left.create)(Data_Either.Left.create))(Data_Either.Right.create)(_110.value1(thing.value0));
            };
            if (thing instanceof Data_Either.Right) {
                return Data_Either.Left.create(new Data_Either.Right(thing.value0));
            };
            throw new Error("Failed pattern match");
        });
    }, function (_111) {
        return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_111.value0)(Data_Either.Right.create), function (thing) {
            if (thing instanceof Data_Either.Left) {
                return Data_Either.Left.create(new Data_Either.Left(thing.value0));
            };
            if (thing instanceof Data_Either.Right) {
                return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Data_Either.Left.create))(Data_Either.Right.create)(_111.value1(thing.value0));
            };
            throw new Error("Failed pattern match");
        });
    });
    return {
        Market: Market, 
        functorMarket: functorMarket, 
        profunctorMarket: profunctorMarket, 
        choiceMarket: choiceMarket
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var showMaybe = function (__dict_Show_73) {
        return new Prelude.Show(function (_127) {
            if (_127 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_73)(_127.value0) + ")");
            };
            if (_127 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_74) {
        return new Prelude.Semigroup(function (_125) {
            return function (_126) {
                if (_125 instanceof Nothing) {
                    return _126;
                };
                if (_126 instanceof Nothing) {
                    return _125;
                };
                if (_125 instanceof Just && _126 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_74)(_125.value0)(_126.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_112) {
        return function (_113) {
            return function (_114) {
                if (_114 instanceof Nothing) {
                    return _112;
                };
                if (_114 instanceof Just) {
                    return _113(_114.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (_115) {
        return function (_116) {
            if (_116 instanceof Just) {
                return new Just(_115(_116.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var extendMaybe = new Control_Extend.Extend(function (_123) {
        return function (_124) {
            if (_124 instanceof Nothing) {
                return Nothing.value;
            };
            return Just.create(_123(_124));
        };
    }, function () {
        return functorMaybe;
    });
    var eqMaybe = function (__dict_Eq_76) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_76))(a)(b);
            };
        }, function (_128) {
            return function (_129) {
                if (_128 instanceof Nothing && _129 instanceof Nothing) {
                    return true;
                };
                if (_128 instanceof Just && _129 instanceof Just) {
                    return Prelude["=="](__dict_Eq_76)(_128.value0)(_129.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_75) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_75["__superclass_Prelude.Eq_0"]());
        }, function (_130) {
            return function (_131) {
                if (_130 instanceof Just && _131 instanceof Just) {
                    return Prelude.compare(__dict_Ord_75)(_130.value0)(_131.value0);
                };
                if (_130 instanceof Nothing && _131 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_130 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_131 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_117) {
        return function (_118) {
            if (_117 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_117.value0)(_118);
            };
            if (_117 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_121) {
        return function (_122) {
            if (_121 instanceof Just) {
                return _122(_121.value0);
            };
            if (_121 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_119) {
        return function (_120) {
            if (_119 instanceof Nothing) {
                return _120;
            };
            return _119;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        isNothing: isNothing, 
        isJust: isJust, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        extendMaybe: extendMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe, 
        eqMaybe: eqMaybe, 
        ordMaybe: ordMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            var _906 = n < 0 || (n >= length(xs) || isInt(n));
            if (_906) {
                return Data_Maybe.Nothing.value;
            };
            if (!_906) {
                return new Data_Maybe.Just(xs[n]);
            };
            throw new Error("Failed pattern match");
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_134) {
        if (_134.length >= 1) {
            var _909 = _134.slice(1);
            return new Data_Maybe.Just(_909);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__150) {
            return function (__copy__151) {
                return function (__copy__152) {
                    var _150 = __copy__150;
                    var _151 = __copy__151;
                    var _152 = __copy__152;
                    tco: while (true) {
                        if (_152.length >= 1) {
                            var _914 = _152.slice(1);
                            if (_151(_152[0])) {
                                var __tco__150 = Prelude[":"](_152[0])(_150);
                                var __tco__151 = _151;
                                _150 = __tco__150;
                                _151 = __tco__151;
                                _152 = _914;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_150), 
                            rest: _152
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var takeWhile = function (p) {
        return function (xs) {
            return (span(p)(xs)).init;
        };
    };
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _915 = comp(x)(y);
                    if (_915 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_915 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_915 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_77) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_77))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_136) {
        if (_136.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_143) {
        return function (_144) {
            if (_144.length === 0) {
                return [  ];
            };
            if (_144.length >= 1) {
                var _920 = _144.slice(1);
                return Prelude[":"](_144[0])(nubBy(_143)(filter(function (y) {
                    return !_143(_144[0])(y);
                })(_920)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_78) {
        return nubBy(Prelude["=="](__dict_Eq_78));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__133) {
        var _133 = __copy__133;
        tco: while (true) {
            if (_133.length >= 1) {
                var _923 = _133.slice(1);
                if (_923.length === 0) {
                    return new Data_Maybe.Just(_133[0]);
                };
            };
            if (_133.length >= 1) {
                var _925 = _133.slice(1);
                _133 = _925;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_140) {
        return function (_141) {
            return function (_142) {
                if (_141.length === 0) {
                    return [  ];
                };
                if (_142.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_140(x))(_142) >= 0;
                };
                return filter(el)(_141);
            };
        };
    };
    var intersect = function (__dict_Eq_79) {
        return intersectBy(Prelude["=="](__dict_Eq_79));
    };
    var init = function (_135) {
        if (_135.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_135) - 1)(_135));
    };
    var head = function (_132) {
        if (_132.length >= 1) {
            var _932 = _132.slice(1);
            return new Data_Maybe.Just(_132[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__147) {
            return function (__copy__148) {
                return function (__copy__149) {
                    var _147 = __copy__147;
                    var _148 = __copy__148;
                    var _149 = __copy__149;
                    tco: while (true) {
                        if (_149.length === 0) {
                            return reverse(_147);
                        };
                        if (_149.length >= 1) {
                            var _937 = _149.slice(1);
                            var sp = span(_148(_149[0]))(_937);
                            var __tco__147 = Prelude[":"](Prelude[":"](_149[0])(sp.init))(_147);
                            var __tco__148 = _148;
                            _147 = __tco__147;
                            _148 = __tco__148;
                            _149 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_80) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_80))(xs);
        };
    };
    
    /**
     *  | Performs a sorting first.
     */
    var group$prime = function (__dict_Ord_81) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_81["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_81));
    };
    var functorArray = new Prelude.Functor(map);
    var elemLastIndex = function (__dict_Eq_82) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_82)(x));
        };
    };
    var elemIndex = function (__dict_Eq_83) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_83)(x));
        };
    };
    var dropWhile = function (p) {
        return function (xs) {
            return (span(p)(xs)).rest;
        };
    };
    var deleteBy = function (_137) {
        return function (_138) {
            return function (_139) {
                if (_139.length === 0) {
                    return [  ];
                };
                var _941 = findIndex(_137(_138))(_139);
                if (_941 < 0) {
                    return _139;
                };
                return deleteAt(_941)(1)(_139);
            };
        };
    };
    var $$delete = function (__dict_Eq_84) {
        return deleteBy(Prelude["=="](__dict_Eq_84));
    };
    var $bslash$bslash = function (__dict_Eq_85) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__145) {
                    return function (__copy__146) {
                        var _145 = __copy__145;
                        var _146 = __copy__146;
                        tco: while (true) {
                            if (_146.length === 0) {
                                return _145;
                            };
                            if (_145.length === 0) {
                                return [  ];
                            };
                            if (_146.length >= 1) {
                                var _945 = _146.slice(1);
                                var __tco__145 = $$delete(__dict_Eq_85)(_146[0])(_145);
                                _145 = __tco__145;
                                _146 = _945;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    var altArray = new Control_Alt.Alt(append, function () {
        return functorArray;
    });
    var plusArray = new Control_Plus.Plus(function () {
        return altArray;
    }, [  ]);
    var alternativeArray = new Control_Alternative.Alternative(function () {
        return plusArray;
    }, function () {
        return applicativeArray;
    });
    var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
        return alternativeArray;
    }, function () {
        return monadArray;
    });
    return {
        takeWhile: takeWhile, 
        dropWhile: dropWhile, 
        span: span, 
        groupBy: groupBy, 
        "group'": group$prime, 
        group: group, 
        sortBy: sortBy, 
        sort: sort, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        "\\\\": $bslash$bslash, 
        "delete": $$delete, 
        deleteBy: deleteBy, 
        updateAt: updateAt, 
        deleteAt: deleteAt, 
        insertAt: insertAt, 
        take: take, 
        drop: drop, 
        reverse: reverse, 
        concat: concat, 
        append: append, 
        elemLastIndex: elemLastIndex, 
        elemIndex: elemIndex, 
        findLastIndex: findLastIndex, 
        findIndex: findIndex, 
        length: length, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        map: map, 
        "null": $$null, 
        init: init, 
        tail: tail, 
        last: last, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray, 
        altArray: altArray, 
        plusArray: plusArray, 
        alternativeArray: alternativeArray, 
        monadPlusArray: monadPlusArray
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };
    
  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };
    
  function pushAllSTArrayImpl(arr, as) {
    return function(){
      return arr.push.apply(arr, as);
    };
  };
    
  function spliceSTArrayImpl(arr, index, howMany, bs) {
    return function(){
      return arr.splice.apply(arr, [index, howMany].concat(bs));
    };
  };
    
  function copyImpl(arr) {
    return function(){
      var as = [];
      var i = -1;
      var n = arr.length;
      while(++i < n) {
        as[i] = arr[i];
      }
      return as;
    };
  };
    
  function toAssocArray(arr) {
    return function(){
      var as = [];
      var i = -1;
      var n = arr.length;
      while(++i < n) {
        as[i] = {value: arr[i], index: i};
      }
      return as;
    };
  };
    var thaw = copyImpl;
    var spliceSTArray = Data_Function.runFn4(spliceSTArrayImpl);
    var pushAllSTArray = Data_Function.runFn2(pushAllSTArrayImpl);
    var pushSTArray = function (arr) {
        return function (a) {
            return pushAllSTArray(arr)([ a ]);
        };
    };
    var pokeSTArray = function (arr) {
        return function (i) {
            return function (a) {
                return pokeSTArrayImpl(arr, i, a);
            };
        };
    };
    var peekSTArray = function (arr) {
        return function (i) {
            return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var freeze = copyImpl;
    return {
        toAssocArray: toAssocArray, 
        thaw: thaw, 
        freeze: freeze, 
        spliceSTArray: spliceSTArray, 
        pushAllSTArray: pushAllSTArray, 
        pushSTArray: pushSTArray, 
        pokeSTArray: pokeSTArray, 
        peekSTArray: peekSTArray, 
        emptySTArray: emptySTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_153) {
        if (_153 instanceof Data_Maybe.Just) {
            return _153.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Prelude = PS.Prelude;
    var tail = function (_155) {
        if (_155.length >= 1) {
            var _950 = _155.slice(1);
            return _950;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_154) {
        if (_154.length >= 1) {
            var _953 = _154.slice(1);
            return _154[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = new Monoid(function () {
        return Prelude.semigroupUnit;
    }, Prelude.unit);
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_86) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_86);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_87) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_87["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_87)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray, 
        monoidUnit: monoidUnit, 
        monoidArr: monoidArr, 
        monoidMaybe: monoidMaybe
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = function (x) {
        return x;
    };
    var showAll = new Prelude.Show(function (_161) {
        return "All (" + (Prelude.show(Prelude.showBoolean)(_161) + ")");
    });
    var semigroupAll = new Prelude.Semigroup(function (_162) {
        return function (_163) {
            return _162 && _163;
        };
    });
    var runAll = function (_156) {
        return _156;
    };
    var monoidAll = new Data_Monoid.Monoid(function () {
        return semigroupAll;
    }, true);
    var eqAll = new Prelude.Eq(function (_159) {
        return function (_160) {
            return _159 !== _160;
        };
    }, function (_157) {
        return function (_158) {
            return _157 === _158;
        };
    });
    return {
        All: All, 
        runAll: runAll, 
        eqAll: eqAll, 
        showAll: showAll, 
        semigroupAll: semigroupAll, 
        monoidAll: monoidAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = function (x) {
        return x;
    };
    var showAny = new Prelude.Show(function (_169) {
        return "Any (" + (Prelude.show(Prelude.showBoolean)(_169) + ")");
    });
    var semigroupAny = new Prelude.Semigroup(function (_170) {
        return function (_171) {
            return _170 || _171;
        };
    });
    var runAny = function (_164) {
        return _164;
    };
    var monoidAny = new Data_Monoid.Monoid(function () {
        return semigroupAny;
    }, false);
    var eqAny = new Prelude.Eq(function (_167) {
        return function (_168) {
            return _167 !== _168;
        };
    }, function (_165) {
        return function (_166) {
            return _165 === _166;
        };
    });
    return {
        Any: Any, 
        runAny: runAny, 
        eqAny: eqAny, 
        showAny: showAny, 
        semigroupAny: semigroupAny, 
        monoidAny: monoidAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = function (x) {
        return x;
    };
    var showDual = function (__dict_Show_88) {
        return new Prelude.Show(function (_179) {
            return "Dual (" + (Prelude.show(__dict_Show_88)(_179) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_89) {
        return new Prelude.Semigroup(function (_180) {
            return function (_181) {
                return Prelude["<>"](__dict_Semigroup_89)(_181)(_180);
            };
        });
    };
    var runDual = function (_172) {
        return _172;
    };
    var monoidDual = function (__dict_Monoid_91) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_91["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_91));
    };
    var eqDual = function (__dict_Eq_92) {
        return new Prelude.Eq(function (_175) {
            return function (_176) {
                return Prelude["/="](__dict_Eq_92)(_175)(_176);
            };
        }, function (_173) {
            return function (_174) {
                return Prelude["=="](__dict_Eq_92)(_173)(_174);
            };
        });
    };
    var ordDual = function (__dict_Ord_90) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_90["__superclass_Prelude.Eq_0"]());
        }, function (_177) {
            return function (_178) {
                return Prelude.compare(__dict_Ord_90)(_177)(_178);
            };
        });
    };
    return {
        Dual: Dual, 
        runDual: runDual, 
        eqDual: eqDual, 
        ordDual: ordDual, 
        showDual: showDual, 
        semigroupDual: semigroupDual, 
        monoidDual: monoidDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = function (x) {
        return x;
    };
    var semigroupEndo = new Prelude.Semigroup(function (_183) {
        return function (_184) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_183)(_184);
        };
    });
    var runEndo = function (_182) {
        return _182;
    };
    var monoidEndo = new Data_Monoid.Monoid(function () {
        return semigroupEndo;
    }, Prelude.id(Prelude.categoryArr));
    return {
        Endo: Endo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo, 
        monoidEndo: monoidEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = function (x) {
        return x;
    };
    var showProduct = new Prelude.Show(function (_192) {
        return "Product (" + (Prelude.show(Prelude.showNumber)(_192) + ")");
    });
    var semigroupProduct = new Prelude.Semigroup(function (_193) {
        return function (_194) {
            return _193 * _194;
        };
    });
    var runProduct = function (_185) {
        return _185;
    };
    var monoidProduct = new Data_Monoid.Monoid(function () {
        return semigroupProduct;
    }, 1);
    var eqProduct = new Prelude.Eq(function (_188) {
        return function (_189) {
            return _188 !== _189;
        };
    }, function (_186) {
        return function (_187) {
            return _186 === _187;
        };
    });
    var ordProduct = new Prelude.Ord(function () {
        return eqProduct;
    }, function (_190) {
        return function (_191) {
            return Prelude.compare(Prelude.ordNumber)(_190)(_191);
        };
    });
    return {
        Product: Product, 
        runProduct: runProduct, 
        eqProduct: eqProduct, 
        ordProduct: ordProduct, 
        showProduct: showProduct, 
        semigroupProduct: semigroupProduct, 
        monoidProduct: monoidProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = function (x) {
        return x;
    };
    var showSum = new Prelude.Show(function (_202) {
        return "Sum (" + (Prelude.show(Prelude.showNumber)(_202) + ")");
    });
    var semigroupSum = new Prelude.Semigroup(function (_203) {
        return function (_204) {
            return _203 + _204;
        };
    });
    var runSum = function (_195) {
        return _195;
    };
    var monoidSum = new Data_Monoid.Monoid(function () {
        return semigroupSum;
    }, 0);
    var eqSum = new Prelude.Eq(function (_198) {
        return function (_199) {
            return _198 !== _199;
        };
    }, function (_196) {
        return function (_197) {
            return _196 === _197;
        };
    });
    var ordSum = new Prelude.Ord(function () {
        return eqSum;
    }, function (_200) {
        return function (_201) {
            return Prelude.compare(Prelude.ordNumber)(_200)(_201);
        };
    });
    return {
        Sum: Sum, 
        runSum: runSum, 
        eqSum: eqSum, 
        ordSum: ordSum, 
        showSum: showSum, 
        semigroupSum: semigroupSum, 
        monoidSum: monoidSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_209) {
        if (_209.length >= 1) {
            var _1010 = _209.slice(1);
            var _1004 = unzip(_1010);
            return new Tuple(Prelude[":"]((_209[0]).value0)(_1004.value0), Prelude[":"]((_209[0]).value1)(_1004.value1));
        };
        if (_209.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_207) {
        return function (_208) {
            return _207(_208.value0)(_208.value1);
        };
    };
    var swap = function (_210) {
        return new Tuple(_210.value1, _210.value0);
    };
    var snd = function (_206) {
        return _206.value1;
    };
    var showTuple = function (__dict_Show_93) {
        return function (__dict_Show_94) {
            return new Prelude.Show(function (_211) {
                return "Tuple (" + (Prelude.show(__dict_Show_93)(_211.value0) + (") (" + (Prelude.show(__dict_Show_94)(_211.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = new Prelude.Semigroupoid(function (_216) {
        return function (_217) {
            return new Tuple(_217.value0, _216.value1);
        };
    });
    var semigroupTuple = function (__dict_Semigroup_95) {
        return function (__dict_Semigroup_96) {
            return new Prelude.Semigroup(function (_218) {
                return function (_219) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_95)(_218.value0)(_219.value0), Prelude["<>"](__dict_Semigroup_96)(_218.value1)(_219.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_99) {
        return function (__dict_Monoid_100) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_99["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_100["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_99), Data_Monoid.mempty(__dict_Monoid_100)));
        };
    };
    var functorTuple = new Prelude.Functor(function (_220) {
        return function (_221) {
            return new Tuple(_221.value0, _220(_221.value1));
        };
    });
    var fst = function (_205) {
        return _205.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_102) {
        return function (__dict_Lazy1_103) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_102)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_103)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_104) {
        return function (__dict_Lazy2_105) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_104)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_105)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_106) {
        return function (__dict_Lazy_107) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_106)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_107)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = new Control_Extend.Extend(function (_226) {
        return function (_227) {
            return new Tuple(_227.value0, _226(_227));
        };
    }, function () {
        return functorTuple;
    });
    var eqTuple = function (__dict_Eq_108) {
        return function (__dict_Eq_109) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_108)(__dict_Eq_109))(t1)(t2);
                };
            }, function (_212) {
                return function (_213) {
                    return Prelude["=="](__dict_Eq_108)(_212.value0)(_213.value0) && Prelude["=="](__dict_Eq_109)(_212.value1)(_213.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_97) {
        return function (__dict_Ord_98) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_97["__superclass_Prelude.Eq_0"]())(__dict_Ord_98["__superclass_Prelude.Eq_0"]());
            }, function (_214) {
                return function (_215) {
                    var _1055 = Prelude.compare(__dict_Ord_97)(_214.value0)(_215.value0);
                    if (_1055 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_98)(_214.value1)(_215.value1);
                    };
                    return _1055;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = new Control_Comonad.Comonad(function () {
        return extendTuple;
    }, snd);
    var applyTuple = function (__dict_Semigroup_111) {
        return new Prelude.Apply(function (_222) {
            return function (_223) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_111)(_222.value0)(_223.value0), _222.value1(_223.value1));
            };
        }, function () {
            return functorTuple;
        });
    };
    var bindTuple = function (__dict_Semigroup_110) {
        return new Prelude.Bind(function (_224) {
            return function (_225) {
                var _1068 = _225(_224.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_110)(_224.value0)(_1068.value0), _1068.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_110);
        });
    };
    var applicativeTuple = function (__dict_Monoid_112) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_112["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_112)));
    };
    var monadTuple = function (__dict_Monoid_101) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_101);
        }, function () {
            return bindTuple(__dict_Monoid_101["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        unzip: unzip, 
        zip: zip, 
        uncurry: uncurry, 
        curry: curry, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple, 
        eqTuple: eqTuple, 
        ordTuple: ordTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        semigroupTuple: semigroupTuple, 
        monoidTuple: monoidTuple, 
        functorTuple: functorTuple, 
        applyTuple: applyTuple, 
        applicativeTuple: applicativeTuple, 
        bindTuple: bindTuple, 
        monadTuple: monadTuple, 
        extendTuple: extendTuple, 
        comonadTuple: comonadTuple, 
        lazyTuple: lazyTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Data_Tuple = PS.Data_Tuple;
    var EnvT = function (x) {
        return x;
    };
    var withEnvT = function (_229) {
        return function (_230) {
            return EnvT(new Data_Tuple.Tuple(_229(_230.value0), _230.value1));
        };
    };
    var runEnvT = function (_228) {
        return _228;
    };
    var mapEnvT = function (_231) {
        return function (_232) {
            return EnvT(new Data_Tuple.Tuple(_232.value0, _231(_232.value1)));
        };
    };
    var functorEnvT = function (__dict_Functor_113) {
        return new Prelude.Functor(function (_233) {
            return function (_234) {
                return EnvT(new Data_Tuple.Tuple(_234.value0, Prelude["<$>"](__dict_Functor_113)(_233)(_234.value1)));
            };
        });
    };
    var extendEnvT = function (__dict_Extend_114) {
        return new Control_Extend.Extend(function (_235) {
            return function (_236) {
                return EnvT(new Data_Tuple.Tuple(_236.value0, Prelude["<$>"](__dict_Extend_114["__superclass_Prelude.Functor_0"]())(_235)(Control_Extend["<<="](__dict_Extend_114)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tuple.Tuple.create(_236.value0))(EnvT))(_236.value1))));
            };
        }, function () {
            return functorEnvT(__dict_Extend_114["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransEnvT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_115) {
        return function (_238) {
            return _238.value1;
        };
    });
    var comonadEnvT = function (__dict_Comonad_116) {
        return new Control_Comonad.Comonad(function () {
            return extendEnvT(__dict_Comonad_116["__superclass_Control.Extend.Extend_0"]());
        }, function (_237) {
            return Control_Comonad.extract(__dict_Comonad_116)(_237.value1);
        });
    };
    return {
        EnvT: EnvT, 
        mapEnvT: mapEnvT, 
        withEnvT: withEnvT, 
        runEnvT: runEnvT, 
        functorEnvT: functorEnvT, 
        extendEnvT: extendEnvT, 
        comonadEnvT: comonadEnvT, 
        comonadTransEnvT: comonadTransEnvT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var StoreT = function (x) {
        return x;
    };
    var runStoreT = function (_239) {
        return _239;
    };
    var functorStoreT = function (__dict_Functor_117) {
        return new Prelude.Functor(function (_240) {
            return function (_241) {
                return StoreT(new Data_Tuple.Tuple(Prelude["<$>"](__dict_Functor_117)(function (h) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(h)(_240);
                })(_241.value0), _241.value1));
            };
        });
    };
    var extendStoreT = function (__dict_Extend_118) {
        return new Control_Extend.Extend(function (_242) {
            return function (_243) {
                return StoreT(new Data_Tuple.Tuple(Control_Extend["<<="](__dict_Extend_118)(function (w$prime) {
                    return function (s$prime) {
                        return _242(StoreT(new Data_Tuple.Tuple(w$prime, s$prime)));
                    };
                })(_243.value0), _243.value1));
            };
        }, function () {
            return functorStoreT(__dict_Extend_118["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransStoreT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_119) {
        return function (_245) {
            return Prelude["<$>"]((__dict_Comonad_119["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                return f(_245.value1);
            })(_245.value0);
        };
    });
    var comonadStoreT = function (__dict_Comonad_120) {
        return new Control_Comonad.Comonad(function () {
            return extendStoreT(__dict_Comonad_120["__superclass_Control.Extend.Extend_0"]());
        }, function (_244) {
            return Control_Comonad.extract(__dict_Comonad_120)(_244.value0)(_244.value1);
        });
    };
    return {
        StoreT: StoreT, 
        runStoreT: runStoreT, 
        functorStoreT: functorStoreT, 
        extendStoreT: extendStoreT, 
        comonadStoreT: comonadStoreT, 
        comonadTransStoreT: comonadTransStoreT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var ComonadStore = function (__superclass_Control$dotComonad$dotComonad_0, peek, pos) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.peek = peek;
        this.pos = pos;
    };
    var pos = function (dict) {
        return dict.pos;
    };
    var peek = function (dict) {
        return dict.peek;
    };
    var peeks = function (__dict_ComonadStore_121) {
        return function (f) {
            return function (x) {
                return peek(__dict_ComonadStore_121)(f(pos(__dict_ComonadStore_121)(x)))(x);
            };
        };
    };
    var seeks = function (__dict_ComonadStore_122) {
        return function (__dict_Extend_123) {
            return function (f) {
                return function (x) {
                    return peeks(__dict_ComonadStore_122)(f)(Control_Extend.duplicate(__dict_Extend_123)(x));
                };
            };
        };
    };
    var seek = function (__dict_ComonadStore_124) {
        return function (__dict_Extend_125) {
            return function (s) {
                return function (x) {
                    return peek(__dict_ComonadStore_124)(s)(Control_Extend.duplicate(__dict_Extend_125)(x));
                };
            };
        };
    };
    var experiment = function (__dict_ComonadStore_126) {
        return function (__dict_Functor_127) {
            return function (f) {
                return function (x) {
                    return Prelude["<$>"](__dict_Functor_127)(Prelude.flip(peek(__dict_ComonadStore_126))(x))(f(pos(__dict_ComonadStore_126)(x)));
                };
            };
        };
    };
    var comonadStoreStoreT = function (__dict_Comonad_128) {
        return new ComonadStore(function () {
            return Control_Comonad_Store_Trans.comonadStoreT(__dict_Comonad_128);
        }, function (_247) {
            return function (_248) {
                return Control_Comonad.extract(__dict_Comonad_128)(_248.value0)(_247);
            };
        }, function (_246) {
            return _246.value1;
        });
    };
    return {
        ComonadStore: ComonadStore, 
        seeks: seeks, 
        seek: seek, 
        peeks: peeks, 
        experiment: experiment, 
        peek: peek, 
        pos: pos, 
        comonadStoreStoreT: comonadStoreStoreT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Data_Tuple = PS.Data_Tuple;
    var TracedT = function (x) {
        return x;
    };
    var runTracedT = function (_249) {
        return _249;
    };
    var functorTracedT = function (__dict_Functor_129) {
        return new Prelude.Functor(function (_250) {
            return function (_251) {
                return Prelude["<$>"](__dict_Functor_129)(function (g) {
                    return function (t) {
                        return _250(g(t));
                    };
                })(_251);
            };
        });
    };
    var extendTracedT = function (__dict_Extend_130) {
        return function (__dict_Semigroup_131) {
            return new Control_Extend.Extend(function (_252) {
                return function (_253) {
                    return Control_Extend["<<="](__dict_Extend_130)(function (w_1) {
                        return function (t) {
                            return _252(Prelude["<$>"](__dict_Extend_130["__superclass_Prelude.Functor_0"]())(function (h) {
                                return function (t$prime) {
                                    return h(Prelude["<>"](__dict_Semigroup_131)(t)(t$prime));
                                };
                            })(w_1));
                        };
                    })(_253);
                };
            }, function () {
                return functorTracedT(__dict_Extend_130["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var comonadTransTracedT = function (__dict_Monoid_132) {
        return new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_133) {
            return function (_255) {
                return Prelude["<$>"]((__dict_Comonad_133["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                    return f(Data_Monoid.mempty(__dict_Monoid_132));
                })(_255);
            };
        });
    };
    var comonadTracedT = function (__dict_Comonad_134) {
        return function (__dict_Monoid_135) {
            return new Control_Comonad.Comonad(function () {
                return extendTracedT(__dict_Comonad_134["__superclass_Control.Extend.Extend_0"]())(__dict_Monoid_135["__superclass_Prelude.Semigroup_0"]());
            }, function (_254) {
                return Control_Comonad.extract(__dict_Comonad_134)(_254)(Data_Monoid.mempty(__dict_Monoid_135));
            });
        };
    };
    return {
        TracedT: TracedT, 
        runTracedT: runTracedT, 
        functorTracedT: functorTracedT, 
        extendTracedT: extendTracedT, 
        comonadTracedT: comonadTracedT, 
        comonadTransTracedT: comonadTransTracedT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var ComonadTraced = function (__superclass_Control$dotComonad$dotComonad_0, track) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.track = track;
    };
    var track = function (dict) {
        return dict.track;
    };
    var tracks = function (__dict_Comonad_136) {
        return function (__dict_ComonadTraced_137) {
            return function (f) {
                return function (w) {
                    return track(__dict_ComonadTraced_137)(f(Control_Comonad.extract(__dict_Comonad_136)(w)))(w);
                };
            };
        };
    };
    var listens = function (__dict_Functor_138) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_138)(function (g) {
                    return function (t) {
                        return new Data_Tuple.Tuple(g(t), f(t));
                    };
                })(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    var listen = function (__dict_Functor_139) {
        return function (tr) {
            return Prelude["<$>"](__dict_Functor_139)(function (f) {
                return function (t) {
                    return new Data_Tuple.Tuple(f(t), t);
                };
            })(Control_Comonad_Traced_Trans.runTracedT(tr));
        };
    };
    var comonadTracedTracedT = function (__dict_Comonad_140) {
        return function (__dict_Monoid_141) {
            return new ComonadTraced(function () {
                return Control_Comonad_Traced_Trans.comonadTracedT(__dict_Comonad_140)(__dict_Monoid_141);
            }, function (t) {
                return function (tr) {
                    return Control_Comonad.extract(__dict_Comonad_140)(Control_Comonad_Traced_Trans.runTracedT(tr))(t);
                };
            });
        };
    };
    var censor = function (__dict_Functor_142) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_142)(Prelude[">>>"](Prelude.semigroupoidArr)(f))(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    return {
        ComonadTraced: ComonadTraced, 
        censor: censor, 
        listens: listens, 
        listen: listen, 
        tracks: tracks, 
        track: track, 
        comonadTracedTracedT: comonadTracedTracedT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var ErrorT = function (x) {
        return x;
    };
    var runErrorT = function (_256) {
        return _256;
    };
    var monadTransErrorT = function (__dict_Error_145) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_146) {
            return function (m) {
                return ErrorT(Prelude[">>="](__dict_Monad_146["__superclass_Prelude.Bind_1"]())(m)(function (_7) {
                    return Prelude["return"](__dict_Monad_146)(new Data_Either.Right(_7));
                }));
            };
        });
    };
    var mapErrorT = function (f) {
        return function (m) {
            return ErrorT(f(runErrorT(m)));
        };
    };
    var liftPassError = function (__dict_Monad_151) {
        return function (pass) {
            return mapErrorT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_151["__superclass_Prelude.Bind_1"]())(m)(function (_9) {
                    return Prelude["return"](__dict_Monad_151)((function () {
                        if (_9 instanceof Data_Either.Left) {
                            return new Data_Tuple.Tuple(new Data_Either.Left(_9.value0), Prelude.id(Prelude.categoryArr));
                        };
                        if (_9 instanceof Data_Either.Right) {
                            return new Data_Tuple.Tuple(new Data_Either.Right(_9.value0.value0), _9.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenError = function (__dict_Monad_152) {
        return function (listen) {
            return mapErrorT(function (m) {
                return Prelude[">>="](__dict_Monad_152["__superclass_Prelude.Bind_1"]())(listen(m))(function (_8) {
                    return Prelude["return"](__dict_Monad_152)(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                        return new Data_Tuple.Tuple(r, _8.value1);
                    })(_8.value0));
                });
            });
        };
    };
    var liftCallCCError = function (callCC) {
        return function (f) {
            return ErrorT(callCC(function (c) {
                return runErrorT(f(function (a) {
                    return ErrorT(c(new Data_Either.Right(a)));
                }));
            }));
        };
    };
    var functorErrorT = function (__dict_Functor_153) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(ErrorT)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_153)(Prelude["<$>"](Data_Either.functorEither)(f)))(runErrorT));
        });
    };
    var applyErrorT = function (__dict_Apply_156) {
        return new Prelude.Apply(function (_257) {
            return function (_258) {
                return ErrorT(Prelude["<*>"](__dict_Apply_156)(Prelude["<$>"](__dict_Apply_156["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(Prelude["$"]))(_257))(_258));
            };
        }, function () {
            return functorErrorT(__dict_Apply_156["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindErrorT = function (__dict_Monad_154) {
        return function (__dict_Error_155) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return ErrorT(Prelude[">>="](__dict_Monad_154["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_6) {
                        if (_6 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_154)(new Data_Either.Left(_6.value0));
                        };
                        if (_6 instanceof Data_Either.Right) {
                            return runErrorT(f(_6.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return applyErrorT((__dict_Monad_154["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeErrorT = function (__dict_Applicative_157) {
        return new Prelude.Applicative(function () {
            return applyErrorT(__dict_Applicative_157["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return ErrorT(Prelude.pure(__dict_Applicative_157)(new Data_Either.Right(a)));
        });
    };
    var monadErrorT = function (__dict_Monad_149) {
        return function (__dict_Error_150) {
            return new Prelude.Monad(function () {
                return applicativeErrorT(__dict_Monad_149["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindErrorT(__dict_Monad_149)(__dict_Error_150);
            });
        };
    };
    var altErrorT = function (__dict_Monad_160) {
        return function (__dict_Error_161) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return ErrorT(Prelude[">>="](__dict_Monad_160["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                        if (e instanceof Data_Either.Left) {
                            return runErrorT(y);
                        };
                        return Prelude["return"](__dict_Monad_160)(e);
                    }));
                };
            }, function () {
                return functorErrorT(((__dict_Monad_160["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusErrorT = function (__dict_Monad_143) {
        return function (__dict_Error_144) {
            return new Control_Plus.Plus(function () {
                return altErrorT(__dict_Monad_143)(__dict_Error_144);
            }, Prelude["return"](__dict_Monad_143)(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_144)("No alternative"))));
        };
    };
    var alternativeErrorT = function (__dict_Monad_158) {
        return function (__dict_Error_159) {
            return new Control_Alternative.Alternative(function () {
                return plusErrorT(__dict_Monad_158)(__dict_Error_159);
            }, function () {
                return applicativeErrorT(__dict_Monad_158["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusErrorT = function (__dict_Monad_147) {
        return function (__dict_Error_148) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeErrorT(__dict_Monad_147)(__dict_Error_148);
            }, function () {
                return monadErrorT(__dict_Monad_147)(__dict_Error_148);
            });
        };
    };
    return {
        ErrorT: ErrorT, 
        liftCallCCError: liftCallCCError, 
        liftPassError: liftPassError, 
        liftListenError: liftListenError, 
        mapErrorT: mapErrorT, 
        runErrorT: runErrorT, 
        functorErrorT: functorErrorT, 
        applyErrorT: applyErrorT, 
        applicativeErrorT: applicativeErrorT, 
        altErrorT: altErrorT, 
        plusErrorT: plusErrorT, 
        alternativeErrorT: alternativeErrorT, 
        bindErrorT: bindErrorT, 
        monadErrorT: monadErrorT, 
        monadPlusErrorT: monadPlusErrorT, 
        monadTransErrorT: monadTransErrorT
    };
})();
var PS = PS || {};
PS.Control_Monad_Maybe_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad = PS.Control_Monad;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var MaybeT = function (x) {
        return x;
    };
    var runMaybeT = function (_259) {
        return _259;
    };
    var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_162) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude.liftM1(__dict_Monad_162)(Data_Maybe.Just.create));
    });
    var mapMaybeT = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runMaybeT));
    };
    var liftPassMaybe = function (__dict_Monad_164) {
        return function (pass) {
            return mapMaybeT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_164["__superclass_Prelude.Bind_1"]())(m)(function (_12) {
                    return Prelude["return"](__dict_Monad_164)((function () {
                        if (_12 instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryArr));
                        };
                        if (_12 instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(new Data_Maybe.Just(_12.value0.value0), _12.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenMaybe = function (__dict_Monad_165) {
        return function (listen) {
            return mapMaybeT(function (m) {
                return Prelude[">>="](__dict_Monad_165["__superclass_Prelude.Bind_1"]())(listen(m))(function (_11) {
                    return Prelude["return"](__dict_Monad_165)(Prelude["<$>"](Data_Maybe.functorMaybe)(function (r) {
                        return new Data_Tuple.Tuple(r, _11.value1);
                    })(_11.value0));
                });
            });
        };
    };
    var liftCatchMaybe = function ($$catch) {
        return function (m) {
            return function (h) {
                return MaybeT($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidArr)(runMaybeT)(h)));
            };
        };
    };
    var liftCallCCMaybe = function (callCC) {
        return function (f) {
            return MaybeT(callCC(function (c) {
                return runMaybeT(f(function (a) {
                    return MaybeT(c(new Data_Maybe.Just(a)));
                }));
            }));
        };
    };
    var monadMaybeT = function (__dict_Monad_163) {
        return new Prelude.Monad(function () {
            return applicativeMaybeT(__dict_Monad_163);
        }, function () {
            return bindMaybeT(__dict_Monad_163);
        });
    };
    var functorMaybeT = function (__dict_Monad_166) {
        return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_166)));
    };
    var bindMaybeT = function (__dict_Monad_167) {
        return new Prelude.Bind(function (x) {
            return function (f) {
                return MaybeT(Prelude[">>="](__dict_Monad_167["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_10) {
                    if (_10 instanceof Data_Maybe.Nothing) {
                        return Prelude["return"](__dict_Monad_167)(Data_Maybe.Nothing.value);
                    };
                    if (_10 instanceof Data_Maybe.Just) {
                        return runMaybeT(f(_10.value0));
                    };
                    throw new Error("Failed pattern match");
                }));
            };
        }, function () {
            return applyMaybeT(__dict_Monad_167);
        });
    };
    var applyMaybeT = function (__dict_Monad_168) {
        return new Prelude.Apply(Prelude.ap(monadMaybeT(__dict_Monad_168)), function () {
            return functorMaybeT(__dict_Monad_168);
        });
    };
    var applicativeMaybeT = function (__dict_Monad_169) {
        return new Prelude.Applicative(function () {
            return applyMaybeT(__dict_Monad_169);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Monad_169["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
    };
    return {
        MaybeT: MaybeT, 
        liftCallCCMaybe: liftCallCCMaybe, 
        liftPassMaybe: liftPassMaybe, 
        liftListenMaybe: liftListenMaybe, 
        liftCatchMaybe: liftCatchMaybe, 
        mapMaybeT: mapMaybeT, 
        runMaybeT: runMaybeT, 
        functorMaybeT: functorMaybeT, 
        applyMaybeT: applyMaybeT, 
        applicativeMaybeT: applicativeMaybeT, 
        bindMaybeT: bindMaybeT, 
        monadMaybeT: monadMaybeT, 
        monadTransMaybeT: monadTransMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var RWST = function (x) {
        return x;
    };
    var runRWST = function (_262) {
        return _262;
    };
    var withRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
                };
            };
        };
    };
    var mkSee = function (__dict_Monoid_172) {
        return function (s) {
            return function (a) {
                return function (w) {
                    return {
                        state: s, 
                        result: a, 
                        log: w
                    };
                };
            };
        };
    };
    var monadTransRWST = function (__dict_Monoid_173) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_174) {
            return function (m) {
                return function (_) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_174["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                            return Prelude["return"](__dict_Monad_174)(mkSee(__dict_Monoid_173)(s)(a)(Data_Monoid.mempty(__dict_Monoid_173)));
                        });
                    };
                };
            };
        });
    };
    var mapRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return f(runRWST(m)(r)(s));
                };
            };
        };
    };
    var functorRWST = function (__dict_Functor_175) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_175)(function (see) {
                            var _1157 = {};
                            for (var _1158 in see) {
                                if (see.hasOwnProperty(_1158)) {
                                    _1157[_1158] = see[_1158];
                                };
                            };
                            _1157.result = f(see.result);
                            return _1157;
                        })(runRWST(m)(r)(s));
                    };
                };
            };
        });
    };
    var execRWST = function (__dict_Monad_176) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_176["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_176)(new Data_Tuple.Tuple(see.state, see.log));
                    });
                };
            };
        };
    };
    var evalRWST = function (__dict_Monad_177) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_177["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_177)(new Data_Tuple.Tuple(see.result, see.log));
                    });
                };
            };
        };
    };
    var applyRWST = function (__dict_Apply_180) {
        return function (__dict_Semigroup_181) {
            return new Prelude.Apply(function (f) {
                return function (m) {
                    return function (r) {
                        return function (s) {
                            return Prelude["<*>"](__dict_Apply_180)(Prelude["<$>"](__dict_Apply_180["__superclass_Prelude.Functor_0"]())(function (_260) {
                                return function (see) {
                                    var _1160 = {};
                                    for (var _1161 in see) {
                                        if (see.hasOwnProperty(_1161)) {
                                            _1160[_1161] = see[_1161];
                                        };
                                    };
                                    _1160.result = _260.result(see.result);
                                    _1160.log = Prelude["<>"](__dict_Semigroup_181)(_260.log)(see.log);
                                    return _1160;
                                };
                            })(runRWST(f)(r)(s)))(runRWST(m)(r)(s));
                        };
                    };
                };
            }, function () {
                return functorRWST(__dict_Apply_180["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindRWST = function (__dict_Bind_178) {
        return function (__dict_Semigroup_179) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return function (r) {
                        return function (s) {
                            return Prelude[">>="](__dict_Bind_178)(runRWST(m)(r)(s))(function (_261) {
                                return Prelude["<$>"]((__dict_Bind_178["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (see$prime) {
                                    var _1165 = {};
                                    for (var _1166 in see$prime) {
                                        if (see$prime.hasOwnProperty(_1166)) {
                                            _1165[_1166] = see$prime[_1166];
                                        };
                                    };
                                    _1165.log = Prelude["<>"](__dict_Semigroup_179)(_261.log)(see$prime.log);
                                    return _1165;
                                })(runRWST(f(_261.result))(r)(_261.state));
                            });
                        };
                    };
                };
            }, function () {
                return applyRWST(__dict_Bind_178["__superclass_Prelude.Apply_0"]())(__dict_Semigroup_179);
            });
        };
    };
    var applicativeRWST = function (__dict_Applicative_182) {
        return function (__dict_Monoid_183) {
            return new Prelude.Applicative(function () {
                return applyRWST(__dict_Applicative_182["__superclass_Prelude.Apply_0"]())(__dict_Monoid_183["__superclass_Prelude.Semigroup_0"]());
            }, function (a) {
                return function (_) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_182)(mkSee(__dict_Monoid_183)(s)(a)(Data_Monoid.mempty(__dict_Monoid_183)));
                    };
                };
            });
        };
    };
    var monadRWST = function (__dict_Monad_170) {
        return function (__dict_Monoid_171) {
            return new Prelude.Monad(function () {
                return applicativeRWST(__dict_Monad_170["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_171);
            }, function () {
                return bindRWST(__dict_Monad_170["__superclass_Prelude.Bind_1"]())(__dict_Monoid_171["__superclass_Prelude.Semigroup_0"]());
            });
        };
    };
    return {
        RWST: RWST, 
        withRWST: withRWST, 
        mapRWST: mapRWST, 
        execRWST: execRWST, 
        evalRWST: evalRWST, 
        runRWST: runRWST, 
        mkSee: mkSee, 
        functorRWST: functorRWST, 
        applyRWST: applyRWST, 
        bindRWST: bindRWST, 
        applicativeRWST: applicativeRWST, 
        monadRWST: monadRWST, 
        monadTransRWST: monadTransRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Lazy = PS.Control_Lazy;
    var StateT = function (x) {
        return x;
    };
    var runStateT = function (_263) {
        return _263;
    };
    var withStateT = function (f) {
        return function (s) {
            return StateT(Prelude["<<<"](Prelude.semigroupoidArr)(runStateT(s))(f));
        };
    };
    var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_186) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_186["__superclass_Prelude.Bind_1"]())(m)(function (_14) {
                    return Prelude["return"](__dict_Monad_186)(new Data_Tuple.Tuple(_14, s));
                });
            };
        };
    });
    var mapStateT = function (f) {
        return function (m) {
            return StateT(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runStateT(m)));
        };
    };
    var liftPassState = function (__dict_Monad_189) {
        return function (pass) {
            return function (m) {
                return StateT(function (s) {
                    return pass(Prelude[">>="](__dict_Monad_189["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_16) {
                        return Prelude["return"](__dict_Monad_189)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_16.value0.value0, _16.value1), _16.value0.value1));
                    }));
                });
            };
        };
    };
    var liftListenState = function (__dict_Monad_190) {
        return function (listen) {
            return function (m) {
                return StateT(function (s) {
                    return Prelude[">>="](__dict_Monad_190["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_15) {
                        return Prelude["return"](__dict_Monad_190)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_15.value0.value0, _15.value1), _15.value0.value1));
                    });
                });
            };
        };
    };
    var liftCatchState = function ($$catch) {
        return function (m) {
            return function (h) {
                return StateT(function (s) {
                    return $$catch(runStateT(m)(s))(function (e) {
                        return runStateT(h(e))(s);
                    });
                });
            };
        };
    };
    var liftCallCCState$prime = function (callCC) {
        return function (f) {
            return StateT(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT(function (s$prime) {
                            return c(new Data_Tuple.Tuple(a, s$prime));
                        });
                    }))(s);
                });
            });
        };
    };
    var liftCallCCState = function (callCC) {
        return function (f) {
            return StateT(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT(function (_) {
                            return c(new Data_Tuple.Tuple(a, s));
                        });
                    }))(s);
                });
            });
        };
    };
    var lazy1StateT = new Control_Lazy.Lazy1(function (f) {
        return StateT(function (s) {
            return runStateT(f(Prelude.unit))(s);
        });
    });
    var execStateT = function (__dict_Apply_192) {
        return function (m) {
            return function (s) {
                return Prelude["<$>"](__dict_Apply_192["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runStateT(m)(s));
            };
        };
    };
    var evalStateT = function (__dict_Apply_193) {
        return function (m) {
            return function (s) {
                return Prelude["<$>"](__dict_Apply_193["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runStateT(m)(s));
            };
        };
    };
    var monadStateT = function (__dict_Monad_187) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_187);
        }, function () {
            return bindStateT(__dict_Monad_187);
        });
    };
    var functorStateT = function (__dict_Monad_191) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_191)));
    };
    var bindStateT = function (__dict_Monad_194) {
        return new Prelude.Bind(function (_264) {
            return function (_265) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_194["__superclass_Prelude.Bind_1"]())(_264(s))(function (_13) {
                        return runStateT(_265(_13.value0))(_13.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_194);
        });
    };
    var applyStateT = function (__dict_Monad_195) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_195)), function () {
            return functorStateT(__dict_Monad_195);
        });
    };
    var applicativeStateT = function (__dict_Monad_196) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_196);
        }, function (a) {
            return StateT(function (s) {
                return Prelude["return"](__dict_Monad_196)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    var altStateT = function (__dict_Monad_199) {
        return function (__dict_Alt_200) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return StateT(function (s) {
                        return Control_Alt["<|>"](__dict_Alt_200)(runStateT(x)(s))(runStateT(y)(s));
                    });
                };
            }, function () {
                return functorStateT(__dict_Monad_199);
            });
        };
    };
    var plusStateT = function (__dict_Monad_184) {
        return function (__dict_Plus_185) {
            return new Control_Plus.Plus(function () {
                return altStateT(__dict_Monad_184)(__dict_Plus_185["__superclass_Control.Alt.Alt_0"]());
            }, StateT(function (_) {
                return Control_Plus.empty(__dict_Plus_185);
            }));
        };
    };
    var alternativeStateT = function (__dict_Monad_197) {
        return function (__dict_Alternative_198) {
            return new Control_Alternative.Alternative(function () {
                return plusStateT(__dict_Monad_197)(__dict_Alternative_198["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeStateT(__dict_Monad_197);
            });
        };
    };
    var monadPlusStateT = function (__dict_MonadPlus_188) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeStateT(__dict_MonadPlus_188["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_188["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadStateT(__dict_MonadPlus_188["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        StateT: StateT, 
        "liftCallCCState'": liftCallCCState$prime, 
        liftCallCCState: liftCallCCState, 
        liftPassState: liftPassState, 
        liftListenState: liftListenState, 
        liftCatchState: liftCatchState, 
        withStateT: withStateT, 
        mapStateT: mapStateT, 
        execStateT: execStateT, 
        evalStateT: evalStateT, 
        runStateT: runStateT, 
        functorStateT: functorStateT, 
        applyStateT: applyStateT, 
        applicativeStateT: applicativeStateT, 
        altStateT: altStateT, 
        plusStateT: plusStateT, 
        alternativeStateT: alternativeStateT, 
        bindStateT: bindStateT, 
        monadStateT: monadStateT, 
        monadPlusStateT: monadPlusStateT, 
        monadTransStateT: monadTransStateT, 
        lazy1StateT: lazy1StateT
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = function (x) {
        return x;
    };
    var runWriterT = function (_267) {
        return _267;
    };
    var monadTransWriterT = function (__dict_Monoid_205) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_206) {
            return function (m) {
                return WriterT(Prelude[">>="](__dict_Monad_206["__superclass_Prelude.Bind_1"]())(m)(function (_19) {
                    return Prelude["return"](__dict_Monad_206)(new Data_Tuple.Tuple(_19, Data_Monoid.mempty(__dict_Monoid_205)));
                }));
            };
        });
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT(f(runWriterT(m)));
        };
    };
    var liftCatchWriter = function ($$catch) {
        return function (m) {
            return function (h) {
                return WriterT($$catch(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        };
    };
    var liftCallCCWriter = function (__dict_Monoid_209) {
        return function (callCC) {
            return function (f) {
                return WriterT(callCC(function (c) {
                    return runWriterT(f(function (a) {
                        return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_209))));
                    }));
                }));
            };
        };
    };
    var functorWriterT = function (__dict_Functor_210) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_210)(function (_266) {
                return new Data_Tuple.Tuple(f(_266.value0), _266.value1);
            }));
        });
    };
    var execWriterT = function (__dict_Apply_211) {
        return function (m) {
            return Prelude["<$>"](__dict_Apply_211["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runWriterT(m));
        };
    };
    var applyWriterT = function (__dict_Monoid_214) {
        return function (__dict_Apply_215) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT((function () {
                        var k = function (_268) {
                            return function (_269) {
                                return new Data_Tuple.Tuple(_268.value0(_269.value0), Prelude["<>"](__dict_Monoid_214["__superclass_Prelude.Semigroup_0"]())(_268.value1)(_269.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_215)(Prelude["<$>"](__dict_Apply_215["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_215["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_212) {
        return function (__dict_Monad_213) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT(Prelude[">>="](__dict_Monad_213["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_18) {
                        return Prelude[">>="](__dict_Monad_213["__superclass_Prelude.Bind_1"]())(runWriterT(k(_18.value0)))(function (_17) {
                            return Prelude["return"](__dict_Monad_213)(new Data_Tuple.Tuple(_17.value0, Prelude["<>"](__dict_Monoid_212["__superclass_Prelude.Semigroup_0"]())(_18.value1)(_17.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_212)((__dict_Monad_213["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_216) {
        return function (__dict_Applicative_217) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_216)(__dict_Applicative_217["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT(Prelude.pure(__dict_Applicative_217)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_216))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_203) {
        return function (__dict_Monad_204) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_203)(__dict_Monad_204["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_203)(__dict_Monad_204);
            });
        };
    };
    var altWriterT = function (__dict_Monoid_220) {
        return function (__dict_Alt_221) {
            return new Control_Alt.Alt(function (m) {
                return function (n) {
                    return WriterT(Control_Alt["<|>"](__dict_Alt_221)(runWriterT(m))(runWriterT(n)));
                };
            }, function () {
                return functorWriterT(__dict_Alt_221["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusWriterT = function (__dict_Monoid_201) {
        return function (__dict_Plus_202) {
            return new Control_Plus.Plus(function () {
                return altWriterT(__dict_Monoid_201)(__dict_Plus_202["__superclass_Control.Alt.Alt_0"]());
            }, Control_Plus.empty(__dict_Plus_202));
        };
    };
    var alternativeWriterT = function (__dict_Monoid_218) {
        return function (__dict_Alternative_219) {
            return new Control_Alternative.Alternative(function () {
                return plusWriterT(__dict_Monoid_218)(__dict_Alternative_219["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeWriterT(__dict_Monoid_218)(__dict_Alternative_219["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusWriterT = function (__dict_Monoid_207) {
        return function (__dict_MonadPlus_208) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeWriterT(__dict_Monoid_207)(__dict_MonadPlus_208["__superclass_Control.Alternative.Alternative_1"]());
            }, function () {
                return monadWriterT(__dict_Monoid_207)(__dict_MonadPlus_208["__superclass_Prelude.Monad_0"]());
            });
        };
    };
    return {
        WriterT: WriterT, 
        liftCallCCWriter: liftCallCCWriter, 
        liftCatchWriter: liftCatchWriter, 
        mapWriterT: mapWriterT, 
        execWriterT: execWriterT, 
        runWriterT: runWriterT, 
        functorWriterT: functorWriterT, 
        applyWriterT: applyWriterT, 
        applicativeWriterT: applicativeWriterT, 
        altWriterT: altWriterT, 
        plusWriterT: plusWriterT, 
        alternativeWriterT: alternativeWriterT, 
        bindWriterT: bindWriterT, 
        monadWriterT: monadWriterT, 
        monadPlusWriterT: monadPlusWriterT, 
        monadTransWriterT: monadTransWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Class = (function () {
    "use strict";
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Prelude = PS.Prelude;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_Monoid = PS.Data_Monoid;
    var MonadCont = function (callCC) {
        this.callCC = callCC;
    };
    var monadContContT = function (__dict_Monad_222) {
        return new MonadCont(Control_Monad_Cont_Trans.callCC);
    };
    var callCC = function (dict) {
        return dict.callCC;
    };
    var monadContErrorT = function (__dict_Error_223) {
        return function (__dict_MonadCont_224) {
            return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_224)));
        };
    };
    var monadContMaybeT = function (__dict_MonadCont_225) {
        return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_225)));
    };
    var monadContReaderT = function (__dict_MonadCont_226) {
        return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_226)));
    };
    var monadContStateT = function (__dict_MonadCont_227) {
        return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_227)));
    };
    var monadWriterT = function (__dict_Monoid_228) {
        return function (__dict_MonadCont_229) {
            return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_228)(callCC(__dict_MonadCont_229)));
        };
    };
    return {
        MonadCont: MonadCont, 
        callCC: callCC, 
        monadContContT: monadContContT, 
        monadContErrorT: monadContErrorT, 
        monadContMaybeT: monadContMaybeT, 
        monadContReaderT: monadContReaderT, 
        monadContStateT: monadContStateT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var MonadError = function (catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    var monadErrorErrorT = function (__dict_Monad_230) {
        return function (__dict_Error_231) {
            return new MonadError(function (m) {
                return function (h) {
                    return Control_Monad_Error_Trans.ErrorT(Prelude[">>="](__dict_Monad_230["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_20) {
                        if (_20 instanceof Data_Either.Left) {
                            return Control_Monad_Error_Trans.runErrorT(h(_20.value0));
                        };
                        if (_20 instanceof Data_Either.Right) {
                            return Prelude["return"](__dict_Monad_230)(new Data_Either.Right(_20.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function (e) {
                return Control_Monad_Error_Trans.ErrorT(Prelude["return"](__dict_Monad_230)(new Data_Either.Left(e)));
            });
        };
    };
    var monadErrorError = function (__dict_Error_232) {
        return new MonadError(function (_270) {
            return function (_271) {
                if (_270 instanceof Data_Either.Left) {
                    return _271(_270.value0);
                };
                if (_270 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_270.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Data_Either.Left.create);
    };
    var catchError = function (dict) {
        return dict.catchError;
    };
    var monadErrorMaybeT = function (__dict_Monad_233) {
        return function (__dict_MonadError_234) {
            return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_234)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_233)(throwError(__dict_MonadError_234)(e));
            });
        };
    };
    var monadErrorReaderT = function (__dict_Monad_235) {
        return function (__dict_MonadError_236) {
            return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_236)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_235)(throwError(__dict_MonadError_236)(e));
            });
        };
    };
    var monadErrorStateT = function (__dict_Monad_237) {
        return function (__dict_MonadError_238) {
            return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_238)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_237)(throwError(__dict_MonadError_238)(e));
            });
        };
    };
    var monadErrorWriterT = function (__dict_Monad_239) {
        return function (__dict_Monoid_240) {
            return function (__dict_MonadError_241) {
                return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_241)), function (e) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_240))(__dict_Monad_239)(throwError(__dict_MonadError_241)(e));
                });
            };
        };
    };
    return {
        MonadError: MonadError, 
        catchError: catchError, 
        throwError: throwError, 
        monadErrorError: monadErrorError, 
        monadErrorErrorT: monadErrorErrorT, 
        monadErrorMaybeT: monadErrorMaybeT, 
        monadErrorReaderT: monadErrorReaderT, 
        monadErrorWriterT: monadErrorWriterT, 
        monadErrorStateT: monadErrorStateT
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Strong = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Tuple = PS.Data_Tuple;
    var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this.first = first;
        this.second = second;
    };
    var strongArr = new Strong(function () {
        return Data_Profunctor.profunctorArr;
    }, function (_272) {
        return function (_273) {
            return new Data_Tuple.Tuple(_272(_273.value0), _273.value1);
        };
    }, Prelude["<$>"](Data_Tuple.functorTuple));
    var second = function (dict) {
        return dict.second;
    };
    var first = function (dict) {
        return dict.first;
    };
    return {
        Strong: Strong, 
        second: second, 
        first: first, 
        strongArr: strongArr
    };
})();
var PS = PS || {};
PS.Control_Arrow = (function () {
    "use strict";
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Arrow = function (__superclass_Data$dotProfunctor$dotStrong$dotStrong_1, __superclass_Prelude$dotCategory_0, arr) {
        this["__superclass_Data.Profunctor.Strong.Strong_1"] = __superclass_Data$dotProfunctor$dotStrong$dotStrong_1;
        this["__superclass_Prelude.Category_0"] = __superclass_Prelude$dotCategory_0;
        this.arr = arr;
    };
    var ArrowZero = function (azero) {
        this.azero = azero;
    };
    var ArrowPlus = function ($less$plus$greater) {
        this["<+>"] = $less$plus$greater;
    };
    var $less$plus$greater = function (dict) {
        return dict["<+>"];
    };
    var $times$times$times = function (__dict_Arrow_242) {
        return function (f) {
            return function (g) {
                return Prelude[">>>"]((__dict_Arrow_242["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(Data_Profunctor_Strong.first(__dict_Arrow_242["__superclass_Data.Profunctor.Strong.Strong_1"]())(f))(Data_Profunctor_Strong.second(__dict_Arrow_242["__superclass_Data.Profunctor.Strong.Strong_1"]())(g));
            };
        };
    };
    var azero = function (dict) {
        return dict.azero;
    };
    var arrowFunction = new Arrow(function () {
        return Data_Profunctor_Strong.strongArr;
    }, function () {
        return Prelude.categoryArr;
    }, function (f) {
        return f;
    });
    var arr = function (dict) {
        return dict.arr;
    };
    var $amp$amp$amp = function (__dict_Arrow_243) {
        return function (f) {
            return function (g) {
                return Prelude[">>>"]((__dict_Arrow_243["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(arr(__dict_Arrow_243)(function (b) {
                    return new Data_Tuple.Tuple(b, b);
                }))($times$times$times(__dict_Arrow_243)(f)(g));
            };
        };
    };
    return {
        ArrowPlus: ArrowPlus, 
        ArrowZero: ArrowZero, 
        Arrow: Arrow, 
        "<+>": $less$plus$greater, 
        azero: azero, 
        "&&&": $amp$amp$amp, 
        "***": $times$times$times, 
        arr: arr, 
        arrowFunction: arrowFunction
    };
})();
var PS = PS || {};
PS.Control_Arrow_Kleisli = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Arrow = PS.Control_Arrow;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Tuple = PS.Data_Tuple;
    var Kleisli = function (x) {
        return x;
    };
    var semigroupoidKleisli = function (__dict_Monad_245) {
        return new Prelude.Semigroupoid(function (_277) {
            return function (_278) {
                return function (b) {
                    return Prelude[">>="](__dict_Monad_245["__superclass_Prelude.Bind_1"]())(_278(b))(_277);
                };
            };
        });
    };
    var runKleisli = function (_276) {
        return _276;
    };
    var profunctorKleisli = function (__dict_Functor_246) {
        return new Data_Profunctor.Profunctor(function (_279) {
            return function (_280) {
                return function (_281) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_246)(_280))(Prelude["<<<"](Prelude.semigroupoidArr)(_281)(_279));
                };
            };
        });
    };
    var strongKleisli = function (__dict_Monad_244) {
        return new Data_Profunctor_Strong.Strong(function () {
            return profunctorKleisli(((__dict_Monad_244["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        }, function (_282) {
            return function (_274) {
                return Prelude[">>="](__dict_Monad_244["__superclass_Prelude.Bind_1"]())(_282(_274.value0))(function (b) {
                    return Prelude["return"](__dict_Monad_244)(new Data_Tuple.Tuple(b, _274.value1));
                });
            };
        }, function (_283) {
            return function (_275) {
                return Prelude[">>="](__dict_Monad_244["__superclass_Prelude.Bind_1"]())(_283(_275.value1))(function (b) {
                    return Prelude["return"](__dict_Monad_244)(new Data_Tuple.Tuple(_275.value0, b));
                });
            };
        });
    };
    var categoryKleisli = function (__dict_Monad_247) {
        return new Prelude.Category(function () {
            return semigroupoidKleisli(__dict_Monad_247);
        }, Prelude["return"](__dict_Monad_247));
    };
    var arrowKleisli = function (__dict_Monad_248) {
        return new Control_Arrow.Arrow(function () {
            return strongKleisli(__dict_Monad_248);
        }, function () {
            return categoryKleisli(__dict_Monad_248);
        }, function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_248))(f);
        });
    };
    return {
        Kleisli: Kleisli, 
        runKleisli: runKleisli, 
        semigroupoidKleisli: semigroupoidKleisli, 
        categoryKleisli: categoryKleisli, 
        profunctorKleisli: profunctorKleisli, 
        strongKleisli: strongKleisli, 
        arrowKleisli: arrowKleisli
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $div$bslash = function (a) {
        return function (b) {
            return new Data_Tuple.Tuple(a, b);
        };
    };
    var con9 = function (f) {
        return function (_291) {
            return f(_291.value0)(_291.value1.value0)(_291.value1.value1.value0)(_291.value1.value1.value1.value0)(_291.value1.value1.value1.value1.value0)(_291.value1.value1.value1.value1.value1.value0)(_291.value1.value1.value1.value1.value1.value1.value0)(_291.value1.value1.value1.value1.value1.value1.value1.value0)(_291.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con8 = function (f) {
        return function (_290) {
            return f(_290.value0)(_290.value1.value0)(_290.value1.value1.value0)(_290.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con7 = function (f) {
        return function (_289) {
            return f(_289.value0)(_289.value1.value0)(_289.value1.value1.value0)(_289.value1.value1.value1.value0)(_289.value1.value1.value1.value1.value0)(_289.value1.value1.value1.value1.value1.value0)(_289.value1.value1.value1.value1.value1.value1);
        };
    };
    var con6 = function (f) {
        return function (_288) {
            return f(_288.value0)(_288.value1.value0)(_288.value1.value1.value0)(_288.value1.value1.value1.value0)(_288.value1.value1.value1.value1.value0)(_288.value1.value1.value1.value1.value1);
        };
    };
    var con5 = function (f) {
        return function (_287) {
            return f(_287.value0)(_287.value1.value0)(_287.value1.value1.value0)(_287.value1.value1.value1.value0)(_287.value1.value1.value1.value1);
        };
    };
    var con4 = function (f) {
        return function (_286) {
            return f(_286.value0)(_286.value1.value0)(_286.value1.value1.value0)(_286.value1.value1.value1);
        };
    };
    var con3 = function (f) {
        return function (_285) {
            return f(_285.value0)(_285.value1.value0)(_285.value1.value1);
        };
    };
    var con2 = function (f) {
        return function (_284) {
            return f(_284.value0)(_284.value1);
        };
    };
    var con10 = function (f) {
        return function (_292) {
            return f(_292.value0)(_292.value1.value0)(_292.value1.value1.value0)(_292.value1.value1.value1.value0)(_292.value1.value1.value1.value1.value0)(_292.value1.value1.value1.value1.value1.value0)(_292.value1.value1.value1.value1.value1.value1.value0)(_292.value1.value1.value1.value1.value1.value1.value1.value0)(_292.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_292.value1.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    return {
        "/\\": $div$bslash, 
        con10: con10, 
        con9: con9, 
        con8: con8, 
        con7: con7, 
        con6: con6, 
        con5: con5, 
        con4: con4, 
        con3: con3, 
        con2: con2
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = function (x) {
        return x;
    };
    var showFirst = function (__dict_Show_249) {
        return new Prelude.Show(function (_300) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_249))(_300) + ")");
        });
    };
    var semigroupFirst = new Prelude.Semigroup(function (_301) {
        return function (_302) {
            if (_301 instanceof Data_Maybe.Just) {
                return _301;
            };
            return _302;
        };
    });
    var runFirst = function (_293) {
        return _293;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    var eqFirst = function (__dict_Eq_251) {
        return new Prelude.Eq(function (_296) {
            return function (_297) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_251))(_296)(_297);
            };
        }, function (_294) {
            return function (_295) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_251))(_294)(_295);
            };
        });
    };
    var ordFirst = function (__dict_Ord_250) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_250["__superclass_Prelude.Eq_0"]());
        }, function (_298) {
            return function (_299) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_250))(_298)(_299);
            };
        });
    };
    return {
        First: First, 
        runFirst: runFirst, 
        eqFirst: eqFirst, 
        ordFirst: ordFirst, 
        showFirst: showFirst, 
        semigroupFirst: semigroupFirst, 
        monoidFirst: monoidFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_252) {
        return function (__dict_Foldable_253) {
            return function (f) {
                return foldr(__dict_Foldable_253)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_252["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_252)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_254) {
        return function (__dict_Foldable_255) {
            return Prelude.flip(traverse_(__dict_Applicative_254)(__dict_Foldable_255));
        };
    };
    var sequence_ = function (__dict_Applicative_256) {
        return function (__dict_Foldable_257) {
            return traverse_(__dict_Applicative_256)(__dict_Foldable_257)(Prelude.id(Prelude.categoryArr));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_258) {
        return function (__dict_Monoid_259) {
            return function (sep) {
                return function (xs) {
                    var go = function (_328) {
                        return function (_329) {
                            if (_328.init) {
                                return {
                                    init: false, 
                                    acc: _329
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_259["__superclass_Prelude.Semigroup_0"]())(_328.acc)(Prelude["<>"](__dict_Monoid_259["__superclass_Prelude.Semigroup_0"]())(sep)(_329))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_258)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_259)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_260) {
        return function (__dict_Monoid_261) {
            return foldl(__dict_Foldable_260)(Prelude["<>"](__dict_Monoid_261["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_261));
        };
    };
    var or = function (__dict_Foldable_262) {
        return foldl(__dict_Foldable_262)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var product = function (__dict_Foldable_263) {
        return foldl(__dict_Foldable_263)(Prelude["*"](Prelude.numNumber))(1);
    };
    var sum = function (__dict_Foldable_264) {
        return foldl(__dict_Foldable_264)(Prelude["+"](Prelude.numNumber))(0);
    };
    var foldableTuple = new Foldable(function (__dict_Monoid_265) {
        return function (_326) {
            return function (_327) {
                return _326(_327.value1);
            };
        };
    }, function (_323) {
        return function (_324) {
            return function (_325) {
                return _323(_324)(_325.value1);
            };
        };
    }, function (_320) {
        return function (_321) {
            return function (_322) {
                return _320(_322.value1)(_321);
            };
        };
    });
    var foldableMaybe = new Foldable(function (__dict_Monoid_266) {
        return function (_318) {
            return function (_319) {
                if (_319 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_266);
                };
                if (_319 instanceof Data_Maybe.Just) {
                    return _318(_319.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_315) {
        return function (_316) {
            return function (_317) {
                if (_317 instanceof Data_Maybe.Nothing) {
                    return _316;
                };
                if (_317 instanceof Data_Maybe.Just) {
                    return _315(_316)(_317.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_312) {
        return function (_313) {
            return function (_314) {
                if (_314 instanceof Data_Maybe.Nothing) {
                    return _313;
                };
                if (_314 instanceof Data_Maybe.Just) {
                    return _312(_314.value0)(_313);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_267) {
        return function (_310) {
            return function (_311) {
                if (_311 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_267);
                };
                if (_311 instanceof Data_Either.Right) {
                    return _310(_311.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_307) {
        return function (_308) {
            return function (_309) {
                if (_309 instanceof Data_Either.Left) {
                    return _308;
                };
                if (_309 instanceof Data_Either.Right) {
                    return _307(_308)(_309.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_304) {
        return function (_305) {
            return function (_306) {
                if (_306 instanceof Data_Either.Left) {
                    return _305;
                };
                if (_306 instanceof Data_Either.Right) {
                    return _304(_306.value0)(_305);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_268) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_268["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_268))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_269) {
        return function (__dict_Foldable_270) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_270)(Data_Monoid_First.monoidFirst)(function (_303) {
                        var _1384 = Prelude["=="](__dict_Eq_269)(a)(_303.value0);
                        if (_1384) {
                            return new Data_Maybe.Just(_303.value1);
                        };
                        if (!_1384) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match");
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_271) {
        return function (__dict_Monoid_272) {
            return foldMap(__dict_Foldable_271)(__dict_Monoid_272)(Prelude.id(Prelude.categoryArr));
        };
    };
    var find = function (__dict_Foldable_273) {
        return function (p) {
            return function (f) {
                var _1388 = foldMap(__dict_Foldable_273)(Data_Monoid.monoidArray)(function (x) {
                    var _1387 = p(x);
                    if (_1387) {
                        return [ x ];
                    };
                    if (!_1387) {
                        return [  ];
                    };
                    throw new Error("Failed pattern match");
                })(f);
                if (_1388.length >= 1) {
                    var _1390 = _1388.slice(1);
                    return new Data_Maybe.Just(_1388[0]);
                };
                if (_1388.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_274) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_274)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_275) {
        return function (__dict_Foldable_276) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_276))(Prelude["=="](__dict_Eq_275));
        };
    };
    var notElem = function (__dict_Eq_277) {
        return function (__dict_Foldable_278) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_277)(__dict_Foldable_278)(x));
            };
        };
    };
    var and = function (__dict_Foldable_279) {
        return foldl(__dict_Foldable_279)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_280) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_280)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        lookup: lookup, 
        find: find, 
        notElem: notElem, 
        elem: elem, 
        product: product, 
        sum: sum, 
        all: all, 
        any: any, 
        or: or, 
        and: and, 
        intercalate: intercalate, 
        mconcat: mconcat, 
        sequence_: sequence_, 
        for_: for_, 
        traverse_: traverse_, 
        fold: fold, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableTuple: foldableTuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = function (x) {
        return x;
    };
    var showLast = function (__dict_Show_281) {
        return new Prelude.Show(function (_337) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_281))(_337) + ")");
        });
    };
    var semigroupLast = new Prelude.Semigroup(function (_338) {
        return function (_339) {
            if (_339 instanceof Data_Maybe.Just) {
                return _339;
            };
            if (_339 instanceof Data_Maybe.Nothing) {
                return _338;
            };
            throw new Error("Failed pattern match");
        };
    });
    var runLast = function (_330) {
        return _330;
    };
    var monoidLast = new Data_Monoid.Monoid(function () {
        return semigroupLast;
    }, Data_Maybe.Nothing.value);
    var eqLast = function (__dict_Eq_283) {
        return new Prelude.Eq(function (_333) {
            return function (_334) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_283))(_333)(_334);
            };
        }, function (_331) {
            return function (_332) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_283))(_331)(_332);
            };
        });
    };
    var ordLast = function (__dict_Ord_282) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_282["__superclass_Prelude.Eq_0"]());
        }, function (_335) {
            return function (_336) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_282))(_335)(_336);
            };
        });
    };
    return {
        Last: Last, 
        runLast: runLast, 
        eqLast: eqLast, 
        ordLast: ordLast, 
        showLast: showLast, 
        semigroupLast: semigroupLast, 
        monoidLast: monoidLast
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Maybe = PS.Data_Maybe;
    
  function _new() {
    return {};
  }
  ;
    
  function peek(m) {
    return function(k) {
      return function() {
        return m[k];
      }
    }
  }
  ;
    
  function poke(m) {
    return function(k) {
      return function(v) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  ;
    
  function _delete(m) {
    return function(k) {
      return function() {
        delete m[k];
        return m;
      };
    };
  }
  ;
    var $$new = _new;
    var $$delete = _delete;
    return {
        "delete": $$delete, 
        poke: poke, 
        peek: peek, 
        "new": $$new
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;
    
    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;
    
    function fromCharArray(a) {
      return a.join('');
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;
    
    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;
    
    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function toCharArray(s) {
      return s.split('');
    }
    ;
    
    function toLower(s) {
      return s.toLowerCase();
    }
    ;
    
    function toUpper(s) {
      return s.toUpperCase();
    }
    ;
    
    function trim(s) {
      return s.trim();
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var takeWhile = function (p) {
        return function (s) {
            return take(count(p)(s))(s);
        };
    };
    var $$null = function (s) {
        return length(s) === 0;
    };
    var uncons = function (_340) {
        if ($$null(_340)) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just({
            head: Data_String_Unsafe.charAt(0)(_340), 
            tail: drop(1)(_340)
        });
    };
    var fromChar = Data_Char.charString;
    var singleton = fromChar;
    var dropWhile = function (p) {
        return function (s) {
            return drop(count(p)(s))(s);
        };
    };
    var charCodeAt = function (n) {
        return function (s) {
            return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        joinWith: joinWith, 
        trim: trim, 
        toUpper: toUpper, 
        toLower: toLower, 
        toCharArray: toCharArray, 
        split: split, 
        dropWhile: dropWhile, 
        drop: drop, 
        takeWhile: takeWhile, 
        take: take, 
        count: count, 
        replace: replace, 
        localeCompare: localeCompare, 
        singleton: singleton, 
        length: length, 
        uncons: uncons, 
        "null": $$null, 
        "lastIndexOf'": lastIndexOf$prime, 
        lastIndexOf: lastIndexOf, 
        "indexOf'": indexOf$prime, 
        indexOf: indexOf, 
        fromChar: fromChar, 
        fromCharArray: fromCharArray, 
        charCodeAt: charCodeAt, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function showRegex$prime(r) {
    return '' + r;
  }
  ;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function source(r) {
    return r.source;
  }
  ;
    
  function flags(r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    
  function replace$prime(r) {
    return function(f) {
      return function(s2) {
        return s2.replace(r, function(match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  }
  ;
    
  function search(r) {
    return function(s) {
      return s.search(r);
    };
  }
  ;
    
  function split(r) {
    return function(s) {
      return s.split(r);
    };
  }
  ;
    var showRegex = new Prelude.Show(showRegex$prime);
    var renderFlags = function (flags) {
        return (function () {
            if (flags.global) {
                return "g";
            };
            if (!flags.global) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.ignoreCase) {
                return "i";
            };
            if (!flags.ignoreCase) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.multiline) {
                return "m";
            };
            if (!flags.multiline) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.sticky) {
                return "y";
            };
            if (!flags.sticky) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + (function () {
            if (flags.unicode) {
                return "u";
            };
            if (!flags.unicode) {
                return "";
            };
            throw new Error("Failed pattern match");
        })())));
    };
    var regex = function (source) {
        return function (flags) {
            return regex$prime(source)(renderFlags(flags));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        split: split, 
        search: search, 
        "replace'": replace$prime, 
        replace: replace, 
        match: match, 
        test: test, 
        parseFlags: parseFlags, 
        renderFlags: renderFlags, 
        flags: flags, 
        source: source, 
        regex: regex, 
        showRegex: showRegex
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var StateR = function (x) {
        return x;
    };
    var StateL = function (x) {
        return x;
    };
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = new Traversable(function () {
        return Data_Foldable.foldableTuple;
    }, function () {
        return Data_Tuple.functorTuple;
    }, function (__dict_Applicative_285) {
        return function (_354) {
            return Prelude["<$>"]((__dict_Applicative_285["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_354.value0))(_354.value1);
        };
    }, function (__dict_Applicative_284) {
        return function (_352) {
            return function (_353) {
                return Prelude["<$>"]((__dict_Applicative_284["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_353.value0))(_352(_353.value1));
            };
        };
    });
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_287) {
        return function (_351) {
            if (_351 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_287)(Data_Maybe.Nothing.value);
            };
            if (_351 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_287["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_351.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_286) {
        return function (_349) {
            return function (_350) {
                if (_350 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_286)(Data_Maybe.Nothing.value);
                };
                if (_350 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_286["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_349(_350.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableEither = new Traversable(function () {
        return Data_Foldable.foldableEither;
    }, function () {
        return Data_Either.functorEither;
    }, function (__dict_Applicative_289) {
        return function (_348) {
            if (_348 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_289)(new Data_Either.Left(_348.value0));
            };
            if (_348 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_289["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_348.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_288) {
        return function (_346) {
            return function (_347) {
                if (_347 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_288)(new Data_Either.Left(_347.value0));
                };
                if (_347 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_288["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_346(_347.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var stateR = function (_342) {
        return _342;
    };
    var stateL = function (_341) {
        return _341;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_291) {
        return function (_345) {
            if (_345.length === 0) {
                return Prelude.pure(__dict_Applicative_291)([  ]);
            };
            if (_345.length >= 1) {
                var _1431 = _345.slice(1);
                return Prelude["<*>"](__dict_Applicative_291["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_291["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_345[0]))(sequence(traversableArray)(__dict_Applicative_291)(_1431));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_290) {
        return function (_343) {
            return function (_344) {
                if (_344.length === 0) {
                    return Prelude.pure(__dict_Applicative_290)([  ]);
                };
                if (_344.length >= 1) {
                    var _1435 = _344.slice(1);
                    return Prelude["<*>"](__dict_Applicative_290["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_290["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_343(_344[0])))(traverse(traversableArray)(__dict_Applicative_290)(_343)(_1435));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var zipWithA = function (__dict_Applicative_292) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray)(__dict_Applicative_292)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var functorStateR = new Prelude.Functor(function (f) {
        return function (k) {
            return StateR(function (s) {
                var _1436 = stateR(k)(s);
                return new Data_Tuple.Tuple(_1436.value0, f(_1436.value1));
            });
        };
    });
    var functorStateL = new Prelude.Functor(function (f) {
        return function (k) {
            return StateL(function (s) {
                var _1439 = stateL(k)(s);
                return new Data_Tuple.Tuple(_1439.value0, f(_1439.value1));
            });
        };
    });
    var $$for = function (__dict_Applicative_297) {
        return function (__dict_Traversable_298) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_298)(__dict_Applicative_297)(f)(x);
                };
            };
        };
    };
    var applyStateR = new Prelude.Apply(function (f) {
        return function (x) {
            return StateR(function (s) {
                var _1442 = stateR(x)(s);
                var _1443 = stateR(f)(_1442.value0);
                return new Data_Tuple.Tuple(_1443.value0, _1443.value1(_1442.value1));
            });
        };
    }, function () {
        return functorStateR;
    });
    var applyStateL = new Prelude.Apply(function (f) {
        return function (x) {
            return StateL(function (s) {
                var _1448 = stateL(f)(s);
                var _1449 = stateL(x)(_1448.value0);
                return new Data_Tuple.Tuple(_1449.value0, _1448.value1(_1449.value1));
            });
        };
    }, function () {
        return functorStateL;
    });
    var applicativeStateR = new Prelude.Applicative(function () {
        return applyStateR;
    }, function (a) {
        return StateR(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumR = function (__dict_Traversable_293) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateR(traverse(__dict_Traversable_293)(applicativeStateR)(function (a) {
                        return StateR(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var scanr = function (__dict_Traversable_294) {
        return function (f) {
            return function (b0) {
                return function (xs) {
                    return Data_Tuple.snd(mapAccumR(__dict_Traversable_294)(function (b) {
                        return function (a) {
                            var b$prime = f(a)(b);
                            return new Data_Tuple.Tuple(b$prime, b$prime);
                        };
                    })(b0)(xs));
                };
            };
        };
    };
    var applicativeStateL = new Prelude.Applicative(function () {
        return applyStateL;
    }, function (a) {
        return StateL(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumL = function (__dict_Traversable_295) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateL(traverse(__dict_Traversable_295)(applicativeStateL)(function (a) {
                        return StateL(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var scanl = function (__dict_Traversable_296) {
        return function (f) {
            return function (b0) {
                return function (xs) {
                    return Data_Tuple.snd(mapAccumL(__dict_Traversable_296)(function (b) {
                        return function (a) {
                            var b$prime = f(b)(a);
                            return new Data_Tuple.Tuple(b$prime, b$prime);
                        };
                    })(b0)(xs));
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        mapAccumR: mapAccumR, 
        mapAccumL: mapAccumL, 
        scanr: scanr, 
        scanl: scanl, 
        zipWithA: zipWithA, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableMaybe: traversableMaybe, 
        traversableTuple: traversableTuple
    };
})();
var PS = PS || {};
PS.Data_Const = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Contravariant = PS.Data_Contravariant;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Const = function (x) {
        return x;
    };
    var showConst = function (__dict_Show_301) {
        return new Prelude.Show(function (_360) {
            return "Const (" + (Prelude.show(__dict_Show_301)(_360) + ")");
        });
    };
    var semigroupoidConst = new Prelude.Semigroupoid(function (_361) {
        return function (_362) {
            return _362;
        };
    });
    var semigroupConst = function (__dict_Semigroup_302) {
        return new Prelude.Semigroup(function (_363) {
            return function (_364) {
                return Prelude["<>"](__dict_Semigroup_302)(_363)(_364);
            };
        });
    };
    var monoidConst = function (__dict_Monoid_304) {
        return new Data_Monoid.Monoid(function () {
            return semigroupConst(__dict_Monoid_304["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_304));
    };
    var getConst = function (_355) {
        return _355;
    };
    var functorConst = new Prelude.Functor(function (_365) {
        return function (_366) {
            return _366;
        };
    });
    var foldableConst = new Data_Foldable.Foldable(function (__dict_Monoid_305) {
        return function (_380) {
            return function (_381) {
                return Data_Monoid.mempty(__dict_Monoid_305);
            };
        };
    }, function (_377) {
        return function (_378) {
            return function (_379) {
                return _378;
            };
        };
    }, function (_374) {
        return function (_375) {
            return function (_376) {
                return _375;
            };
        };
    });
    var traversableConst = new Data_Traversable.Traversable(function () {
        return foldableConst;
    }, function () {
        return functorConst;
    }, function (__dict_Applicative_300) {
        return function (_384) {
            return Prelude.pure(__dict_Applicative_300)(_384);
        };
    }, function (__dict_Applicative_299) {
        return function (_382) {
            return function (_383) {
                return Prelude.pure(__dict_Applicative_299)(_383);
            };
        };
    });
    var eqConst = function (__dict_Eq_306) {
        return new Prelude.Eq(function (c) {
            return function (c$prime) {
                return !Prelude["=="](eqConst(__dict_Eq_306))(c)(c$prime);
            };
        }, function (_356) {
            return function (_357) {
                return Prelude["=="](__dict_Eq_306)(_356)(_357);
            };
        });
    };
    var ordConst = function (__dict_Ord_303) {
        return new Prelude.Ord(function () {
            return eqConst(__dict_Ord_303["__superclass_Prelude.Eq_0"]());
        }, function (_358) {
            return function (_359) {
                return Prelude.compare(__dict_Ord_303)(_358)(_359);
            };
        });
    };
    var contravariantConst = new Data_Contravariant.Contravariant(function (_372) {
        return function (_373) {
            return _373;
        };
    });
    var applyConst = function (__dict_Semigroup_308) {
        return new Prelude.Apply(function (_367) {
            return function (_368) {
                return Prelude["<>"](__dict_Semigroup_308)(_367)(_368);
            };
        }, function () {
            return functorConst;
        });
    };
    var bindConst = function (__dict_Semigroup_307) {
        return new Prelude.Bind(function (_369) {
            return function (_370) {
                return _369;
            };
        }, function () {
            return applyConst(__dict_Semigroup_307);
        });
    };
    var applicativeConst = function (__dict_Monoid_309) {
        return new Prelude.Applicative(function () {
            return applyConst(__dict_Monoid_309["__superclass_Prelude.Semigroup_0"]());
        }, function (_371) {
            return Data_Monoid.mempty(__dict_Monoid_309);
        });
    };
    return {
        Const: Const, 
        getConst: getConst, 
        eqConst: eqConst, 
        ordConst: ordConst, 
        showConst: showConst, 
        semigroupoidConst: semigroupoidConst, 
        semigroupConst: semigroupConst, 
        monoidConst: monoidConst, 
        functorConst: functorConst, 
        applyConst: applyConst, 
        bindConst: bindConst, 
        applicativeConst: applicativeConst, 
        contravariantConst: contravariantConst, 
        foldableConst: foldableConst, 
        traversableConst: traversableConst
    };
})();
var PS = PS || {};
PS.Data_Bifoldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_Any = PS.Data_Monoid_Any;
    var Data_Monoid_All = PS.Data_Monoid_All;
    var Data_Const = PS.Data_Const;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Bind = PS.Control_Bind;
    var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
        this.bifoldMap = bifoldMap;
        this.bifoldl = bifoldl;
        this.bifoldr = bifoldr;
    };
    var bifoldr = function (dict) {
        return dict.bifoldr;
    };
    var bitraverse_ = function (__dict_Bifoldable_310) {
        return function (__dict_Applicative_311) {
            return function (f) {
                return function (g) {
                    return bifoldr(__dict_Bifoldable_310)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_311["__superclass_Prelude.Apply_0"]()))(f))(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_311["__superclass_Prelude.Apply_0"]()))(g))(Prelude.pure(__dict_Applicative_311)(Prelude.unit));
                };
            };
        };
    };
    var bifor_ = function (__dict_Bifoldable_312) {
        return function (__dict_Applicative_313) {
            return function (t) {
                return function (f) {
                    return function (g) {
                        return bitraverse_(__dict_Bifoldable_312)(__dict_Applicative_313)(f)(g)(t);
                    };
                };
            };
        };
    };
    var bisequence_ = function (__dict_Bifoldable_314) {
        return function (__dict_Applicative_315) {
            return bitraverse_(__dict_Bifoldable_314)(__dict_Applicative_315)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        };
    };
    var bifoldl = function (dict) {
        return dict.bifoldl;
    };
    var bifoldableTuple = new Bifoldable(function (__dict_Monoid_316) {
        return function (_385) {
            return function (_386) {
                return function (_387) {
                    return Prelude["<>"](__dict_Monoid_316["__superclass_Prelude.Semigroup_0"]())(_385(_387.value0))(_386(_387.value1));
                };
            };
        };
    }, function (_392) {
        return function (_393) {
            return function (_394) {
                return function (_395) {
                    return _393(_392(_394)(_395.value0))(_395.value1);
                };
            };
        };
    }, function (_388) {
        return function (_389) {
            return function (_390) {
                return function (_391) {
                    return _388(_391.value0)(_389(_391.value1)(_390));
                };
            };
        };
    });
    var bifoldableEither = new Bifoldable(function (__dict_Monoid_317) {
        return function (_396) {
            return function (_397) {
                return function (_398) {
                    if (_398 instanceof Data_Either.Left) {
                        return _396(_398.value0);
                    };
                    if (_398 instanceof Data_Either.Right) {
                        return _397(_398.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    }, function (_403) {
        return function (_404) {
            return function (_405) {
                return function (_406) {
                    if (_406 instanceof Data_Either.Left) {
                        return _403(_405)(_406.value0);
                    };
                    if (_406 instanceof Data_Either.Right) {
                        return _404(_405)(_406.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    }, function (_399) {
        return function (_400) {
            return function (_401) {
                return function (_402) {
                    if (_402 instanceof Data_Either.Left) {
                        return _399(_402.value0)(_401);
                    };
                    if (_402 instanceof Data_Either.Right) {
                        return _400(_402.value0)(_401);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    var bifoldableConst = new Bifoldable(function (__dict_Monoid_318) {
        return function (_407) {
            return function (_408) {
                return function (_409) {
                    return _407(_409);
                };
            };
        };
    }, function (_414) {
        return function (_415) {
            return function (_416) {
                return function (_417) {
                    return _414(_416)(_417);
                };
            };
        };
    }, function (_410) {
        return function (_411) {
            return function (_412) {
                return function (_413) {
                    return _410(_413)(_412);
                };
            };
        };
    });
    var bifoldMap = function (dict) {
        return dict.bifoldMap;
    };
    var bifold = function (__dict_Bifoldable_319) {
        return function (__dict_Monoid_320) {
            return bifoldMap(__dict_Bifoldable_319)(__dict_Monoid_320)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        };
    };
    var biany = function (__dict_Bifoldable_321) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Any.runAny)(bifoldMap(__dict_Bifoldable_321)(Data_Monoid_Any.monoidAny)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Any.Any)(p))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Any.Any)(q)));
            };
        };
    };
    var biall = function (__dict_Bifoldable_322) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_All.runAll)(bifoldMap(__dict_Bifoldable_322)(Data_Monoid_All.monoidAll)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_All.All)(p))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_All.All)(q)));
            };
        };
    };
    return {
        Bifoldable: Bifoldable, 
        biall: biall, 
        biany: biany, 
        bisequence_: bisequence_, 
        bifor_: bifor_, 
        bitraverse_: bitraverse_, 
        bifold: bifold, 
        bifoldMap: bifoldMap, 
        bifoldl: bifoldl, 
        bifoldr: bifoldr, 
        bifoldableTuple: bifoldableTuple, 
        bifoldableEither: bifoldableEither, 
        bifoldableConst: bifoldableConst
    };
})();
var PS = PS || {};
PS.Data_Bifunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Const = PS.Data_Const;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Bifunctor = function (bimap) {
        this.bimap = bimap;
    };
    var bimap = function (dict) {
        return dict.bimap;
    };
    var lmap = function (__dict_Bifunctor_323) {
        return function (f) {
            return bimap(__dict_Bifunctor_323)(f)(Prelude.id(Prelude.categoryArr));
        };
    };
    var rmap = function (__dict_Bifunctor_324) {
        return bimap(__dict_Bifunctor_324)(Prelude.id(Prelude.categoryArr));
    };
    var bifunctorTuple = new Bifunctor(function (_421) {
        return function (_422) {
            return function (_423) {
                return new Data_Tuple.Tuple(_421(_423.value0), _422(_423.value1));
            };
        };
    });
    var bifunctorEither = new Bifunctor(function (_418) {
        return function (_419) {
            return function (_420) {
                if (_420 instanceof Data_Either.Left) {
                    return new Data_Either.Left(_418(_420.value0));
                };
                if (_420 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_419(_420.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var bifunctorConst = new Bifunctor(function (_424) {
        return function (_425) {
            return function (_426) {
                return _424(_426);
            };
        };
    });
    return {
        Bifunctor: Bifunctor, 
        rmap: rmap, 
        lmap: lmap, 
        bimap: bimap, 
        bifunctorEither: bifunctorEither, 
        bifunctorTuple: bifunctorTuple, 
        bifunctorConst: bifunctorConst
    };
})();
var PS = PS || {};
PS.Control_Biapply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Const = PS.Data_Const;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Apply = PS.Control_Apply;
    var Biapply = function ($less$less$times$greater$greater, __superclass_Data$dotBifunctor$dotBifunctor_0) {
        this["<<*>>"] = $less$less$times$greater$greater;
        this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    };
    var $less$less$times$greater$greater = function (dict) {
        return dict["<<*>>"];
    };
    var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryArr);
    var $less$less$times = function (__dict_Biapply_325) {
        return function (a) {
            return function (b) {
                return $less$less$times$greater$greater(__dict_Biapply_325)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_325["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
            };
        };
    };
    var $times$greater$greater = function (__dict_Biapply_326) {
        return function (a) {
            return function (b) {
                return $less$less$times$greater$greater(__dict_Biapply_326)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_326["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(Prelude["const"](Prelude.id(Prelude.categoryArr))))(a))(b);
            };
        };
    };
    var bilift3 = function (__dict_Biapply_327) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return function (b) {
                        return function (c) {
                            return $less$less$times$greater$greater(__dict_Biapply_327)($less$less$times$greater$greater(__dict_Biapply_327)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_327["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                        };
                    };
                };
            };
        };
    };
    var bilift2 = function (__dict_Biapply_328) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return function (b) {
                        return $less$less$times$greater$greater(__dict_Biapply_328)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_328["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                    };
                };
            };
        };
    };
    var biapplyTuple = new Biapply(function (_427) {
        return function (_428) {
            return new Data_Tuple.Tuple(_427.value0(_428.value0), _427.value1(_428.value1));
        };
    }, function () {
        return Data_Bifunctor.bifunctorTuple;
    });
    var biapplyConst = new Biapply(function (_429) {
        return function (_430) {
            return _429(_430);
        };
    }, function () {
        return Data_Bifunctor.bifunctorConst;
    });
    return {
        Biapply: Biapply, 
        bilift3: bilift3, 
        bilift2: bilift2, 
        "<<*": $less$less$times, 
        "*>>": $times$greater$greater, 
        "<<*>>": $less$less$times$greater$greater, 
        "<<$>>": $less$less$dollar$greater$greater, 
        biapplyTuple: biapplyTuple, 
        biapplyConst: biapplyConst
    };
})();
var PS = PS || {};
PS.Control_Biapplicative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Const = PS.Data_Const;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Biapply = PS.Control_Biapply;
    var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
        this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
        this.bipure = bipure;
    };
    var bipure = function (dict) {
        return dict.bipure;
    };
    var biapplicativeTuple = new Biapplicative(function () {
        return Control_Biapply.biapplyTuple;
    }, Data_Tuple.Tuple.create);
    var biapplicativeConst = new Biapplicative(function () {
        return Control_Biapply.biapplyConst;
    }, function (_431) {
        return function (_432) {
            return _431;
        };
    });
    return {
        Biapplicative: Biapplicative, 
        bipure: bipure, 
        biapplicativeTuple: biapplicativeTuple, 
        biapplicativeConst: biapplicativeConst
    };
})();
var PS = PS || {};
PS.Data_Bitraversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Const = PS.Data_Const;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
        this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
        this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
        this.bisequence = bisequence;
        this.bitraverse = bitraverse;
    };
    var bitraverse = function (dict) {
        return dict.bitraverse;
    };
    var bitraversableTuple = new Bitraversable(function () {
        return Data_Bifoldable.bifoldableTuple;
    }, function () {
        return Data_Bifunctor.bifunctorTuple;
    }, function (__dict_Applicative_330) {
        return function (_436) {
            return Prelude["<*>"](__dict_Applicative_330["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_330["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create)(_436.value0))(_436.value1);
        };
    }, function (__dict_Applicative_329) {
        return function (_433) {
            return function (_434) {
                return function (_435) {
                    return Prelude["<*>"](__dict_Applicative_329["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_329["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create)(_433(_435.value0)))(_434(_435.value1));
                };
            };
        };
    });
    var bitraversableEither = new Bitraversable(function () {
        return Data_Bifoldable.bifoldableEither;
    }, function () {
        return Data_Bifunctor.bifunctorEither;
    }, function (__dict_Applicative_332) {
        return function (_440) {
            if (_440 instanceof Data_Either.Left) {
                return Prelude["<$>"]((__dict_Applicative_332["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(_440.value0);
            };
            if (_440 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_332["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_440.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_331) {
        return function (_437) {
            return function (_438) {
                return function (_439) {
                    if (_439 instanceof Data_Either.Left) {
                        return Prelude["<$>"]((__dict_Applicative_331["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(_437(_439.value0));
                    };
                    if (_439 instanceof Data_Either.Right) {
                        return Prelude["<$>"]((__dict_Applicative_331["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_438(_439.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    var bitraversableConst = new Bitraversable(function () {
        return Data_Bifoldable.bifoldableConst;
    }, function () {
        return Data_Bifunctor.bifunctorConst;
    }, function (__dict_Applicative_334) {
        return function (_444) {
            return Prelude["<$>"]((__dict_Applicative_334["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Const.Const)(_444);
        };
    }, function (__dict_Applicative_333) {
        return function (_441) {
            return function (_442) {
                return function (_443) {
                    return Prelude["<$>"]((__dict_Applicative_333["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Const.Const)(_441(_443));
                };
            };
        };
    });
    var bisequence = function (dict) {
        return dict.bisequence;
    };
    var bifor = function (__dict_Bitraversable_335) {
        return function (__dict_Applicative_336) {
            return function (t) {
                return function (f) {
                    return function (g) {
                        return bitraverse(__dict_Bitraversable_335)(__dict_Applicative_336)(f)(g)(t);
                    };
                };
            };
        };
    };
    return {
        Bitraversable: Bitraversable, 
        bifor: bifor, 
        bisequence: bisequence, 
        bitraverse: bitraverse, 
        bitraversableTuple: bitraversableTuple, 
        bitraversableEither: bitraversableEither, 
        bitraversableConst: bitraversableConst
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Clown = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Control_Biapply = PS.Control_Biapply;
    var Clown = (function () {
        function Clown(value0) {
            this.value0 = value0;
        };
        Clown.create = function (value0) {
            return new Clown(value0);
        };
        return Clown;
    })();
    var runClown = function (_445) {
        return _445.value0;
    };
    var clownFunctor = new Prelude.Functor(function (_448) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Clown.create)(runClown);
    });
    var clownFoldable = new Data_Foldable.Foldable(function (__dict_Monoid_339) {
        return function (_465) {
            return function (_466) {
                return Data_Monoid.mempty(__dict_Monoid_339);
            };
        };
    }, function (_463) {
        return function (_464) {
            return Prelude["const"](_464);
        };
    }, function (_461) {
        return function (_462) {
            return Prelude["const"](_462);
        };
    });
    var clownTraversable = new Data_Traversable.Traversable(function () {
        return clownFoldable;
    }, function () {
        return clownFunctor;
    }, function (__dict_Applicative_338) {
        return Data_Traversable.traverse(clownTraversable)(__dict_Applicative_338)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_337) {
        return function (_469) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Applicative_337))(Prelude["<<<"](Prelude.semigroupoidArr)(Clown.create)(runClown));
        };
    });
    var clownBifunctor = function (__dict_Functor_343) {
        return new Data_Bifunctor.Bifunctor(function (_446) {
            return function (_447) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Clown.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_343)(_446))(runClown));
            };
        });
    };
    var clownBifoldable = function (__dict_Foldable_344) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_345) {
            return function (_459) {
                return function (_460) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldMap(__dict_Foldable_344)(__dict_Monoid_345)(_459))(runClown);
                };
            };
        }, function (_456) {
            return function (_457) {
                return function (_458) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldl(__dict_Foldable_344)(_456)(_458))(runClown);
                };
            };
        }, function (_453) {
            return function (_454) {
                return function (_455) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldr(__dict_Foldable_344)(_453)(_455))(runClown);
                };
            };
        });
    };
    var clownBitraversable = function (__dict_Traversable_340) {
        return new Data_Bitraversable.Bitraversable(function () {
            return clownBifoldable(__dict_Traversable_340["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return clownBifunctor(__dict_Traversable_340["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_342) {
            return Data_Bitraversable.bitraverse(clownBitraversable(__dict_Traversable_340))(__dict_Applicative_342)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_341) {
            return function (_467) {
                return function (_468) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_341["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Clown.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Traversable.traverse(__dict_Traversable_340)(__dict_Applicative_341)(_467))(runClown));
                };
            };
        });
    };
    var clownBiapply = function (__dict_Apply_346) {
        return new Control_Biapply.Biapply(function (_449) {
            return function (_450) {
                return new Clown(Prelude["<*>"](__dict_Apply_346)(_449.value0)(_450.value0));
            };
        }, function () {
            return clownBifunctor(__dict_Apply_346["__superclass_Prelude.Functor_0"]());
        });
    };
    var clownBiapplicative = function (__dict_Applicative_347) {
        return new Control_Biapplicative.Biapplicative(function () {
            return clownBiapply(__dict_Applicative_347["__superclass_Prelude.Apply_0"]());
        }, function (_451) {
            return function (_452) {
                return new Clown(Prelude.pure(__dict_Applicative_347)(_451));
            };
        });
    };
    return {
        Clown: Clown, 
        runClown: runClown, 
        clownBifunctor: clownBifunctor, 
        clownFunctor: clownFunctor, 
        clownBiapply: clownBiapply, 
        clownBiapplicative: clownBiapplicative, 
        clownBifoldable: clownBifoldable, 
        clownFoldable: clownFoldable, 
        clownBitraversable: clownBitraversable, 
        clownTraversable: clownTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Flip = (function () {
    "use strict";
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapply = PS.Control_Biapply;
    var Flip = (function () {
        function Flip(value0) {
            this.value0 = value0;
        };
        Flip.create = function (value0) {
            return new Flip(value0);
        };
        return Flip;
    })();
    var runFlip = function (_470) {
        return _470.value0;
    };
    var flipFunctor = function (__dict_Bifunctor_351) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Flip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.lmap(__dict_Bifunctor_351)(f))(runFlip));
        });
    };
    var flipFoldable = function (__dict_Bifoldable_352) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_353) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_352)(__dict_Monoid_353)(f)(Prelude["const"](Data_Monoid.mempty(__dict_Monoid_353))))(runFlip);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_352)(f)(Prelude["const"])(z))(runFlip);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_352)(f)(Prelude.flip(Prelude["const"]))(z))(runFlip);
            };
        });
    };
    var flipTraversable = function (__dict_Bitraversable_348) {
        return new Data_Traversable.Traversable(function () {
            return flipFoldable(__dict_Bitraversable_348["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return flipFunctor(__dict_Bitraversable_348["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_350) {
            return Data_Traversable.traverse(flipTraversable(__dict_Bitraversable_348))(__dict_Applicative_350)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_349) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_349["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Flip.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_348)(__dict_Applicative_349)(f)(Prelude.pure(__dict_Applicative_349)))(runFlip));
            };
        });
    };
    var flipBifunctor = function (__dict_Bifunctor_357) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Flip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.bimap(__dict_Bifunctor_357)(g)(f))(runFlip));
            };
        });
    };
    var flipBifoldable = function (__dict_Bifoldable_358) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_359) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_358)(__dict_Monoid_359)(g)(f))(runFlip);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_358)(g)(f)(z))(runFlip);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_358)(g)(f)(z))(runFlip);
                };
            };
        });
    };
    var flipBitraversable = function (__dict_Bitraversable_354) {
        return new Data_Bitraversable.Bitraversable(function () {
            return flipBifoldable(__dict_Bitraversable_354["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return flipBifunctor(__dict_Bitraversable_354["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_356) {
            return Data_Bitraversable.bitraverse(flipBitraversable(__dict_Bitraversable_354))(__dict_Applicative_356)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_355) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_355["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Flip.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_354)(__dict_Applicative_355)(g)(f))(runFlip));
                };
            };
        });
    };
    var flipBiapply = function (__dict_Biapply_360) {
        return new Control_Biapply.Biapply(function (_471) {
            return function (_472) {
                return new Flip(Control_Biapply["<<*>>"](__dict_Biapply_360)(_471.value0)(_472.value0));
            };
        }, function () {
            return flipBifunctor(__dict_Biapply_360["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var flipBiapplicative = function (__dict_Biapplicative_361) {
        return new Control_Biapplicative.Biapplicative(function () {
            return flipBiapply(__dict_Biapplicative_361["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return function (b) {
                return new Flip(Control_Biapplicative.bipure(__dict_Biapplicative_361)(b)(a));
            };
        });
    };
    return {
        Flip: Flip, 
        runFlip: runFlip, 
        flipBifunctor: flipBifunctor, 
        flipFunctor: flipFunctor, 
        flipBiapply: flipBiapply, 
        flipBiapplicative: flipBiapplicative, 
        flipBifoldable: flipBifoldable, 
        flipFoldable: flipFoldable, 
        flipBitraversable: flipBitraversable, 
        flipTraversable: flipTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Join = (function () {
    "use strict";
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Traversable = PS.Data_Traversable;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapply = PS.Control_Biapply;
    var Join = (function () {
        function Join(value0) {
            this.value0 = value0;
        };
        Join.create = function (value0) {
            return new Join(value0);
        };
        return Join;
    })();
    var runJoin = function (_473) {
        return _473.value0;
    };
    var joinFunctor = function (__dict_Bifunctor_365) {
        return new Prelude.Functor(function (f) {
            return Prelude["<$>"](Prelude.functorArr)(Join.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.bimap(__dict_Bifunctor_365)(f)(f))(runJoin));
        });
    };
    var joinFoldable = function (__dict_Bifoldable_366) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_367) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_366)(__dict_Monoid_367)(f)(f))(runJoin);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_366)(f)(f)(z))(runJoin);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_366)(f)(f)(z))(runJoin);
            };
        });
    };
    var joinTraversable = function (__dict_Bitraversable_362) {
        return new Data_Traversable.Traversable(function () {
            return joinFoldable(__dict_Bitraversable_362["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return joinFunctor(__dict_Bitraversable_362["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_364) {
            return Data_Traversable.traverse(joinTraversable(__dict_Bitraversable_362))(__dict_Applicative_364)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_363) {
            return function (_476) {
                return function (_477) {
                    return Prelude["<$>"]((__dict_Applicative_363["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Join.create)(Data_Bitraversable.bitraverse(__dict_Bitraversable_362)(__dict_Applicative_363)(_476)(_476)(_477.value0));
                };
            };
        });
    };
    var joinApply = function (__dict_Biapply_368) {
        return new Prelude.Apply(function (_474) {
            return function (_475) {
                return new Join(Control_Biapply["<<*>>"](__dict_Biapply_368)(_474.value0)(_475.value0));
            };
        }, function () {
            return joinFunctor(__dict_Biapply_368["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var joinApplicative = function (__dict_Biapplicative_369) {
        return new Prelude.Applicative(function () {
            return joinApply(__dict_Biapplicative_369["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return new Join(Control_Biapplicative.bipure(__dict_Biapplicative_369)(a)(a));
        });
    };
    return {
        Join: Join, 
        runJoin: runJoin, 
        joinFunctor: joinFunctor, 
        joinApply: joinApply, 
        joinApplicative: joinApplicative, 
        joinFoldable: joinFoldable, 
        joinTraversable: joinTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Joker = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Control_Biapply = PS.Control_Biapply;
    var Joker = (function () {
        function Joker(value0) {
            this.value0 = value0;
        };
        Joker.create = function (value0) {
            return new Joker(value0);
        };
        return Joker;
    })();
    var runJoker = function (_478) {
        return _478.value0;
    };
    var jokerFunctor = function (__dict_Functor_373) {
        return new Prelude.Functor(function (g) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Joker.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_373)(g))(runJoker));
        });
    };
    var jokerFoldable = function (__dict_Foldable_374) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_375) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldMap(__dict_Foldable_374)(__dict_Monoid_375)(g))(runJoker);
            };
        }, function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldl(__dict_Foldable_374)(g)(z))(runJoker);
            };
        }, function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldr(__dict_Foldable_374)(g)(z))(runJoker);
            };
        });
    };
    var jokerTraversable = function (__dict_Traversable_370) {
        return new Data_Traversable.Traversable(function () {
            return jokerFoldable(__dict_Traversable_370["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return jokerFunctor(__dict_Traversable_370["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_372) {
            return Data_Traversable.traverse(jokerTraversable(__dict_Traversable_370))(__dict_Applicative_372)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_371) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_371["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Joker.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Traversable.traverse(__dict_Traversable_370)(__dict_Applicative_371)(g))(runJoker));
            };
        });
    };
    var jokerBifunctor = function (__dict_Functor_379) {
        return new Data_Bifunctor.Bifunctor(function (_479) {
            return function (_480) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Joker.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_379)(_480))(runJoker));
            };
        });
    };
    var jokerBifoldable = function (__dict_Foldable_380) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_381) {
            return function (_491) {
                return function (_492) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldMap(__dict_Foldable_380)(__dict_Monoid_381)(_492))(runJoker);
                };
            };
        }, function (_488) {
            return function (_489) {
                return function (_490) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldl(__dict_Foldable_380)(_489)(_490))(runJoker);
                };
            };
        }, function (_485) {
            return function (_486) {
                return function (_487) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldr(__dict_Foldable_380)(_486)(_487))(runJoker);
                };
            };
        });
    };
    var jokerBitraversable = function (__dict_Traversable_376) {
        return new Data_Bitraversable.Bitraversable(function () {
            return jokerBifoldable(__dict_Traversable_376["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return jokerBifunctor(__dict_Traversable_376["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_378) {
            return Data_Bitraversable.bitraverse(jokerBitraversable(__dict_Traversable_376))(__dict_Applicative_378)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_377) {
            return function (_493) {
                return function (_494) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_377["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Joker.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Traversable.traverse(__dict_Traversable_376)(__dict_Applicative_377)(_494))(runJoker));
                };
            };
        });
    };
    var jokerBiapply = function (__dict_Apply_382) {
        return new Control_Biapply.Biapply(function (_481) {
            return function (_482) {
                return new Joker(Prelude["<*>"](__dict_Apply_382)(_481.value0)(_482.value0));
            };
        }, function () {
            return jokerBifunctor(__dict_Apply_382["__superclass_Prelude.Functor_0"]());
        });
    };
    var jokerBiapplicative = function (__dict_Applicative_383) {
        return new Control_Biapplicative.Biapplicative(function () {
            return jokerBiapply(__dict_Applicative_383["__superclass_Prelude.Apply_0"]());
        }, function (_483) {
            return function (_484) {
                return new Joker(Prelude.pure(__dict_Applicative_383)(_484));
            };
        });
    };
    return {
        Joker: Joker, 
        runJoker: runJoker, 
        jokerBifunctor: jokerBifunctor, 
        jokerFunctor: jokerFunctor, 
        jokerBiapply: jokerBiapply, 
        jokerBiapplicative: jokerBiapplicative, 
        jokerBifoldable: jokerBifoldable, 
        jokerFoldable: jokerFoldable, 
        jokerBitraversable: jokerBitraversable, 
        jokerTraversable: jokerTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Product = (function () {
    "use strict";
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Monoid_Endo = PS.Data_Monoid_Endo;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Prelude = PS.Prelude;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapply = PS.Control_Biapply;
    var Pair = (function () {
        function Pair(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Pair.create = function (value0) {
            return function (value1) {
                return new Pair(value0, value1);
            };
        };
        return Pair;
    })();
    var productBifunctor = function (__dict_Bifunctor_388) {
        return function (__dict_Bifunctor_389) {
            return new Data_Bifunctor.Bifunctor(function (_495) {
                return function (_496) {
                    return function (_497) {
                        return new Pair(Data_Bifunctor.bimap(__dict_Bifunctor_388)(_495)(_496)(_497.value0), Data_Bifunctor.bimap(__dict_Bifunctor_389)(_495)(_496)(_497.value1));
                    };
                };
            });
        };
    };
    
    /**
     *  todo: simplify bifoldr/bifoldl a little bit
     */
    var productBifoldable = function (__dict_Bifoldable_390) {
        return function (__dict_Bifoldable_391) {
            return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_392) {
                return function (_500) {
                    return function (_501) {
                        return function (_502) {
                            return Prelude["<>"](__dict_Monoid_392["__superclass_Prelude.Semigroup_0"]())(Data_Bifoldable.bifoldMap(__dict_Bifoldable_390)(__dict_Monoid_392)(_500)(_501)(_502.value0))(Data_Bifoldable.bifoldMap(__dict_Bifoldable_391)(__dict_Monoid_392)(_500)(_501)(_502.value1));
                        };
                    };
                };
            }, function (f) {
                return function (g) {
                    return function (z) {
                        return function (p) {
                            return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(Data_Bifoldable.bifoldMap(productBifoldable(__dict_Bifoldable_390)(__dict_Bifoldable_391))(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Dual.Dual)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Endo.Endo)(Prelude.flip(f))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Dual.Dual)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Endo.Endo)(Prelude.flip(g))))(p)))(z);
                        };
                    };
                };
            }, function (f) {
                return function (g) {
                    return function (z) {
                        return function (p) {
                            return Data_Monoid_Endo.runEndo(Data_Bifoldable.bifoldMap(productBifoldable(__dict_Bifoldable_390)(__dict_Bifoldable_391))(Data_Monoid_Endo.monoidEndo)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Endo.Endo)(f))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Endo.Endo)(g))(p))(z);
                        };
                    };
                };
            });
        };
    };
    var productBitraversable = function (__dict_Bitraversable_384) {
        return function (__dict_Bitraversable_385) {
            return new Data_Bitraversable.Bitraversable(function () {
                return productBifoldable(__dict_Bitraversable_384["__superclass_Data.Bifoldable.Bifoldable_1"]())(__dict_Bitraversable_385["__superclass_Data.Bifoldable.Bifoldable_1"]());
            }, function () {
                return productBifunctor(__dict_Bitraversable_384["__superclass_Data.Bifunctor.Bifunctor_0"]())(__dict_Bitraversable_385["__superclass_Data.Bifunctor.Bifunctor_0"]());
            }, function (__dict_Applicative_387) {
                return Data_Bitraversable.bitraverse(productBitraversable(__dict_Bitraversable_384)(__dict_Bitraversable_385))(__dict_Applicative_387)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
            }, function (__dict_Applicative_386) {
                return function (_503) {
                    return function (_504) {
                        return function (_505) {
                            return Prelude["<*>"](__dict_Applicative_386["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_386["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Pair.create)(Data_Bitraversable.bitraverse(__dict_Bitraversable_384)(__dict_Applicative_386)(_503)(_504)(_505.value0)))(Data_Bitraversable.bitraverse(__dict_Bitraversable_385)(__dict_Applicative_386)(_503)(_504)(_505.value1));
                        };
                    };
                };
            });
        };
    };
    var productBiapply = function (__dict_Biapply_393) {
        return function (__dict_Biapply_394) {
            return new Control_Biapply.Biapply(function (_498) {
                return function (_499) {
                    return new Pair(Control_Biapply["<<*>>"](__dict_Biapply_393)(_498.value0)(_499.value0), Control_Biapply["<<*>>"](__dict_Biapply_394)(_498.value1)(_499.value1));
                };
            }, function () {
                return productBifunctor(__dict_Biapply_393["__superclass_Data.Bifunctor.Bifunctor_0"]())(__dict_Biapply_394["__superclass_Data.Bifunctor.Bifunctor_0"]());
            });
        };
    };
    var productBiapplicative = function (__dict_Biapplicative_395) {
        return function (__dict_Biapplicative_396) {
            return new Control_Biapplicative.Biapplicative(function () {
                return productBiapply(__dict_Biapplicative_395["__superclass_Control.Biapply.Biapply_0"]())(__dict_Biapplicative_396["__superclass_Control.Biapply.Biapply_0"]());
            }, function (a) {
                return function (b) {
                    return new Pair(Control_Biapplicative.bipure(__dict_Biapplicative_395)(a)(b), Control_Biapplicative.bipure(__dict_Biapplicative_396)(a)(b));
                };
            });
        };
    };
    return {
        Pair: Pair, 
        productBifunctor: productBifunctor, 
        productBiapply: productBiapply, 
        productBiapplicative: productBiapplicative, 
        productBifoldable: productBifoldable, 
        productBitraversable: productBitraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Wrap = (function () {
    "use strict";
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapply = PS.Control_Biapply;
    var Wrap = (function () {
        function Wrap(value0) {
            this.value0 = value0;
        };
        Wrap.create = function (value0) {
            return new Wrap(value0);
        };
        return Wrap;
    })();
    var unwrap = function (_506) {
        return _506.value0;
    };
    var wrapBifoldable = function (__dict_Bifoldable_399) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_400) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_399)(__dict_Monoid_400)(f)(g))(unwrap);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_399)(f)(g)(z))(unwrap);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_399)(f)(g)(z))(unwrap);
                };
            };
        });
    };
    var wrapBifunctor = function (__dict_Bifunctor_401) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Wrap.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.bimap(__dict_Bifunctor_401)(f)(g))(unwrap));
            };
        });
    };
    var wrapBiapply = function (__dict_Biapply_397) {
        return new Control_Biapply.Biapply(function (_507) {
            return function (_508) {
                return new Wrap(Control_Biapply["<<*>>"](__dict_Biapply_397)(_507.value0)(_508.value0));
            };
        }, function () {
            return wrapBifunctor(__dict_Biapply_397["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var wrapBiapplicative = function (__dict_Biapplicative_398) {
        return new Control_Biapplicative.Biapplicative(function () {
            return wrapBiapply(__dict_Biapplicative_398["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return function (b) {
                return new Wrap(Control_Biapplicative.bipure(__dict_Biapplicative_398)(a)(b));
            };
        });
    };
    var wrapBitraversable = function (__dict_Bitraversable_402) {
        return new Data_Bitraversable.Bitraversable(function () {
            return wrapBifoldable(__dict_Bitraversable_402["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return wrapBifunctor(__dict_Bitraversable_402["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_404) {
            return Data_Bitraversable.bitraverse(wrapBitraversable(__dict_Bitraversable_402))(__dict_Applicative_404)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_403) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_403["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Wrap.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_402)(__dict_Applicative_403)(f)(g))(unwrap));
                };
            };
        });
    };
    var wrapFoldable = function (__dict_Bifoldable_405) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_406) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_405)(__dict_Monoid_406)(Prelude["const"](Data_Monoid.mempty(__dict_Monoid_406)))(f))(unwrap);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_405)(Prelude["const"])(f)(z))(unwrap);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_405)(Prelude.flip(Prelude["const"]))(f)(z))(unwrap);
            };
        });
    };
    var wrapFunctor = function (__dict_Bifunctor_407) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Wrap.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.rmap(__dict_Bifunctor_407)(f))(unwrap));
        });
    };
    var wrapTraversable = function (__dict_Bitraversable_408) {
        return new Data_Traversable.Traversable(function () {
            return wrapFoldable(__dict_Bitraversable_408["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return wrapFunctor(__dict_Bitraversable_408["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_410) {
            return Data_Traversable.traverse(wrapTraversable(__dict_Bitraversable_408))(__dict_Applicative_410)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_409) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_409["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Wrap.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_408)(__dict_Applicative_409)(Prelude.pure(__dict_Applicative_409))(f))(unwrap));
            };
        });
    };
    return {
        Wrap: Wrap, 
        unwrap: unwrap, 
        wrapBifunctor: wrapBifunctor, 
        wrapFunctor: wrapFunctor, 
        wrapBiapply: wrapBiapply, 
        wrapBiapplicative: wrapBiapplicative, 
        wrapBifoldable: wrapBifoldable, 
        wrapFoldable: wrapFoldable, 
        wrapBitraversable: wrapBitraversable, 
        wrapTraversable: wrapTraversable
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Identity = function (x) {
        return x;
    };
    var showConst = function (__dict_Show_413) {
        return new Prelude.Show(function (_514) {
            return "Identity (" + (Prelude.show(__dict_Show_413)(_514) + ")");
        });
    };
    var runIdentity = function (_509) {
        return _509;
    };
    var functorIdentity = new Prelude.Functor(function (_515) {
        return function (_516) {
            return _515(_516);
        };
    });
    var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_415) {
        return function (_526) {
            return function (_527) {
                return _526(_527);
            };
        };
    }, function (_523) {
        return function (_524) {
            return function (_525) {
                return _523(_524)(_525);
            };
        };
    }, function (_520) {
        return function (_521) {
            return function (_522) {
                return _520(_522)(_521);
            };
        };
    });
    var traversableIdentity = new Data_Traversable.Traversable(function () {
        return foldableIdentity;
    }, function () {
        return functorIdentity;
    }, function (__dict_Applicative_412) {
        return function (_530) {
            return Prelude["<$>"]((__dict_Applicative_412["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(_530);
        };
    }, function (__dict_Applicative_411) {
        return function (_528) {
            return function (_529) {
                return Prelude["<$>"]((__dict_Applicative_411["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(_528(_529));
            };
        };
    });
    var extendIdentity = new Control_Extend.Extend(function (f) {
        return function (m) {
            return f(m);
        };
    }, function () {
        return functorIdentity;
    });
    var eqIdentity = function (__dict_Eq_416) {
        return new Prelude.Eq(function (x) {
            return function (y) {
                return !Prelude["=="](eqIdentity(__dict_Eq_416))(x)(y);
            };
        }, function (_510) {
            return function (_511) {
                return Prelude["=="](__dict_Eq_416)(_510)(_511);
            };
        });
    };
    var ordIdentity = function (__dict_Ord_414) {
        return new Prelude.Ord(function () {
            return eqIdentity(__dict_Ord_414["__superclass_Prelude.Eq_0"]());
        }, function (_512) {
            return function (_513) {
                return Prelude.compare(__dict_Ord_414)(_512)(_513);
            };
        });
    };
    var comonadIdentity = new Control_Comonad.Comonad(function () {
        return extendIdentity;
    }, function (_519) {
        return _519;
    });
    var applyIdentity = new Prelude.Apply(function (_517) {
        return function (_518) {
            return _517(_518);
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        eqIdentity: eqIdentity, 
        ordIdentity: ordIdentity, 
        showConst: showConst, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity, 
        bindIdentity: bindIdentity, 
        monadIdentity: monadIdentity, 
        extendIdentity: extendIdentity, 
        comonadIdentity: comonadIdentity, 
        foldableIdentity: foldableIdentity, 
        traversableIdentity: traversableIdentity
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var withEnv = Control_Comonad_Env_Trans.withEnvT;
    var runEnv = function (x) {
        return Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Control_Comonad_Env_Trans.runEnvT(x));
    };
    var mapEnv = Prelude["<$>"](Control_Comonad_Env_Trans.functorEnvT(Data_Identity.functorIdentity));
    var env = function (e) {
        return function (a) {
            return Control_Comonad_Env_Trans.EnvT(Data_Tuple.Tuple.create(e)(a));
        };
    };
    return {
        env: env, 
        mapEnv: mapEnv, 
        withEnv: withEnv, 
        runEnv: runEnv
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Class = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Comonad_Env = PS.Control_Comonad_Env;
    var ComonadEnv = function (__superclass_Control$dotComonad$dotComonad_0, ask, local) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.ask = ask;
        this.local = local;
    };
    var local = function (dict) {
        return dict.local;
    };
    var comonadEnvTuple = new ComonadEnv(function () {
        return Data_Tuple.comonadTuple;
    }, Data_Tuple.fst, function (_531) {
        return function (_532) {
            return new Data_Tuple.Tuple(_531(_532.value0), _532.value1);
        };
    });
    var comonadEnvEnvT = function (__dict_Comonad_417) {
        return new ComonadEnv(function () {
            return Control_Comonad_Env_Trans.comonadEnvT(__dict_Comonad_417);
        }, function (x) {
            return Data_Tuple.fst(Control_Comonad_Env_Trans.runEnvT(x));
        }, function (f) {
            return function (x) {
                return Control_Comonad_Env_Trans.EnvT((function () {
                    var _1688 = Control_Comonad_Env_Trans.runEnvT(x);
                    return new Data_Tuple.Tuple(f(_1688.value0), _1688.value1);
                })());
            };
        });
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var asks = function (__dict_ComonadEnv_418) {
        return function (f) {
            return function (x) {
                return f(ask(__dict_ComonadEnv_418)(x));
            };
        };
    };
    return {
        ComonadEnv: ComonadEnv, 
        asks: asks, 
        local: local, 
        ask: ask, 
        comonadEnvTuple: comonadEnvTuple, 
        comonadEnvEnvT: comonadEnvEnvT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Prelude = PS.Prelude;
    var store = function (f) {
        return function (x) {
            return Control_Comonad_Store_Trans.StoreT(new Data_Tuple.Tuple(f, x));
        };
    };
    var runStore = function (s) {
        return Data_Tuple.swap(Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Data_Tuple.swap(Control_Comonad_Store_Trans.runStoreT(s))));
    };
    return {
        store: store, 
        runStore: runStore
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced = (function () {
    "use strict";
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    var traced = Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Control_Comonad_Traced_Trans.TracedT);
    var runTraced = Prelude[">>>"](Prelude.semigroupoidArr)(Control_Comonad_Traced_Trans.runTracedT)(Data_Identity.runIdentity);
    return {
        traced: traced, 
        runTraced: runTraced
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    
    /**
     *  | Writer operations
     */
    var writer = function (__dict_Applicative_419) {
        return function (_536) {
            return function (_) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_419)({
                        state: s, 
                        result: _536.value0, 
                        log: _536.value1
                    });
                };
            };
        };
    };
    var withRWS = Control_Monad_RWS_Trans.withRWST;
    var tell = function (__dict_Applicative_420) {
        return function (w) {
            return writer(__dict_Applicative_420)(new Data_Tuple.Tuple(Prelude.unit, w));
        };
    };
    
    /**
     *  | State operations
     */
    var state = function (__dict_Applicative_421) {
        return function (__dict_Monoid_422) {
            return function (f) {
                return function (_) {
                    return function (s) {
                        var _1694 = f(s);
                        return Prelude.pure(__dict_Applicative_421)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_422)(_1694.value1)(_1694.value0)(Data_Monoid.mempty(__dict_Monoid_422)));
                    };
                };
            };
        };
    };
    var rws = function (f) {
        return function (r) {
            return function (s) {
                return Prelude["return"](Data_Identity.monadIdentity)(f(r)(s));
            };
        };
    };
    var runRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
            };
        };
    };
    var reader = function (__dict_Applicative_423) {
        return function (__dict_Monoid_424) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_423)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_424)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_424)));
                    };
                };
            };
        };
    };
    var put = function (__dict_Applicative_425) {
        return function (__dict_Monoid_426) {
            return function (s) {
                return state(__dict_Applicative_425)(__dict_Monoid_426)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var pass = function (__dict_Monad_427) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_427["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_534) {
                        return Prelude.pure(__dict_Monad_427["__superclass_Prelude.Applicative_0"]())({
                            state: _534.state, 
                            result: _534.result.value0, 
                            log: _534.result.value1(_534.log)
                        });
                    });
                };
            };
        };
    };
    var modify = function (__dict_Applicative_428) {
        return function (__dict_Monoid_429) {
            return function (f) {
                return state(__dict_Applicative_428)(__dict_Monoid_429)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var mapRWS = function (f) {
        return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidArr)(f)(Data_Identity.Identity)));
    };
    var local = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
                };
            };
        };
    };
    var listens = function (__dict_Monad_430) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_430["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_535) {
                            return Prelude.pure(__dict_Monad_430["__superclass_Prelude.Applicative_0"]())({
                                state: _535.state, 
                                result: new Data_Tuple.Tuple(_535.result, f(_535.log)), 
                                log: _535.log
                            });
                        });
                    };
                };
            };
        };
    };
    var listen = function (__dict_Monad_431) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_431["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_533) {
                        return Prelude.pure(__dict_Monad_431["__superclass_Prelude.Applicative_0"]())({
                            state: _533.state, 
                            result: new Data_Tuple.Tuple(_533.result, _533.log), 
                            log: _533.log
                        });
                    });
                };
            };
        };
    };
    var gets = function (__dict_Applicative_432) {
        return function (__dict_Monoid_433) {
            return function (f) {
                return state(__dict_Applicative_432)(__dict_Monoid_433)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Applicative_434) {
        return function (__dict_Monoid_435) {
            return state(__dict_Applicative_434)(__dict_Monoid_435)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    var execRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var evalRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var censor = function (__dict_Monad_436) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_436["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                            return Prelude.pure(__dict_Monad_436["__superclass_Prelude.Applicative_0"]())((function () {
                                var _1711 = {};
                                for (var _1712 in see) {
                                    if (see.hasOwnProperty(_1712)) {
                                        _1711[_1712] = see[_1712];
                                    };
                                };
                                _1711.log = f(see.log);
                                return _1711;
                            })());
                        });
                    };
                };
            };
        };
    };
    
    /**
     *  | Reader operations
     */
    var ask = function (__dict_Applicative_437) {
        return function (__dict_Monoid_438) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_437)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_438)(s)(r)(Data_Monoid.mempty(__dict_Monoid_438)));
                };
            };
        };
    };
    return {
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        reader: reader, 
        local: local, 
        ask: ask, 
        withRWS: withRWS, 
        mapRWS: mapRWS, 
        execRWS: execRWS, 
        evalRWS: evalRWS, 
        runRWS: runRWS, 
        rws: rws
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var MonadReader = function (ask, local) {
        this.ask = ask;
        this.local = local;
    };
    var monadReaderReaderT = function (__dict_Monad_439) {
        return new MonadReader(Prelude["return"](__dict_Monad_439), Control_Monad_Reader_Trans.withReaderT);
    };
    var monadReaderRWST = function (__dict_Monad_440) {
        return function (__dict_Monoid_441) {
            return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_440["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_441), Control_Monad_RWS.local);
        };
    };
    var monadReaderFun = new MonadReader(Prelude.id(Prelude.categoryArr), Prelude[">>>"](Prelude.semigroupoidArr));
    var local = function (dict) {
        return dict.local;
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var monadReaderErrorT = function (__dict_Monad_442) {
        return function (__dict_Error_443) {
            return function (__dict_MonadReader_444) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_443))(__dict_Monad_442)(ask(__dict_MonadReader_444)), function (f) {
                    return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_444)(f));
                });
            };
        };
    };
    var monadReaderMaybeT = function (__dict_Monad_445) {
        return function (__dict_MonadReader_446) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_445)(ask(__dict_MonadReader_446)), function (f) {
                return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_446)(f));
            });
        };
    };
    var monadReaderStateT = function (__dict_Monad_447) {
        return function (__dict_MonadReader_448) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_447)(ask(__dict_MonadReader_448)), function (f) {
                return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_448)(f));
            });
        };
    };
    var monadReaderWriterT = function (__dict_Monad_449) {
        return function (__dict_Monoid_450) {
            return function (__dict_MonadReader_451) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_450))(__dict_Monad_449)(ask(__dict_MonadReader_451)), function (f) {
                    return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_451)(f));
                });
            };
        };
    };
    var reader = function (__dict_Monad_452) {
        return function (__dict_MonadReader_453) {
            return function (f) {
                return Prelude[">>="](__dict_Monad_452["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_453))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_452))(f));
            };
        };
    };
    return {
        MonadReader: MonadReader, 
        reader: reader, 
        local: local, 
        ask: ask, 
        monadReaderFun: monadReaderFun, 
        monadReaderReaderT: monadReaderReaderT, 
        monadReaderErrorT: monadReaderErrorT, 
        monadReaderMaybeT: monadReaderMaybeT, 
        monadReaderWriterT: monadReaderWriterT, 
        monadReaderStateT: monadReaderStateT, 
        monadReaderRWST: monadReaderRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadState = function (state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var put = function (__dict_Monad_454) {
        return function (__dict_MonadState_455) {
            return function (s) {
                return state(__dict_MonadState_455)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var monadStateWriterT = function (__dict_Monad_456) {
        return function (__dict_Monoid_457) {
            return function (__dict_MonadState_458) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_457))(__dict_Monad_456)(state(__dict_MonadState_458)(f));
                });
            };
        };
    };
    var monadStateStateT1 = function (__dict_Monad_459) {
        return function (__dict_MonadState_460) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_459)(state(__dict_MonadState_460)(f));
            });
        };
    };
    var monadStateStateT = function (__dict_Monad_461) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_461))(f));
        });
    };
    var monadStateReaderT = function (__dict_Monad_462) {
        return function (__dict_MonadState_463) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_462)(state(__dict_MonadState_463)(f));
            });
        };
    };
    var monadStateRWST = function (__dict_Monad_464) {
        return function (__dict_Monoid_465) {
            return new MonadState(Control_Monad_RWS.state(__dict_Monad_464["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_465));
        };
    };
    var monadStateMaybeT = function (__dict_Monad_466) {
        return function (__dict_MonadState_467) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_466)(state(__dict_MonadState_467)(f));
            });
        };
    };
    var monadStateErrorT = function (__dict_Monad_468) {
        return function (__dict_Error_469) {
            return function (__dict_MonadState_470) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_469))(__dict_Monad_468)(state(__dict_MonadState_470)(f));
                });
            };
        };
    };
    var modify = function (__dict_Monad_471) {
        return function (__dict_MonadState_472) {
            return function (f) {
                return state(__dict_MonadState_472)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var gets = function (__dict_Monad_473) {
        return function (__dict_MonadState_474) {
            return function (f) {
                return state(__dict_MonadState_474)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Monad_475) {
        return function (__dict_MonadState_476) {
            return state(__dict_MonadState_476)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    return {
        MonadState: MonadState, 
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        monadStateStateT: monadStateStateT, 
        monadStateStateT1: monadStateStateT1, 
        monadStateErrorT: monadStateErrorT, 
        monadStateMaybeT: monadStateMaybeT, 
        monadStateReaderT: monadStateReaderT, 
        monadStateWriterT: monadStateWriterT, 
        monadStateRWST: monadStateRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadWriter = function (listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_477) {
        return function (__dict_Monad_478) {
            return function (__dict_MonadWriter_479) {
                return function (w) {
                    return writer(__dict_MonadWriter_479)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var pass = function (dict) {
        return dict.pass;
    };
    var monadWriterWriterT = function (__dict_Monoid_480) {
        return function (__dict_Monad_481) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT(Prelude[">>="](__dict_Monad_481["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_23) {
                    return Prelude["return"](__dict_Monad_481)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_23.value0, _23.value1), _23.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT(Prelude[">>="](__dict_Monad_481["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_24) {
                    return Prelude["return"](__dict_Monad_481)(new Data_Tuple.Tuple(_24.value0.value0, _24.value0.value1(_24.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Writer_Trans.WriterT)(Prelude["return"](__dict_Monad_481)));
        };
    };
    var monadWriterRWST = function (__dict_Monad_482) {
        return function (__dict_Monoid_483) {
            return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_482), Control_Monad_RWS.pass(__dict_Monad_482), Control_Monad_RWS.writer(__dict_Monad_482["__superclass_Prelude.Applicative_0"]()));
        };
    };
    var listen = function (dict) {
        return dict.listen;
    };
    var listens = function (__dict_Monoid_484) {
        return function (__dict_Monad_485) {
            return function (__dict_MonadWriter_486) {
                return function (f) {
                    return function (m) {
                        return Prelude[">>="](__dict_Monad_485["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_486)(m))(function (_21) {
                            return Prelude["return"](__dict_Monad_485)(new Data_Tuple.Tuple(_21.value0, f(_21.value1)));
                        });
                    };
                };
            };
        };
    };
    var monadWriterErrorT = function (__dict_Monad_487) {
        return function (__dict_Error_488) {
            return function (__dict_MonadWriter_489) {
                return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_487)(listen(__dict_MonadWriter_489)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_487)(pass(__dict_MonadWriter_489)), function (wd) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_488))(__dict_Monad_487)(writer(__dict_MonadWriter_489)(wd));
                });
            };
        };
    };
    var monadWriterMaybeT = function (__dict_Monad_490) {
        return function (__dict_MonadWriter_491) {
            return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_490)(listen(__dict_MonadWriter_491)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_490)(pass(__dict_MonadWriter_491)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_490)(writer(__dict_MonadWriter_491)(wd));
            });
        };
    };
    var monadWriterReaderT = function (__dict_Monad_492) {
        return function (__dict_MonadWriter_493) {
            return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_493)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_493)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_492)(writer(__dict_MonadWriter_493)(wd));
            });
        };
    };
    var monadWriterStateT = function (__dict_Monad_494) {
        return function (__dict_MonadWriter_495) {
            return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_494)(listen(__dict_MonadWriter_495)), Control_Monad_State_Trans.liftPassState(__dict_Monad_494)(pass(__dict_MonadWriter_495)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_494)(writer(__dict_MonadWriter_495)(wd));
            });
        };
    };
    var censor = function (__dict_Monoid_496) {
        return function (__dict_Monad_497) {
            return function (__dict_MonadWriter_498) {
                return function (f) {
                    return function (m) {
                        return pass(__dict_MonadWriter_498)(Prelude[">>="](__dict_Monad_497["__superclass_Prelude.Bind_1"]())(m)(function (_22) {
                            return Prelude["return"](__dict_Monad_497)(new Data_Tuple.Tuple(_22, f));
                        }));
                    };
                };
            };
        };
    };
    return {
        MonadWriter: MonadWriter, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        monadWriterWriterT: monadWriterWriterT, 
        monadWriterErrorT: monadWriterErrorT, 
        monadWriterMaybeT: monadWriterMaybeT, 
        monadWriterStateT: monadWriterStateT, 
        monadWriterReaderT: monadWriterReaderT, 
        monadWriterRWST: monadWriterRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Data_Monoid = PS.Data_Monoid;
    var MonadRWS = function (__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3, __superclass_Data$dotMonoid$dotMonoid_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Monad.Reader.Class.MonadReader_2"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2;
        this["__superclass_Control.Monad.State.Class.MonadState_4"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4;
        this["__superclass_Control.Monad.Writer.Class.MonadWriter_3"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3;
        this["__superclass_Data.Monoid.Monoid_1"] = __superclass_Data$dotMonoid$dotMonoid_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var monadRWSRWST = function (__dict_Monad_499) {
        return function (__dict_Monoid_500) {
            return new MonadRWS(function () {
                return Control_Monad_Reader_Class.monadReaderRWST(__dict_Monad_499)(__dict_Monoid_500);
            }, function () {
                return Control_Monad_State_Class.monadStateRWST(__dict_Monad_499)(__dict_Monoid_500);
            }, function () {
                return Control_Monad_Writer_Class.monadWriterRWST(__dict_Monad_499)(__dict_Monoid_500);
            }, function () {
                return __dict_Monoid_500;
            }, function () {
                return Control_Monad_RWS_Trans.monadRWST(__dict_Monad_499)(__dict_Monoid_500);
            });
        };
    };
    var monadRWSMaybeT = function (__dict_Monad_501) {
        return function (__dict_Monoid_502) {
            return function (__dict_MonadRWS_503) {
                return function (__dict_MonadReader_504) {
                    return function (__dict_MonadWriter_505) {
                        return function (__dict_MonadState_506) {
                            return new MonadRWS(function () {
                                return Control_Monad_Reader_Class.monadReaderMaybeT(__dict_Monad_501)(__dict_MonadReader_504);
                            }, function () {
                                return Control_Monad_State_Class.monadStateMaybeT(__dict_Monad_501)(__dict_MonadState_506);
                            }, function () {
                                return Control_Monad_Writer_Class.monadWriterMaybeT(__dict_Monad_501)(__dict_MonadWriter_505);
                            }, function () {
                                return __dict_Monoid_502;
                            }, function () {
                                return Control_Monad_Maybe_Trans.monadMaybeT(__dict_Monad_501);
                            });
                        };
                    };
                };
            };
        };
    };
    var monadRWSErrorT = function (__dict_Monad_507) {
        return function (__dict_Monoid_508) {
            return function (__dict_MonadRWS_509) {
                return function (__dict_MonadReader_510) {
                    return function (__dict_MonadWriter_511) {
                        return function (__dict_MonadState_512) {
                            return function (__dict_Error_513) {
                                return new MonadRWS(function () {
                                    return Control_Monad_Reader_Class.monadReaderErrorT(__dict_Monad_507)(__dict_Error_513)(__dict_MonadReader_510);
                                }, function () {
                                    return Control_Monad_State_Class.monadStateErrorT(__dict_Monad_507)(__dict_Error_513)(__dict_MonadState_512);
                                }, function () {
                                    return Control_Monad_Writer_Class.monadWriterErrorT(__dict_Monad_507)(__dict_Error_513)(__dict_MonadWriter_511);
                                }, function () {
                                    return __dict_Monoid_508;
                                }, function () {
                                    return Control_Monad_Error_Trans.monadErrorT(__dict_Monad_507)(__dict_Error_513);
                                });
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        MonadRWS: MonadRWS, 
        monadRWSRWST: monadRWSRWST, 
        monadRWSErrorT: monadRWSErrorT, 
        monadRWSMaybeT: monadRWSMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Prelude = PS.Prelude;
    var withReader = Control_Monad_Reader_Trans.withReaderT;
    var runReader = function (m) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Reader_Trans.runReaderT(m));
    };
    var mapReader = function (f) {
        return Control_Monad_Reader_Trans.mapReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    return {
        mapReader: mapReader, 
        withReader: withReader, 
        runReader: runReader
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var withState = Control_Monad_State_Trans.withStateT;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var mapState = function (f) {
        return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    var evalState = function (m) {
        return function (s) {
            return Data_Tuple.fst(runState(m)(s));
        };
    };
    return {
        withState: withState, 
        mapState: mapState, 
        execState: execState, 
        evalState: evalState, 
        runState: runState
    };
})();
var PS = PS || {};
PS.Optic_Monad = (function () {
    "use strict";
    var Control_Monad_State = PS.Control_Monad_State;
    var Prelude = PS.Prelude;
    var $hash$tilde = function (s) {
        return function (sa) {
            return Control_Monad_State.execState(sa)(s);
        };
    };
    return {
        "#~": $hash$tilde
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var mapWriter = function (f) {
        return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        mapWriter: mapWriter, 
        execWriter: execWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Data_Distributive = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    
    /**
     *  Categorical dual of Traversable
     */
    var Distributive = function (__superclass_Prelude$dotFunctor_0, collect, distribute) {
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.collect = collect;
        this.distribute = distribute;
    };
    var distributiveIdentity = new Distributive(function () {
        return Data_Identity.functorIdentity;
    }, function (__dict_Functor_515) {
        return function (a2Idb) {
            return function (ga) {
                return Prelude["<$>"](__dict_Functor_515)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(a2Idb))(ga);
            };
        };
    }, function (__dict_Functor_514) {
        return function (gIdb) {
            return Prelude["<$>"](__dict_Functor_514)(Data_Identity.runIdentity)(gIdb);
        };
    });
    
    /**
     *  Categorical dual of Traversable
     *  Dual of sequence
     */
    var distribute = function (dict) {
        return dict.distribute;
    };
    
    /**
     *  Default implementation
     *  collect a2gb fa = distribute (a2gb <$> fa)
     */
    var cotraverse = function (__dict_Distributive_516) {
        return function (__dict_Functor_517) {
            return function (ga2b) {
                return function (gfa) {
                    return Prelude["<$>"](__dict_Distributive_516["__superclass_Prelude.Functor_0"]())(ga2b)(distribute(__dict_Distributive_516)(__dict_Functor_517)(gfa));
                };
            };
        };
    };
    
    /**
     *  Categorical dual of Traversable
     *  Default implementation
     *  distribute = collect id
     */
    var collect = function (dict) {
        return dict.collect;
    };
    return {
        Distributive: Distributive, 
        cotraverse: cotraverse, 
        collect: collect, 
        distribute: distribute, 
        distributiveIdentity: distributiveIdentity
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Leaf = (function () {
        function Leaf() {

        };
        Leaf.value = new Leaf();
        return Leaf;
    })();
    var Two = (function () {
        function Two(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Two.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Two(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Two;
    })();
    var Three = (function () {
        function Three(value0, value1, value2, value3, value4, value5, value6) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
            this.value6 = value6;
        };
        Three.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return function (value6) {
                                    return new Three(value0, value1, value2, value3, value4, value5, value6);
                                };
                            };
                        };
                    };
                };
            };
        };
        return Three;
    })();
    var TwoLeft = (function () {
        function TwoLeft(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoLeft(value0, value1, value2);
                };
            };
        };
        return TwoLeft;
    })();
    var TwoRight = (function () {
        function TwoRight(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoRight(value0, value1, value2);
                };
            };
        };
        return TwoRight;
    })();
    var ThreeLeft = (function () {
        function ThreeLeft(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeLeft;
    })();
    var ThreeMiddle = (function () {
        function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeMiddle.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeMiddle;
    })();
    var ThreeRight = (function () {
        function ThreeRight(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeRight(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeRight;
    })();
    var KickUp = (function () {
        function KickUp(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        KickUp.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new KickUp(value0, value1, value2, value3);
                    };
                };
            };
        };
        return KickUp;
    })();
    var values = function (_546) {
        if (_546 instanceof Leaf) {
            return [  ];
        };
        if (_546 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_546.value0))(Prelude["++"](Data_Array.semigroupArray)([ _546.value2 ])(values(_546.value3)));
        };
        if (_546 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_546.value0))(Prelude["++"](Data_Array.semigroupArray)([ _546.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_546.value3))(Prelude["++"](Data_Array.semigroupArray)([ _546.value5 ])(values(_546.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var toList = function (_544) {
        if (_544 instanceof Leaf) {
            return [  ];
        };
        if (_544 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_544.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_544.value1, _544.value2) ])(toList(_544.value3)));
        };
        if (_544 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_544.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_544.value1, _544.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_544.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_544.value4, _544.value5) ])(toList(_544.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
    var singleton = function (k) {
        return function (v) {
            return new Two(Leaf.value, k, v, Leaf.value);
        };
    };
    var showTree = function (__dict_Show_518) {
        return function (__dict_Show_519) {
            return function (_538) {
                if (_538 instanceof Leaf) {
                    return "Leaf";
                };
                if (_538 instanceof Two) {
                    return "Two (" + (showTree(__dict_Show_518)(__dict_Show_519)(_538.value0) + (") (" + (Prelude.show(__dict_Show_518)(_538.value1) + (") (" + (Prelude.show(__dict_Show_519)(_538.value2) + (") (" + (showTree(__dict_Show_518)(__dict_Show_519)(_538.value3) + ")")))))));
                };
                if (_538 instanceof Three) {
                    return "Three (" + (showTree(__dict_Show_518)(__dict_Show_519)(_538.value0) + (") (" + (Prelude.show(__dict_Show_518)(_538.value1) + (") (" + (Prelude.show(__dict_Show_519)(_538.value2) + (") (" + (showTree(__dict_Show_518)(__dict_Show_519)(_538.value3) + (") (" + (Prelude.show(__dict_Show_518)(_538.value4) + (") (" + (Prelude.show(__dict_Show_519)(_538.value5) + (") (" + (showTree(__dict_Show_518)(__dict_Show_519)(_538.value6) + ")")))))))))))));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var showMap = function (__dict_Show_520) {
        return function (__dict_Show_521) {
            return new Prelude.Show(function (m) {
                return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_520)(__dict_Show_521)))(toList(m));
            });
        };
    };
    var lookup = function (__copy___dict_Ord_522) {
        return function (__copy__540) {
            return function (__copy__541) {
                var __dict_Ord_522 = __copy___dict_Ord_522;
                var _540 = __copy__540;
                var _541 = __copy__541;
                tco: while (true) {
                    if (_541 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_541 instanceof Two && Prelude["=="](__dict_Ord_522["__superclass_Prelude.Eq_0"]())(_540)(_541.value1)) {
                        return new Data_Maybe.Just(_541.value2);
                    };
                    if (_541 instanceof Two && Prelude["<"](__dict_Ord_522)(_540)(_541.value1)) {
                        var __tco___dict_Ord_522 = __dict_Ord_522;
                        var __tco__540 = _540;
                        var __tco__541 = _541.value0;
                        __dict_Ord_522 = __tco___dict_Ord_522;
                        _540 = __tco__540;
                        _541 = __tco__541;
                        continue tco;
                    };
                    if (_541 instanceof Two) {
                        var __tco___dict_Ord_522 = __dict_Ord_522;
                        var __tco__540 = _540;
                        var __tco__541 = _541.value3;
                        __dict_Ord_522 = __tco___dict_Ord_522;
                        _540 = __tco__540;
                        _541 = __tco__541;
                        continue tco;
                    };
                    if (_541 instanceof Three && Prelude["=="](__dict_Ord_522["__superclass_Prelude.Eq_0"]())(_540)(_541.value1)) {
                        return new Data_Maybe.Just(_541.value2);
                    };
                    if (_541 instanceof Three && Prelude["=="](__dict_Ord_522["__superclass_Prelude.Eq_0"]())(_540)(_541.value4)) {
                        return new Data_Maybe.Just(_541.value5);
                    };
                    if (_541 instanceof Three && Prelude["<"](__dict_Ord_522)(_540)(_541.value1)) {
                        var __tco___dict_Ord_522 = __dict_Ord_522;
                        var __tco__540 = _540;
                        var __tco__541 = _541.value0;
                        __dict_Ord_522 = __tco___dict_Ord_522;
                        _540 = __tco__540;
                        _541 = __tco__541;
                        continue tco;
                    };
                    if (_541 instanceof Three && (Prelude["<"](__dict_Ord_522)(_541.value1)(_540) && Prelude["<="](__dict_Ord_522)(_540)(_541.value4))) {
                        var __tco___dict_Ord_522 = __dict_Ord_522;
                        var __tco__540 = _540;
                        var __tco__541 = _541.value3;
                        __dict_Ord_522 = __tco___dict_Ord_522;
                        _540 = __tco__540;
                        _541 = __tco__541;
                        continue tco;
                    };
                    if (_541 instanceof Three) {
                        var __tco___dict_Ord_522 = __dict_Ord_522;
                        var __tco__540 = _540;
                        var __tco__541 = _541.value6;
                        __dict_Ord_522 = __tco___dict_Ord_522;
                        _540 = __tco__540;
                        _541 = __tco__541;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var member = function (__dict_Ord_523) {
        return function (k) {
            return function (m) {
                return Data_Maybe.isJust(lookup(__dict_Ord_523)(k)(m));
            };
        };
    };
    var keys = function (_545) {
        if (_545 instanceof Leaf) {
            return [  ];
        };
        if (_545 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_545.value0))(Prelude["++"](Data_Array.semigroupArray)([ _545.value1 ])(keys(_545.value3)));
        };
        if (_545 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_545.value0))(Prelude["++"](Data_Array.semigroupArray)([ _545.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_545.value3))(Prelude["++"](Data_Array.semigroupArray)([ _545.value4 ])(keys(_545.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var isEmpty = function (_539) {
        if (_539 instanceof Leaf) {
            return true;
        };
        return false;
    };
    var functorMap = new Prelude.Functor(function (_547) {
        return function (_548) {
            if (_548 instanceof Leaf) {
                return Leaf.value;
            };
            if (_548 instanceof Two) {
                return new Two(Prelude["<$>"](functorMap)(_547)(_548.value0), _548.value1, _547(_548.value2), Prelude["<$>"](functorMap)(_547)(_548.value3));
            };
            if (_548 instanceof Three) {
                return new Three(Prelude["<$>"](functorMap)(_547)(_548.value0), _548.value1, _547(_548.value2), Prelude["<$>"](functorMap)(_547)(_548.value3), _548.value4, _547(_548.value5), Prelude["<$>"](functorMap)(_547)(_548.value6));
            };
            throw new Error("Failed pattern match");
        };
    });
    var map = Prelude["<$>"](functorMap);
    var fromZipper = function (__copy___dict_Ord_524) {
        return function (__copy__542) {
            return function (__copy__543) {
                var __dict_Ord_524 = __copy___dict_Ord_524;
                var _542 = __copy__542;
                var _543 = __copy__543;
                tco: while (true) {
                    if (_542.length === 0) {
                        return _543;
                    };
                    if (_542.length >= 1) {
                        var _1842 = _542.slice(1);
                        if (_542[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_524 = __dict_Ord_524;
                            var __tco__543 = new Two(_543, (_542[0]).value0, (_542[0]).value1, (_542[0]).value2);
                            __dict_Ord_524 = __tco___dict_Ord_524;
                            _542 = _1842;
                            _543 = __tco__543;
                            continue tco;
                        };
                    };
                    if (_542.length >= 1) {
                        var _1847 = _542.slice(1);
                        if (_542[0] instanceof TwoRight) {
                            var __tco___dict_Ord_524 = __dict_Ord_524;
                            var __tco__543 = new Two((_542[0]).value0, (_542[0]).value1, (_542[0]).value2, _543);
                            __dict_Ord_524 = __tco___dict_Ord_524;
                            _542 = _1847;
                            _543 = __tco__543;
                            continue tco;
                        };
                    };
                    if (_542.length >= 1) {
                        var _1855 = _542.slice(1);
                        if (_542[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_524 = __dict_Ord_524;
                            var __tco__543 = new Three(_543, (_542[0]).value0, (_542[0]).value1, (_542[0]).value2, (_542[0]).value3, (_542[0]).value4, (_542[0]).value5);
                            __dict_Ord_524 = __tco___dict_Ord_524;
                            _542 = _1855;
                            _543 = __tco__543;
                            continue tco;
                        };
                    };
                    if (_542.length >= 1) {
                        var _1863 = _542.slice(1);
                        if (_542[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_524 = __dict_Ord_524;
                            var __tco__543 = new Three((_542[0]).value0, (_542[0]).value1, (_542[0]).value2, _543, (_542[0]).value3, (_542[0]).value4, (_542[0]).value5);
                            __dict_Ord_524 = __tco___dict_Ord_524;
                            _542 = _1863;
                            _543 = __tco__543;
                            continue tco;
                        };
                    };
                    if (_542.length >= 1) {
                        var _1871 = _542.slice(1);
                        if (_542[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_524 = __dict_Ord_524;
                            var __tco__543 = new Three((_542[0]).value0, (_542[0]).value1, (_542[0]).value2, (_542[0]).value3, (_542[0]).value4, (_542[0]).value5, _543);
                            __dict_Ord_524 = __tco___dict_Ord_524;
                            _542 = _1871;
                            _543 = __tco__543;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_525) {
        var up = function (__copy___dict_Ord_526) {
            return function (__copy__554) {
                return function (__copy__555) {
                    var __dict_Ord_526 = __copy___dict_Ord_526;
                    var _554 = __copy__554;
                    var _555 = __copy__555;
                    tco: while (true) {
                        if (_554.length === 0) {
                            return new Two(_555.value0, _555.value1, _555.value2, _555.value3);
                        };
                        if (_554.length >= 1) {
                            var _1886 = _554.slice(1);
                            if (_554[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_526)(_1886)(new Three(_555.value0, _555.value1, _555.value2, _555.value3, (_554[0]).value0, (_554[0]).value1, (_554[0]).value2));
                            };
                        };
                        if (_554.length >= 1) {
                            var _1895 = _554.slice(1);
                            if (_554[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_526)(_1895)(new Three((_554[0]).value0, (_554[0]).value1, (_554[0]).value2, _555.value0, _555.value1, _555.value2, _555.value3));
                            };
                        };
                        if (_554.length >= 1) {
                            var _1907 = _554.slice(1);
                            if (_554[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_526 = __dict_Ord_526;
                                var __tco__555 = new KickUp(new Two(_555.value0, _555.value1, _555.value2, _555.value3), (_554[0]).value0, (_554[0]).value1, new Two((_554[0]).value2, (_554[0]).value3, (_554[0]).value4, (_554[0]).value5));
                                __dict_Ord_526 = __tco___dict_Ord_526;
                                _554 = _1907;
                                _555 = __tco__555;
                                continue tco;
                            };
                        };
                        if (_554.length >= 1) {
                            var _1919 = _554.slice(1);
                            if (_554[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_526 = __dict_Ord_526;
                                var __tco__555 = new KickUp(new Two((_554[0]).value0, (_554[0]).value1, (_554[0]).value2, _555.value0), _555.value1, _555.value2, new Two(_555.value3, (_554[0]).value3, (_554[0]).value4, (_554[0]).value5));
                                __dict_Ord_526 = __tco___dict_Ord_526;
                                _554 = _1919;
                                _555 = __tco__555;
                                continue tco;
                            };
                        };
                        if (_554.length >= 1) {
                            var _1931 = _554.slice(1);
                            if (_554[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_526 = __dict_Ord_526;
                                var __tco__555 = new KickUp(new Two((_554[0]).value0, (_554[0]).value1, (_554[0]).value2, (_554[0]).value3), (_554[0]).value4, (_554[0]).value5, new Two(_555.value0, _555.value1, _555.value2, _555.value3));
                                __dict_Ord_526 = __tco___dict_Ord_526;
                                _554 = _1931;
                                _555 = __tco__555;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_527) {
            return function (__copy__550) {
                return function (__copy__551) {
                    return function (__copy__552) {
                        return function (__copy__553) {
                            var __dict_Ord_527 = __copy___dict_Ord_527;
                            var _550 = __copy__550;
                            var _551 = __copy__551;
                            var _552 = __copy__552;
                            var _553 = __copy__553;
                            tco: while (true) {
                                if (_553 instanceof Leaf) {
                                    return up(__dict_Ord_527)(_550)(new KickUp(Leaf.value, _551, _552, Leaf.value));
                                };
                                if (_553 instanceof Two && Prelude["=="](__dict_Ord_527["__superclass_Prelude.Eq_0"]())(_551)(_553.value1)) {
                                    return fromZipper(__dict_Ord_527)(_550)(new Two(_553.value0, _551, _552, _553.value3));
                                };
                                if (_553 instanceof Two && Prelude["<"](__dict_Ord_527)(_551)(_553.value1)) {
                                    var __tco___dict_Ord_527 = __dict_Ord_527;
                                    var __tco__550 = Prelude[":"](new TwoLeft(_553.value1, _553.value2, _553.value3))(_550);
                                    var __tco__551 = _551;
                                    var __tco__552 = _552;
                                    var __tco__553 = _553.value0;
                                    __dict_Ord_527 = __tco___dict_Ord_527;
                                    _550 = __tco__550;
                                    _551 = __tco__551;
                                    _552 = __tco__552;
                                    _553 = __tco__553;
                                    continue tco;
                                };
                                if (_553 instanceof Two) {
                                    var __tco___dict_Ord_527 = __dict_Ord_527;
                                    var __tco__550 = Prelude[":"](new TwoRight(_553.value0, _553.value1, _553.value2))(_550);
                                    var __tco__551 = _551;
                                    var __tco__552 = _552;
                                    var __tco__553 = _553.value3;
                                    __dict_Ord_527 = __tco___dict_Ord_527;
                                    _550 = __tco__550;
                                    _551 = __tco__551;
                                    _552 = __tco__552;
                                    _553 = __tco__553;
                                    continue tco;
                                };
                                if (_553 instanceof Three && Prelude["=="](__dict_Ord_527["__superclass_Prelude.Eq_0"]())(_551)(_553.value1)) {
                                    return fromZipper(__dict_Ord_527)(_550)(new Three(_553.value0, _551, _552, _553.value3, _553.value4, _553.value5, _553.value6));
                                };
                                if (_553 instanceof Three && Prelude["=="](__dict_Ord_527["__superclass_Prelude.Eq_0"]())(_551)(_553.value4)) {
                                    return fromZipper(__dict_Ord_527)(_550)(new Three(_553.value0, _553.value1, _553.value2, _553.value3, _551, _552, _553.value6));
                                };
                                if (_553 instanceof Three && Prelude["<"](__dict_Ord_527)(_551)(_553.value1)) {
                                    var __tco___dict_Ord_527 = __dict_Ord_527;
                                    var __tco__550 = Prelude[":"](new ThreeLeft(_553.value1, _553.value2, _553.value3, _553.value4, _553.value5, _553.value6))(_550);
                                    var __tco__551 = _551;
                                    var __tco__552 = _552;
                                    var __tco__553 = _553.value0;
                                    __dict_Ord_527 = __tco___dict_Ord_527;
                                    _550 = __tco__550;
                                    _551 = __tco__551;
                                    _552 = __tco__552;
                                    _553 = __tco__553;
                                    continue tco;
                                };
                                if (_553 instanceof Three && (Prelude["<"](__dict_Ord_527)(_553.value1)(_551) && Prelude["<="](__dict_Ord_527)(_551)(_553.value4))) {
                                    var __tco___dict_Ord_527 = __dict_Ord_527;
                                    var __tco__550 = Prelude[":"](new ThreeMiddle(_553.value0, _553.value1, _553.value2, _553.value4, _553.value5, _553.value6))(_550);
                                    var __tco__551 = _551;
                                    var __tco__552 = _552;
                                    var __tco__553 = _553.value3;
                                    __dict_Ord_527 = __tco___dict_Ord_527;
                                    _550 = __tco__550;
                                    _551 = __tco__551;
                                    _552 = __tco__552;
                                    _553 = __tco__553;
                                    continue tco;
                                };
                                if (_553 instanceof Three) {
                                    var __tco___dict_Ord_527 = __dict_Ord_527;
                                    var __tco__550 = Prelude[":"](new ThreeRight(_553.value0, _553.value1, _553.value2, _553.value3, _553.value4, _553.value5))(_550);
                                    var __tco__551 = _551;
                                    var __tco__552 = _552;
                                    var __tco__553 = _553.value6;
                                    __dict_Ord_527 = __tco___dict_Ord_527;
                                    _550 = __tco__550;
                                    _551 = __tco__551;
                                    _552 = __tco__552;
                                    _553 = __tco__553;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_525)([  ]);
    };
    var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_528) {
        return function (f) {
            return function (m) {
                return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_528)(f)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var eqMap = function (__dict_Eq_529) {
        return function (__dict_Eq_530) {
            return new Prelude.Eq(function (m1) {
                return function (m2) {
                    return !Prelude["=="](eqMap(__dict_Eq_529)(__dict_Eq_530))(m1)(m2);
                };
            }, function (m1) {
                return function (m2) {
                    return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_529)(__dict_Eq_530)))(toList(m1))(toList(m2));
                };
            });
        };
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_531) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_537) {
                return insert(__dict_Ord_531)(_537.value0)(_537.value1)(m);
            };
        })(empty);
    };
    var $$delete = function (__dict_Ord_533) {
        var up = function (__copy___dict_Ord_534) {
            return function (__copy__559) {
                return function (__copy__560) {
                    var __dict_Ord_534 = __copy___dict_Ord_534;
                    var _559 = __copy__559;
                    var _560 = __copy__560;
                    tco: while (true) {
                        if (_559.length === 0) {
                            return _560;
                        };
                        if (_559.length >= 1) {
                            var _1992 = _559.slice(1);
                            if (_559[0] instanceof TwoLeft && ((_559[0]).value2 instanceof Leaf && _560 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_534)(_1992)(new Two(Leaf.value, (_559[0]).value0, (_559[0]).value1, Leaf.value));
                            };
                        };
                        if (_559.length >= 1) {
                            var _1997 = _559.slice(1);
                            if (_559[0] instanceof TwoRight && ((_559[0]).value0 instanceof Leaf && _560 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_534)(_1997)(new Two(Leaf.value, (_559[0]).value1, (_559[0]).value2, Leaf.value));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2006 = _559.slice(1);
                            if (_559[0] instanceof TwoLeft && (_559[0]).value2 instanceof Two) {
                                var __tco___dict_Ord_534 = __dict_Ord_534;
                                var __tco__560 = new Three(_560, (_559[0]).value0, (_559[0]).value1, (_559[0]).value2.value0, (_559[0]).value2.value1, (_559[0]).value2.value2, (_559[0]).value2.value3);
                                __dict_Ord_534 = __tco___dict_Ord_534;
                                _559 = _2006;
                                _560 = __tco__560;
                                continue tco;
                            };
                        };
                        if (_559.length >= 1) {
                            var _2015 = _559.slice(1);
                            if (_559[0] instanceof TwoRight && (_559[0]).value0 instanceof Two) {
                                var __tco___dict_Ord_534 = __dict_Ord_534;
                                var __tco__560 = new Three((_559[0]).value0.value0, (_559[0]).value0.value1, (_559[0]).value0.value2, (_559[0]).value0.value3, (_559[0]).value1, (_559[0]).value2, _560);
                                __dict_Ord_534 = __tco___dict_Ord_534;
                                _559 = _2015;
                                _560 = __tco__560;
                                continue tco;
                            };
                        };
                        if (_559.length >= 1) {
                            var _2027 = _559.slice(1);
                            if (_559[0] instanceof TwoLeft && (_559[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_534)(_2027)(new Two(new Two(_560, (_559[0]).value0, (_559[0]).value1, (_559[0]).value2.value0), (_559[0]).value2.value1, (_559[0]).value2.value2, new Two((_559[0]).value2.value3, (_559[0]).value2.value4, (_559[0]).value2.value5, (_559[0]).value2.value6)));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2039 = _559.slice(1);
                            if (_559[0] instanceof TwoRight && (_559[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_534)(_2039)(new Two(new Two((_559[0]).value0.value0, (_559[0]).value0.value1, (_559[0]).value0.value2, (_559[0]).value0.value3), (_559[0]).value0.value4, (_559[0]).value0.value5, new Two((_559[0]).value0.value6, (_559[0]).value1, (_559[0]).value2, _560)));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2047 = _559.slice(1);
                            if (_559[0] instanceof ThreeLeft && ((_559[0]).value2 instanceof Leaf && ((_559[0]).value5 instanceof Leaf && _560 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_534)(_2047)(new Three(Leaf.value, (_559[0]).value0, (_559[0]).value1, Leaf.value, (_559[0]).value3, (_559[0]).value4, Leaf.value));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2055 = _559.slice(1);
                            if (_559[0] instanceof ThreeMiddle && ((_559[0]).value0 instanceof Leaf && ((_559[0]).value5 instanceof Leaf && _560 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_534)(_2055)(new Three(Leaf.value, (_559[0]).value1, (_559[0]).value2, Leaf.value, (_559[0]).value3, (_559[0]).value4, Leaf.value));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2063 = _559.slice(1);
                            if (_559[0] instanceof ThreeRight && ((_559[0]).value0 instanceof Leaf && ((_559[0]).value3 instanceof Leaf && _560 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_534)(_2063)(new Three(Leaf.value, (_559[0]).value1, (_559[0]).value2, Leaf.value, (_559[0]).value4, (_559[0]).value5, Leaf.value));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2075 = _559.slice(1);
                            if (_559[0] instanceof ThreeLeft && (_559[0]).value2 instanceof Two) {
                                return fromZipper(__dict_Ord_534)(_2075)(new Two(new Three(_560, (_559[0]).value0, (_559[0]).value1, (_559[0]).value2.value0, (_559[0]).value2.value1, (_559[0]).value2.value2, (_559[0]).value2.value3), (_559[0]).value3, (_559[0]).value4, (_559[0]).value5));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2087 = _559.slice(1);
                            if (_559[0] instanceof ThreeMiddle && (_559[0]).value0 instanceof Two) {
                                return fromZipper(__dict_Ord_534)(_2087)(new Two(new Three((_559[0]).value0.value0, (_559[0]).value0.value1, (_559[0]).value0.value2, (_559[0]).value0.value3, (_559[0]).value1, (_559[0]).value2, _560), (_559[0]).value3, (_559[0]).value4, (_559[0]).value5));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2099 = _559.slice(1);
                            if (_559[0] instanceof ThreeMiddle && (_559[0]).value5 instanceof Two) {
                                return fromZipper(__dict_Ord_534)(_2099)(new Two((_559[0]).value0, (_559[0]).value1, (_559[0]).value2, new Three(_560, (_559[0]).value3, (_559[0]).value4, (_559[0]).value5.value0, (_559[0]).value5.value1, (_559[0]).value5.value2, (_559[0]).value5.value3)));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2111 = _559.slice(1);
                            if (_559[0] instanceof ThreeRight && (_559[0]).value3 instanceof Two) {
                                return fromZipper(__dict_Ord_534)(_2111)(new Two((_559[0]).value0, (_559[0]).value1, (_559[0]).value2, new Three((_559[0]).value3.value0, (_559[0]).value3.value1, (_559[0]).value3.value2, (_559[0]).value3.value3, (_559[0]).value4, (_559[0]).value5, _560)));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2126 = _559.slice(1);
                            if (_559[0] instanceof ThreeLeft && (_559[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_534)(_2126)(new Three(new Two(_560, (_559[0]).value0, (_559[0]).value1, (_559[0]).value2.value0), (_559[0]).value2.value1, (_559[0]).value2.value2, new Two((_559[0]).value2.value3, (_559[0]).value2.value4, (_559[0]).value2.value5, (_559[0]).value2.value6), (_559[0]).value3, (_559[0]).value4, (_559[0]).value5));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2141 = _559.slice(1);
                            if (_559[0] instanceof ThreeMiddle && (_559[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_534)(_2141)(new Three(new Two((_559[0]).value0.value0, (_559[0]).value0.value1, (_559[0]).value0.value2, (_559[0]).value0.value3), (_559[0]).value0.value4, (_559[0]).value0.value5, new Two((_559[0]).value0.value6, (_559[0]).value1, (_559[0]).value2, _560), (_559[0]).value3, (_559[0]).value4, (_559[0]).value5));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2156 = _559.slice(1);
                            if (_559[0] instanceof ThreeMiddle && (_559[0]).value5 instanceof Three) {
                                return fromZipper(__dict_Ord_534)(_2156)(new Three((_559[0]).value0, (_559[0]).value1, (_559[0]).value2, new Two(_560, (_559[0]).value3, (_559[0]).value4, (_559[0]).value5.value0), (_559[0]).value5.value1, (_559[0]).value5.value2, new Two((_559[0]).value5.value3, (_559[0]).value5.value4, (_559[0]).value5.value5, (_559[0]).value5.value6)));
                            };
                        };
                        if (_559.length >= 1) {
                            var _2171 = _559.slice(1);
                            if (_559[0] instanceof ThreeRight && (_559[0]).value3 instanceof Three) {
                                return fromZipper(__dict_Ord_534)(_2171)(new Three((_559[0]).value0, (_559[0]).value1, (_559[0]).value2, new Two((_559[0]).value3.value0, (_559[0]).value3.value1, (_559[0]).value3.value2, (_559[0]).value3.value3), (_559[0]).value3.value4, (_559[0]).value3.value5, new Two((_559[0]).value3.value6, (_559[0]).value4, (_559[0]).value5, _560)));
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var removeMaxNode = function (__copy___dict_Ord_535) {
            return function (__copy__562) {
                return function (__copy__563) {
                    var __dict_Ord_535 = __copy___dict_Ord_535;
                    var _562 = __copy__562;
                    var _563 = __copy__563;
                    tco: while (true) {
                        if (_563 instanceof Two && (_563.value0 instanceof Leaf && _563.value3 instanceof Leaf)) {
                            return up(__dict_Ord_535)(_562)(Leaf.value);
                        };
                        if (_563 instanceof Two) {
                            var __tco___dict_Ord_535 = __dict_Ord_535;
                            var __tco__562 = Prelude[":"](new TwoRight(_563.value0, _563.value1, _563.value2))(_562);
                            var __tco__563 = _563.value3;
                            __dict_Ord_535 = __tco___dict_Ord_535;
                            _562 = __tco__562;
                            _563 = __tco__563;
                            continue tco;
                        };
                        if (_563 instanceof Three && (_563.value0 instanceof Leaf && (_563.value3 instanceof Leaf && _563.value6 instanceof Leaf))) {
                            return up(__dict_Ord_535)(Prelude[":"](new TwoRight(Leaf.value, _563.value1, _563.value2))(_562))(Leaf.value);
                        };
                        if (_563 instanceof Three) {
                            var __tco___dict_Ord_535 = __dict_Ord_535;
                            var __tco__562 = Prelude[":"](new ThreeRight(_563.value0, _563.value1, _563.value2, _563.value3, _563.value4, _563.value5))(_562);
                            var __tco__563 = _563.value6;
                            __dict_Ord_535 = __tco___dict_Ord_535;
                            _562 = __tco__562;
                            _563 = __tco__563;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var maxNode = function (__copy___dict_Ord_536) {
            return function (__copy__561) {
                var __dict_Ord_536 = __copy___dict_Ord_536;
                var _561 = __copy__561;
                tco: while (true) {
                    if (_561 instanceof Two && _561.value3 instanceof Leaf) {
                        return {
                            key: _561.value1, 
                            value: _561.value2
                        };
                    };
                    if (_561 instanceof Two) {
                        var __tco___dict_Ord_536 = __dict_Ord_536;
                        var __tco__561 = _561.value3;
                        __dict_Ord_536 = __tco___dict_Ord_536;
                        _561 = __tco__561;
                        continue tco;
                    };
                    if (_561 instanceof Three && _561.value6 instanceof Leaf) {
                        return {
                            key: _561.value4, 
                            value: _561.value5
                        };
                    };
                    if (_561 instanceof Three) {
                        var __tco___dict_Ord_536 = __dict_Ord_536;
                        var __tco__561 = _561.value6;
                        __dict_Ord_536 = __tco___dict_Ord_536;
                        _561 = __tco__561;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        var down = function (__copy___dict_Ord_537) {
            return function (__copy__556) {
                return function (__copy__557) {
                    return function (__copy__558) {
                        var __dict_Ord_537 = __copy___dict_Ord_537;
                        var _556 = __copy__556;
                        var _557 = __copy__557;
                        var _558 = __copy__558;
                        tco: while (true) {
                            if (_558 instanceof Leaf) {
                                return fromZipper(__dict_Ord_537)(_556)(Leaf.value);
                            };
                            if (_558 instanceof Two && (_558.value0 instanceof Leaf && (_558.value3 instanceof Leaf && Prelude["=="](__dict_Ord_537["__superclass_Prelude.Eq_0"]())(_557)(_558.value1)))) {
                                return up(__dict_Ord_537)(_556)(Leaf.value);
                            };
                            if (_558 instanceof Two) {
                                if (Prelude["=="](__dict_Ord_537["__superclass_Prelude.Eq_0"]())(_557)(_558.value1)) {
                                    var max = maxNode(__dict_Ord_537)(_558.value0);
                                    return removeMaxNode(__dict_Ord_537)(Prelude[":"](new TwoLeft(max.key, max.value, _558.value3))(_556))(_558.value0);
                                };
                                if (Prelude["<"](__dict_Ord_537)(_557)(_558.value1)) {
                                    var __tco___dict_Ord_537 = __dict_Ord_537;
                                    var __tco__556 = Prelude[":"](new TwoLeft(_558.value1, _558.value2, _558.value3))(_556);
                                    var __tco__557 = _557;
                                    var __tco__558 = _558.value0;
                                    __dict_Ord_537 = __tco___dict_Ord_537;
                                    _556 = __tco__556;
                                    _557 = __tco__557;
                                    _558 = __tco__558;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_537 = __dict_Ord_537;
                                    var __tco__556 = Prelude[":"](new TwoRight(_558.value0, _558.value1, _558.value2))(_556);
                                    var __tco__557 = _557;
                                    var __tco__558 = _558.value3;
                                    __dict_Ord_537 = __tco___dict_Ord_537;
                                    _556 = __tco__556;
                                    _557 = __tco__557;
                                    _558 = __tco__558;
                                    continue tco;
                                };
                            };
                            if (_558 instanceof Three && (_558.value0 instanceof Leaf && (_558.value3 instanceof Leaf && _558.value6 instanceof Leaf))) {
                                if (Prelude["=="](__dict_Ord_537["__superclass_Prelude.Eq_0"]())(_557)(_558.value1)) {
                                    return fromZipper(__dict_Ord_537)(_556)(new Two(Leaf.value, _558.value4, _558.value5, Leaf.value));
                                };
                                if (Prelude["=="](__dict_Ord_537["__superclass_Prelude.Eq_0"]())(_557)(_558.value4)) {
                                    return fromZipper(__dict_Ord_537)(_556)(new Two(Leaf.value, _558.value1, _558.value2, Leaf.value));
                                };
                            };
                            if (_558 instanceof Three) {
                                if (Prelude["=="](__dict_Ord_537["__superclass_Prelude.Eq_0"]())(_557)(_558.value1)) {
                                    var max = maxNode(__dict_Ord_537)(_558.value0);
                                    return removeMaxNode(__dict_Ord_537)(Prelude[":"](new ThreeLeft(max.key, max.value, _558.value3, _558.value4, _558.value5, _558.value6))(_556))(_558.value0);
                                };
                                if (Prelude["=="](__dict_Ord_537["__superclass_Prelude.Eq_0"]())(_557)(_558.value4)) {
                                    var max = maxNode(__dict_Ord_537)(_558.value3);
                                    return removeMaxNode(__dict_Ord_537)(Prelude[":"](new ThreeMiddle(_558.value0, _558.value1, _558.value2, max.key, max.value, _558.value6))(_556))(_558.value3);
                                };
                                if (Prelude["<"](__dict_Ord_537)(_557)(_558.value1)) {
                                    var __tco___dict_Ord_537 = __dict_Ord_537;
                                    var __tco__556 = Prelude[":"](new ThreeLeft(_558.value1, _558.value2, _558.value3, _558.value4, _558.value5, _558.value6))(_556);
                                    var __tco__557 = _557;
                                    var __tco__558 = _558.value0;
                                    __dict_Ord_537 = __tco___dict_Ord_537;
                                    _556 = __tco__556;
                                    _557 = __tco__557;
                                    _558 = __tco__558;
                                    continue tco;
                                };
                                if (Prelude["<"](__dict_Ord_537)(_558.value1)(_557) && Prelude["<"](__dict_Ord_537)(_557)(_558.value4)) {
                                    var __tco___dict_Ord_537 = __dict_Ord_537;
                                    var __tco__556 = Prelude[":"](new ThreeMiddle(_558.value0, _558.value1, _558.value2, _558.value4, _558.value5, _558.value6))(_556);
                                    var __tco__557 = _557;
                                    var __tco__558 = _558.value3;
                                    __dict_Ord_537 = __tco___dict_Ord_537;
                                    _556 = __tco__556;
                                    _557 = __tco__557;
                                    _558 = __tco__558;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_537 = __dict_Ord_537;
                                    var __tco__556 = Prelude[":"](new ThreeRight(_558.value0, _558.value1, _558.value2, _558.value3, _558.value4, _558.value5))(_556);
                                    var __tco__557 = _557;
                                    var __tco__558 = _558.value6;
                                    __dict_Ord_537 = __tco___dict_Ord_537;
                                    _556 = __tco__556;
                                    _557 = __tco__557;
                                    _558 = __tco__558;
                                    continue tco;
                                };
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_533)([  ]);
    };
    var checkValid = function (tree) {
        var allHeights = function (_549) {
            if (_549 instanceof Leaf) {
                return [ 0 ];
            };
            if (_549 instanceof Two) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_549.value0))(allHeights(_549.value3)));
            };
            if (_549 instanceof Three) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_549.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_549.value3))(allHeights(_549.value6))));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
    };
    var alter = function (__dict_Ord_538) {
        return function (f) {
            return function (k) {
                return function (m) {
                    var _2256 = f(lookup(__dict_Ord_538)(k)(m));
                    if (_2256 instanceof Data_Maybe.Nothing) {
                        return $$delete(__dict_Ord_538)(k)(m);
                    };
                    if (_2256 instanceof Data_Maybe.Just) {
                        return insert(__dict_Ord_538)(k)(_2256.value0)(m);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    
    /**
     *  Computes the union of two maps, except that when a key exists in both maps, its value in the result
     *  is computed by combining them with the supplied function.
     */
    var unionWith = function (__dict_Ord_539) {
        return function (f) {
            return function (m1) {
                return function (m2) {
                    var go = function (_564) {
                        return function (_565) {
                            return alter(__dict_Ord_539)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_565.value1)(f(_565.value1))))(_565.value0)(_564);
                        };
                    };
                    return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
                };
            };
        };
    };
    var union = function (__dict_Ord_540) {
        return unionWith(__dict_Ord_540)(Prelude["const"]);
    };
    var semigroupMap = function (__dict_Ord_541) {
        return new Prelude.Semigroup(union(__dict_Ord_541));
    };
    var monoidMap = function (__dict_Ord_532) {
        return new Data_Monoid.Monoid(function () {
            return semigroupMap(__dict_Ord_532);
        }, empty);
    };
    var traversableMap = function (__dict_Ord_542) {
        return new Data_Traversable.Traversable(function () {
            return foldableMap;
        }, function () {
            return functorMap;
        }, function (__dict_Applicative_544) {
            return Data_Traversable.traverse(traversableMap(__dict_Ord_542))(__dict_Applicative_544)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_543) {
            return function (f) {
                return function (ms) {
                    return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                        return function (acc) {
                            return Prelude["<*>"](__dict_Applicative_543["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_543["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_542))(x))(acc);
                        };
                    })(Prelude.pure(__dict_Applicative_543)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_543["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_543)(f))(toList(ms))));
                };
            };
        });
    };
    var unions = function (__dict_Ord_545) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_545))(empty);
    };
    var update = function (__dict_Ord_546) {
        return function (f) {
            return function (k) {
                return function (m) {
                    return alter(__dict_Ord_546)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
                };
            };
        };
    };
    return {
        size: size, 
        map: map, 
        unions: unions, 
        unionWith: unionWith, 
        union: union, 
        values: values, 
        keys: keys, 
        update: update, 
        alter: alter, 
        member: member, 
        "delete": $$delete, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        insert: insert, 
        checkValid: checkValid, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty, 
        showTree: showTree, 
        eqMap: eqMap, 
        showMap: showMap, 
        semigroupMap: semigroupMap, 
        monoidMap: monoidMap, 
        functorMap: functorMap, 
        foldableMap: foldableMap, 
        traversableMap: traversableMap
    };
})();
var PS = PS || {};
PS.Data_Set = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Set = (function () {
        function Set(value0) {
            this.value0 = value0;
        };
        Set.create = function (value0) {
            return new Set(value0);
        };
        return Set;
    })();
    var union = function (__dict_Ord_547) {
        return function (_575) {
            return function (_576) {
                return new Set(Data_Map.union(__dict_Ord_547)(_575.value0)(_576.value0));
            };
        };
    };
    var toList = function (_574) {
        return Data_Array.map(Data_Tuple.fst)(Data_Map.toList(_574.value0));
    };
    var singleton = function (a) {
        return new Set(Data_Map.singleton(a)(Prelude.unit));
    };
    var showSet = function (__dict_Show_548) {
        return new Prelude.Show(function (s) {
            return "fromList " + Prelude.show(Prelude.showArray(__dict_Show_548))(toList(s));
        });
    };
    var member = function (__dict_Ord_549) {
        return function (_568) {
            return function (_569) {
                return Data_Map.member(__dict_Ord_549)(_568)(_569.value0);
            };
        };
    };
    var isEmpty = function (_566) {
        return Data_Map.isEmpty(_566.value0);
    };
    var insert = function (__dict_Ord_550) {
        return function (_570) {
            return function (_571) {
                return new Set(Data_Map.insert(__dict_Ord_550)(_570)(Prelude.unit)(_571.value0));
            };
        };
    };
    var eqSet = function (__dict_Eq_551) {
        return new Prelude.Eq(function (_579) {
            return function (_580) {
                return Prelude["/="](Data_Map.eqMap(__dict_Eq_551)(Prelude.eqUnit))(_579.value0)(_580.value0);
            };
        }, function (_577) {
            return function (_578) {
                return Prelude["=="](Data_Map.eqMap(__dict_Eq_551)(Prelude.eqUnit))(_577.value0)(_578.value0);
            };
        });
    };
    var empty = new Set(Data_Map.empty);
    var fromList = function (__dict_Ord_552) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (a) {
                return insert(__dict_Ord_552)(a)(m);
            };
        })(empty);
    };
    var unions = function (__dict_Ord_553) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_553))(empty);
    };
    var $$delete = function (__dict_Ord_554) {
        return function (_572) {
            return function (_573) {
                return new Set(Data_Map["delete"](__dict_Ord_554)(_572)(_573.value0));
            };
        };
    };
    var difference = function (__dict_Ord_555) {
        return function (s1) {
            return function (s2) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip($$delete(__dict_Ord_555)))(s1)(toList(s2));
            };
        };
    };
    var checkValid = function (_567) {
        return Data_Map.checkValid(_567.value0);
    };
    return {
        difference: difference, 
        unions: unions, 
        union: union, 
        fromList: fromList, 
        toList: toList, 
        "delete": $$delete, 
        member: member, 
        insert: insert, 
        checkValid: checkValid, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty, 
        eqSet: eqSet, 
        showSet: showSet
    };
})();
var PS = PS || {};
PS.Data_StrMap = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    var Data_Monoid_All = PS.Data_Monoid_All;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Array = PS.Data_Array;
    
  function _copy(m) {
    var r = {};
    for (var k in m) {
      r[k] = m[k];
    }
    return r;
  }
  ;
    
  function _copyEff(m) {
    return function() {
      var r = {};
      for (var k in m) {
        r[k] = m[k];
      }
      return r;
    };
  }
  ;
    
  function runST(f) {
    return f;
  }
  ;
    
  function _fmapStrMap(m0, f) {
    var m = {};
    for (var k in m0) {
      m[k] = f(m0[k]);
    }
    return m;
  }
  ;
    
  function _foldM(bind) {
    return function(f) {
      return function(mz) {
        return function(m) {
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            mz = bind(mz)(g(k));
          }
          return mz;
        };
      };
    };
  }
  ;
    
  function _foldSCStrMap(m, z, f, fromMaybe) {
    for (var k in m) {
      var maybeR = f(z)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return z;
      else z = r;
    }
    return z;
  }
  ;
    
  function all(f) {
    return function(m) {
      for (var k in m) {
        if (!f(k)(m[k])) return false;
      }
      return true;
    };
  }
  ;
    var empty = {};;
    
  function size(m) {
    var s = 0;
    for (var k in m) {
      ++s;
    }
    return s;
  }
  ;
    
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  ;
    
  function _unsafeDeleteStrMap(m, k) {
     delete m[k];
     return m;
  }
  ;
    
  function _collect(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        r.push(f(k)(m[k]));
      }
      return r;
    };
  }
  ;
    
  var keys = Object.keys || _collect(function(k) {
    return function() { return k; };
  });
  ;
    var values = _collect(function (_) {
        return function (v) {
            return v;
        };
    });
    var toList = _collect(Data_Tuple.Tuple.create);
    var thawST = _copyEff;
    var showStrMap = function (__dict_Show_556) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(Prelude.showString)(__dict_Show_556)))(toList(m));
        });
    };
    var pureST = function (f) {
        return Control_Monad_Eff.runPure(runST(f));
    };
    var singleton = function (k) {
        return function (v) {
            return pureST(function __do() {
                var _26 = Data_StrMap_ST["new"]();
                Data_StrMap_ST.poke(_26)(k)(v)();
                return _26;
            });
        };
    };
    var mutate = function (f) {
        return function (m) {
            return pureST(function __do() {
                var _25 = thawST(m)();
                f(_25)();
                return _25;
            });
        };
    };
    var member = Data_Function.runFn4(_lookup)(false)(Prelude["const"](true));
    var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var isSubmap = function (__dict_Eq_557) {
        return function (m1) {
            return function (m2) {
                var f = function (k) {
                    return function (v) {
                        return _lookup(false, Prelude["=="](__dict_Eq_557)(v), k, m2);
                    };
                };
                return all(f)(m1);
            };
        };
    };
    var isEmpty = all(function (_) {
        return function (__1) {
            return false;
        };
    });
    var insert = function (k) {
        return function (v) {
            return mutate(function (s) {
                return Data_StrMap_ST.poke(s)(k)(v);
            });
        };
    };
    var functorStrMap = new Prelude.Functor(function (f) {
        return function (m) {
            return _fmapStrMap(m, f);
        };
    });
    var map = Prelude["<$>"](functorStrMap);
    var fromList = function (l) {
        return pureST(function __do() {
            var _27 = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_581) {
                return Data_StrMap_ST.poke(_27)(_581.value0)(_581.value1);
            })();
            return _27;
        });
    };
    var freezeST = _copyEff;
    var foldMaybe = function (f) {
        return function (z) {
            return function (m) {
                return _foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
            };
        };
    };
    var foldM = function (__dict_Monad_558) {
        return function (f) {
            return function (z) {
                return _foldM(Prelude[">>="](__dict_Monad_558["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_558["__superclass_Prelude.Applicative_0"]())(z));
            };
        };
    };
    var semigroupStrMap = function (__dict_Semigroup_559) {
        return new Prelude.Semigroup(function (m1) {
            return function (m2) {
                return mutate(function (s) {
                    return foldM(Control_Monad_Eff.monadEff)(function (s_1) {
                        return function (k) {
                            return function (v2) {
                                return Data_StrMap_ST.poke(s_1)(k)(_lookup(v2, function (v1) {
                                    return Prelude["<>"](__dict_Semigroup_559)(v1)(v2);
                                }, k, m2));
                            };
                        };
                    })(s)(m1);
                })(m2);
            };
        });
    };
    
    /**
     *  left-biased
     */
    var union = function (m) {
        return mutate(function (s) {
            return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
        });
    };
    var unions = Data_Foldable.foldl(Data_Foldable.foldableArray)(union)(empty);
    var fold = _foldM(Prelude["#"]);
    var foldMap = function (__dict_Monoid_562) {
        return function (f) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Prelude["<>"](__dict_Monoid_562["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                    };
                };
            })(Data_Monoid.mempty(__dict_Monoid_562));
        };
    };
    var foldableStrMap = new Data_Foldable.Foldable(function (__dict_Monoid_563) {
        return function (f) {
            return foldMap(__dict_Monoid_563)(Prelude["const"](f));
        };
    }, function (f) {
        return fold(function (z) {
            return function (_) {
                return f(z);
            };
        });
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var traversableStrMap = new Data_Traversable.Traversable(function () {
        return foldableStrMap;
    }, function () {
        return functorStrMap;
    }, function (__dict_Applicative_561) {
        return Data_Traversable.traverse(traversableStrMap)(__dict_Applicative_561)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_560) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_560["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_560["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_560)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_560["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_560)(f))(toList(ms))));
            };
        };
    });
    var eqStrMap = function (__dict_Eq_564) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqStrMap(__dict_Eq_564))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return isSubmap(__dict_Eq_564)(m1)(m2) && isSubmap(__dict_Eq_564)(m2)(m1);
            };
        });
    };
    var $$delete = function (k) {
        return mutate(function (s) {
            return Data_StrMap_ST["delete"](s)(k);
        });
    };
    var alter = function (f) {
        return function (k) {
            return function (m) {
                var _2295 = f(lookup(k)(m));
                if (_2295 instanceof Data_Maybe.Nothing) {
                    return $$delete(k)(m);
                };
                if (_2295 instanceof Data_Maybe.Just) {
                    return insert(k)(_2295.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var update = function (f) {
        return function (k) {
            return function (m) {
                return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
    return {
        runST: runST, 
        freezeST: freezeST, 
        thawST: thawST, 
        all: all, 
        foldMaybe: foldMaybe, 
        foldM: foldM, 
        foldMap: foldMap, 
        fold: fold, 
        isSubmap: isSubmap, 
        map: map, 
        unions: unions, 
        union: union, 
        values: values, 
        keys: keys, 
        update: update, 
        alter: alter, 
        member: member, 
        "delete": $$delete, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        insert: insert, 
        singleton: singleton, 
        size: size, 
        isEmpty: isEmpty, 
        empty: empty, 
        functorStrMap: functorStrMap, 
        foldableStrMap: foldableStrMap, 
        traversableStrMap: traversableStrMap, 
        eqStrMap: eqStrMap, 
        showStrMap: showStrMap, 
        semigroupStrMap: semigroupStrMap
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_StrMap = PS.Data_StrMap;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    
  function unsafeGet(m) {
    return function() {
      return m;
    }
  }
  ;
    return {
        unsafeGet: unsafeGet
    };
})();
var PS = PS || {};
PS.Data_StrMap_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    
  function unsafeIndex(m) {
    return function(k) {
      return m[k];
    };
  }
  ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Data_Tagged = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Biapply = PS.Control_Biapply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Traversable = PS.Data_Traversable;
    var Tagged = function (x) {
        return x;
    };
    var unTagged = function (_582) {
        return _582;
    };
    var untag = unTagged;
    var untagSelf = unTagged;
    var tagSelf = Tagged;
    var semigroupoidTagged = new Prelude.Semigroupoid(function (_592) {
        return function (_593) {
            return _592;
        };
    });
    var semigroupTagged = function (__dict_Semigroup_567) {
        return new Prelude.Semigroup(function (_590) {
            return function (_591) {
                return Tagged(Prelude["<>"](__dict_Semigroup_567)(_590)(_591));
            };
        });
    };
    var retag = function (_583) {
        return _583;
    };
    var profunctorTagged = new Data_Profunctor.Profunctor(function (_626) {
        return function (_627) {
            return function (_628) {
                return Tagged(_627(_628));
            };
        };
    });
    var monoidTagged = function (__dict_Monoid_568) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTagged(__dict_Monoid_568["__superclass_Prelude.Semigroup_0"]());
        }, Tagged(Data_Monoid.mempty(__dict_Monoid_568)));
    };
    var functorTagged = new Prelude.Functor(function (_584) {
        return function (_585) {
            return Tagged(_584(_585));
        };
    });
    var foldableTagged = new Data_Foldable.Foldable(function (__dict_Monoid_569) {
        return function (_600) {
            return function (_601) {
                return _600(_601);
            };
        };
    }, function (_597) {
        return function (_598) {
            return function (_599) {
                return _597(_598)(_599);
            };
        };
    }, function (_594) {
        return function (_595) {
            return function (_596) {
                return _594(_596)(_595);
            };
        };
    });
    var traversableTagged = new Data_Traversable.Traversable(function () {
        return foldableTagged;
    }, function () {
        return functorTagged;
    }, function (__dict_Applicative_566) {
        return function (_604) {
            return Prelude["<$>"]((__dict_Applicative_566["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tagged)(_604);
        };
    }, function (__dict_Applicative_565) {
        return function (_602) {
            return function (_603) {
                return Prelude["<$>"]((__dict_Applicative_565["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tagged)(_602(_603));
            };
        };
    });
    var extendTagged = new Control_Extend.Extend(function (f) {
        return function (x) {
            return Tagged(f(x));
        };
    }, function () {
        return functorTagged;
    });
    var comonadTagged = new Control_Comonad.Comonad(function () {
        return extendTagged;
    }, unTagged);
    var choiceTagged = new Data_Profunctor_Choice.Choice(function () {
        return profunctorTagged;
    }, function (_629) {
        return Tagged(new Data_Either.Left(_629));
    }, function (_630) {
        return Tagged(new Data_Either.Right(_630));
    });
    var bifunctorTagged = new Data_Bifunctor.Bifunctor(function (_605) {
        return function (_606) {
            return function (_607) {
                return Tagged(_606(_607));
            };
        };
    });
    var bifoldableTagged = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_572) {
        return function (_619) {
            return function (_620) {
                return function (_621) {
                    return _620(_621);
                };
            };
        };
    }, function (_615) {
        return function (_616) {
            return function (_617) {
                return function (_618) {
                    return _616(_617)(_618);
                };
            };
        };
    }, function (_611) {
        return function (_612) {
            return function (_613) {
                return function (_614) {
                    return _612(_614)(_613);
                };
            };
        };
    });
    var bitraversableTagged = new Data_Bitraversable.Bitraversable(function () {
        return bifoldableTagged;
    }, function () {
        return bifunctorTagged;
    }, function (__dict_Applicative_571) {
        return function (_625) {
            return Prelude["<$>"]((__dict_Applicative_571["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tagged)(_625);
        };
    }, function (__dict_Applicative_570) {
        return function (_622) {
            return function (_623) {
                return function (_624) {
                    return Prelude["<$>"]((__dict_Applicative_570["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tagged)(_623(_624));
                };
            };
        };
    });
    var biapplyTagged = new Control_Biapply.Biapply(function (_608) {
        return function (_609) {
            return Tagged(_608(_609));
        };
    }, function () {
        return bifunctorTagged;
    });
    var biapplicativeTagged = new Control_Biapplicative.Biapplicative(function () {
        return biapplyTagged;
    }, function (_610) {
        return Tagged;
    });
    var applyTagged = new Prelude.Apply(function (_586) {
        return function (_587) {
            return Tagged(_586(_587));
        };
    }, function () {
        return functorTagged;
    });
    var bindTagged = new Prelude.Bind(function (_588) {
        return function (_589) {
            return _589(_588);
        };
    }, function () {
        return applyTagged;
    });
    var applicativeTagged = new Prelude.Applicative(function () {
        return applyTagged;
    }, Tagged);
    var monadTagged = new Prelude.Monad(function () {
        return applicativeTagged;
    }, function () {
        return bindTagged;
    });
    return {
        Tagged: Tagged, 
        untagSelf: untagSelf, 
        tagSelf: tagSelf, 
        untag: untag, 
        retag: retag, 
        unTagged: unTagged, 
        functorTagged: functorTagged, 
        applyTagged: applyTagged, 
        bindTagged: bindTagged, 
        applicativeTagged: applicativeTagged, 
        monadTagged: monadTagged, 
        extendTagged: extendTagged, 
        comonadTagged: comonadTagged, 
        semigroupTagged: semigroupTagged, 
        monoidTagged: monoidTagged, 
        semigroupoidTagged: semigroupoidTagged, 
        foldableTagged: foldableTagged, 
        traversableTagged: traversableTagged, 
        bifunctorTagged: bifunctorTagged, 
        biapplyTagged: biapplyTagged, 
        biapplicativeTagged: biapplicativeTagged, 
        bifoldableTagged: bifoldableTagged, 
        bitraversableTagged: bitraversableTagged, 
        profunctorTagged: profunctorTagged, 
        choiceTagged: choiceTagged
    };
})();
var PS = PS || {};
PS.Optic_Internal_Setter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    var Data_Distributive = PS.Data_Distributive;
    var Data_Traversable = PS.Data_Traversable;
    var Settable = function (__superclass_Data$dotDistributive$dotDistributive_1, __superclass_Data$dotTraversable$dotTraversable_2, __superclass_Prelude$dotApplicative_0, taintedDot, untainted, untaintedDot) {
        this["__superclass_Data.Distributive.Distributive_1"] = __superclass_Data$dotDistributive$dotDistributive_1;
        this["__superclass_Data.Traversable.Traversable_2"] = __superclass_Data$dotTraversable$dotTraversable_2;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this.taintedDot = taintedDot;
        this.untainted = untainted;
        this.untaintedDot = untaintedDot;
    };
    var untaintedDot = function (dict) {
        return dict.untaintedDot;
    };
    var untainted = function (dict) {
        return dict.untainted;
    };
    var taintedDot = function (dict) {
        return dict.taintedDot;
    };
    var settableIdentity = new Settable(function () {
        return Data_Distributive.distributiveIdentity;
    }, function () {
        return Data_Identity.traversableIdentity;
    }, function () {
        return Data_Identity.applicativeIdentity;
    }, function (__dict_Profunctor_574) {
        return Data_Profunctor.rmap(__dict_Profunctor_574)(Data_Identity.Identity);
    }, function (_631) {
        return _631;
    }, function (__dict_Profunctor_573) {
        return Data_Profunctor.rmap(__dict_Profunctor_573)(Data_Identity.runIdentity);
    });
    return {
        Settable: Settable, 
        taintedDot: taintedDot, 
        untaintedDot: untaintedDot, 
        untainted: untainted, 
        settableIdentity: settableIdentity
    };
})();
var PS = PS || {};
PS.Optic_Getter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Const = PS.Data_Const;
    var Prelude = PS.Prelude;
    var Optic_Types = PS.Optic_Types;
    var Data_Contravariant = PS.Data_Contravariant;
    var Void = function (x) {
        return x;
    };
    var $up$dot = function (s) {
        return function (asa) {
            return Data_Const.getConst(asa(Data_Const.Const)(s));
        };
    };
    var view = function (asa) {
        return function (s) {
            return Data_Const.getConst(asa(Data_Const.Const)(s));
        };
    };
    var absurd = function (a) {
        var spin = function (__copy__632) {
            var _632 = __copy__632;
            tco: while (true) {
                var __tco__632 = _632;
                _632 = __tco__632;
                continue tco;
            };
        };
        return spin(a);
    };
    var coerce = function (__dict_Contravariant_575) {
        return function (__dict_Functor_576) {
            return function (a) {
                return Prelude["<$>"](__dict_Functor_576)(absurd)(Data_Contravariant[">$<"](__dict_Contravariant_575)(absurd)(a));
            };
        };
    };
    var to = function (__dict_Contravariant_577) {
        return function (__dict_Functor_578) {
            return function (__dict_Profunctor_579) {
                return function (s2a) {
                    return Data_Profunctor.dimap(__dict_Profunctor_579)(s2a)(coerce(__dict_Contravariant_577)(__dict_Functor_578));
                };
            };
        };
    };
    return {
        view: view, 
        to: to, 
        "^.": $up$dot
    };
})();
var PS = PS || {};
PS.Optic_Lens = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Types = PS.Optic_Types;
    var $qmark$qmark = function (__dict_Functor_580) {
        return function (ff) {
            return function (x) {
                return Prelude["<$>"](__dict_Functor_580)(function (f) {
                    return f(x);
                })(ff);
            };
        };
    };
    var lens = function (s2a) {
        return function (s2b2t) {
            return function (__dict_Functor_581) {
                return function (a2fb) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_581)(s2b2t(s))(a2fb(s2a(s)));
                    };
                };
            };
        };
    };
    return {
        lens: lens, 
        "??": $qmark$qmark
    };
})();
var PS = PS || {};
PS.Optic_Monad_Getter = (function () {
    "use strict";
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Const = PS.Data_Const;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Optic_Types = PS.Optic_Types;
    var use = function (__dict_Monad_582) {
        return function (__dict_MonadState_583) {
            return function (asa) {
                return Control_Monad_State_Class.gets(__dict_Monad_582)(__dict_MonadState_583)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Const.getConst)(asa(Data_Const.Const)));
            };
        };
    };
    var look = function (__dict_Monad_584) {
        return function (__dict_MonadReader_585) {
            return function (ara) {
                return Control_Monad_Reader_Class.reader(__dict_Monad_584)(__dict_MonadReader_585)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Const.getConst)(ara(Data_Const.Const)));
            };
        };
    };
    return {
        look: look, 
        use: use
    };
})();
var PS = PS || {};
PS.Optic_Equality = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var simply = Prelude.id(Prelude.categoryArr);
    var simple = Prelude.id(Prelude.categoryArr);
    return {
        simply: simply, 
        simple: simple
    };
})();
var PS = PS || {};
PS.Optic_Review = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Tagged = PS.Data_Tagged;
    var Data_Identity = PS.Data_Identity;
    var Optic_Getter = PS.Optic_Getter;
    var Prelude = PS.Prelude;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Optic_Monad_Getter = PS.Optic_Monad_Getter;
    var Optic_Internal_Setter = PS.Optic_Internal_Setter;
    var Optic_Types = PS.Optic_Types;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var Void = function (x) {
        return x;
    };
    var $hash$hash = Data_Profunctor.dimap(Data_Profunctor.profunctorArr)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Data_Tagged.Tagged))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tagged.unTagged)(Data_Identity.runIdentity));
    var reuses = function (__dict_Monad_586) {
        return function (__dict_MonadState_587) {
            return function (stab) {
                return function (t2r) {
                    return Control_Monad_State_Class.gets(__dict_Monad_586)(__dict_MonadState_587)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(Data_Profunctor.profunctorArr)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Data_Tagged.Tagged))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tagged.unTagged)(Data_Identity.runIdentity))(stab))(t2r));
                };
            };
        };
    };
    var reuse = function (__dict_Monad_588) {
        return function (__dict_MonadState_589) {
            return function (stab) {
                return reuses(__dict_Monad_588)(__dict_MonadState_589)(stab)(Prelude.id(Prelude.categoryArr));
            };
        };
    };
    var relooks = function (__dict_Monad_590) {
        return function (__dict_MonadReader_591) {
            return function (stab) {
                return function (t2r) {
                    return Control_Monad_Reader_Class.reader(__dict_Monad_590)(__dict_MonadReader_591)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(Data_Profunctor.profunctorArr)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Data_Tagged.Tagged))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tagged.unTagged)(Data_Identity.runIdentity))(stab))(t2r));
                };
            };
        };
    };
    var relook = function (__dict_Monad_592) {
        return function (__dict_MonadReader_593) {
            return function (stab) {
                return relooks(__dict_Monad_592)(__dict_MonadReader_593)(stab)(Prelude.id(Prelude.categoryArr));
            };
        };
    };
    var re = function (stab) {
        return function (__dict_Contravariant_594) {
            return function (__dict_Functor_595) {
                return Optic_Getter.to(__dict_Contravariant_594)(__dict_Functor_595)(Data_Profunctor.profunctorArr)(Data_Profunctor.dimap(Data_Profunctor.profunctorArr)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Data_Tagged.Tagged))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tagged.unTagged)(Data_Identity.runIdentity))(stab));
            };
        };
    };
    var absurd = function (a) {
        var spin = function (__copy__633) {
            var _633 = __copy__633;
            tco: while (true) {
                var __tco__633 = _633;
                _633 = __tco__633;
                continue tco;
            };
        };
        return spin(a);
    };
    var unto = function (__dict_Profunctor_596) {
        return function (__dict_Bifunctor_597) {
            return function (__dict_Functor_598) {
                return function (b2t) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.lmap(__dict_Bifunctor_597)(absurd))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.lmap(__dict_Profunctor_596)(absurd))(Data_Profunctor.rmap(__dict_Profunctor_596)(Prelude["<$>"](__dict_Functor_598)(b2t))));
                };
            };
        };
    };
    var un = function (__dict_Profunctor_599) {
        return function (__dict_Bifunctor_600) {
            return function (__dict_Functor_601) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Monad_Getter.look(Prelude.monadArr)(Control_Monad_Reader_Class.monadReaderFun))(unto(__dict_Profunctor_599)(__dict_Bifunctor_600)(__dict_Functor_601));
            };
        };
    };
    return {
        un: un, 
        unto: unto, 
        relooks: relooks, 
        relook: relook, 
        reuses: reuses, 
        reuse: reuse, 
        re: re, 
        "##": $hash$hash
    };
})();
var PS = PS || {};
PS.Optic_Traversal = (function () {
    "use strict";
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Prelude = PS.Prelude;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var Data_Traversable = PS.Data_Traversable;
    var traverseOf = Prelude.id(Prelude.categoryArr);
    var sequenceOf = function (l) {
        return l(Prelude.id(Prelude.categoryArr));
    };
    var forOf = Prelude.flip;
    var both = function (__dict_Bitraversable_602) {
        return function (__dict_Applicative_603) {
            return function (f) {
                return Data_Bitraversable.bitraverse(__dict_Bitraversable_602)(__dict_Applicative_603)(f)(f);
            };
        };
    };
    return {
        traverseOf: traverseOf, 
        sequenceOf: sequenceOf, 
        forOf: forOf, 
        both: both
    };
})();
var PS = PS || {};
PS.Data_Unfoldable = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Array_ST = PS.Data_Array_ST;
    var Prelude = PS.Prelude;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Unfoldable = function (unfoldr) {
        this.unfoldr = unfoldr;
    };
    var unfoldr = function (dict) {
        return dict.unfoldr;
    };
    var unfoldableArray = new Unfoldable(function (f) {
        return function (b) {
            return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
                var _30 = Data_Array_ST.emptySTArray();
                var _29 = Control_Monad_ST.newSTRef(b)();
                (function () {
                    while (!(function __do() {
                        var _28 = Control_Monad_ST.readSTRef(_29)();
                        return (function () {
                            var _2352 = f(_28);
                            if (_2352 instanceof Data_Maybe.Nothing) {
                                return Prelude["return"](Control_Monad_Eff.monadEff)(true);
                            };
                            if (_2352 instanceof Data_Maybe.Just) {
                                return function __do() {
                                    Data_Array_ST.pushSTArray(_30)(_2352.value0.value0)();
                                    Control_Monad_ST.writeSTRef(_29)(_2352.value0.value1)();
                                    return false;
                                };
                            };
                            throw new Error("Failed pattern match");
                        })()();
                    })()) {

                    };
                    return {};
                })();
                return _30;
            }));
        };
    });
    return {
        Unfoldable: Unfoldable, 
        unfoldr: unfoldr, 
        unfoldableArray: unfoldableArray
    };
})();
var PS = PS || {};
PS.Data_Enum = (function () {
    "use strict";
    var Data_Maybe = PS.Data_Maybe;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Unfoldable = PS.Data_Unfoldable;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    function floor(n){ return Math.floor(n); };
    var Cardinality = function (x) {
        return x;
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var Enum = function (__superclass_Prelude$dotOrd_0, cardinality, firstEnum, fromEnum, lastEnum, pred, succ, toEnum) {
        this["__superclass_Prelude.Ord_0"] = __superclass_Prelude$dotOrd_0;
        this.cardinality = cardinality;
        this.firstEnum = firstEnum;
        this.fromEnum = fromEnum;
        this.lastEnum = lastEnum;
        this.pred = pred;
        this.succ = succ;
        this.toEnum = toEnum;
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var toEnum = function (dict) {
        return dict.toEnum;
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var succ = function (dict) {
        return dict.succ;
    };
    var runCardinality = function (_634) {
        return _634;
    };
    var tupleCardinality = function (__dict_Enum_604) {
        return function (__dict_Enum_605) {
            return function (l) {
                return function (r) {
                    return Cardinality(runCardinality(l) * runCardinality(r));
                };
            };
        };
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var pred = function (dict) {
        return dict.pred;
    };
    var maybeCardinality = function (__dict_Enum_606) {
        return function (c) {
            return Cardinality(1 + runCardinality(c));
        };
    };
    var maybeToEnum = function (__dict_Enum_607) {
        return function (_639) {
            return function (_640) {
                if (_640 <= runCardinality(maybeCardinality(__dict_Enum_607)(_639))) {
                    var _2359 = _640 === 0;
                    if (_2359) {
                        return Data_Maybe.Just.create(Data_Maybe.Nothing.value);
                    };
                    if (!_2359) {
                        return Data_Maybe.Just.create(toEnum(__dict_Enum_607)(_640 - 1));
                    };
                    throw new Error("Failed pattern match");
                };
                return Data_Maybe.Nothing.value;
            };
        };
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var lastEnum = function (dict) {
        return dict.lastEnum;
    };
    
    /**
     *  Property: forall e in intStepFromTo step a b: a <= e <= b
     *  intStepFromTo :: Int -> Int -> Int -> List Int
     */
    var intStepFromTo = function (step) {
        return function (from) {
            return function (to) {
                return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                    var _2360 = e <= to;
                    if (_2360) {
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step));
                    };
                    if (!_2360) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match");
                })(from);
            };
        };
    };
    
    /**
     *  Property: forall e in intFromTo a b: a <= e <= b
     *  intFromTo :: Int -> Int -> List Int
     */
    var intFromTo = intStepFromTo(1);
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var fromEnum = function (dict) {
        return dict.fromEnum;
    };
    var tupleFromEnum = function (__dict_Enum_608) {
        return function (__dict_Enum_609) {
            return function (_643) {
                return function (_644) {
                    return fromEnum(__dict_Enum_608)(_644.value0) * runCardinality(_643) + fromEnum(__dict_Enum_609)(_644.value1);
                };
            };
        };
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var firstEnum = function (dict) {
        return dict.firstEnum;
    };
    
    /**
     *  Property: fromEnum a = a', fromEnum b = b' => forall e', a' <= e' <= b': Exists e: toEnum e' = Just e
     *  Following from the propery of intFromTo, We are sure all elements in intFromTo (fromEnum a) (fromEnum b) are Justs.
     */
    var enumFromTo = function (__dict_Enum_610) {
        return function (a) {
            return function (b) {
                var b$prime = fromEnum(__dict_Enum_610)(b);
                var a$prime = fromEnum(__dict_Enum_610)(a);
                return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_610))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
            };
        };
    };
    
    /**
     *  [a,b..c]
     *  Correctness for using fromJust is the same as for enumFromTo.
     */
    var enumFromThenTo = function (__dict_Enum_611) {
        return function (a) {
            return function (b) {
                return function (c) {
                    var c$prime = fromEnum(__dict_Enum_611)(c);
                    var b$prime = fromEnum(__dict_Enum_611)(b);
                    var a$prime = fromEnum(__dict_Enum_611)(a);
                    return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_611))(Data_Maybe_Unsafe.fromJust))(intStepFromTo(b$prime - a$prime)(a$prime)(c$prime));
                };
            };
        };
    };
    var eitherFromEnum = function (__dict_Enum_612) {
        return function (__dict_Enum_613) {
            return function (_645) {
                return function (_646) {
                    if (_646 instanceof Data_Either.Left) {
                        return fromEnum(__dict_Enum_612)(_646.value0);
                    };
                    if (_646 instanceof Data_Either.Right) {
                        return fromEnum(__dict_Enum_613)(_646.value0) + runCardinality(_645);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var eitherCardinality = function (__dict_Enum_614) {
        return function (__dict_Enum_615) {
            return function (l) {
                return function (r) {
                    return Cardinality(runCardinality(l) + runCardinality(r));
                };
            };
        };
    };
    var eitherToEnum = function (__dict_Enum_616) {
        return function (__dict_Enum_617) {
            return function (carda) {
                return function (cardb) {
                    return function (n) {
                        var _2369 = n >= 0 && n < runCardinality(carda);
                        if (_2369) {
                            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(__dict_Enum_616)(n));
                        };
                        if (!_2369) {
                            var _2370 = n >= runCardinality(carda) && n < runCardinality(eitherCardinality(__dict_Enum_616)(__dict_Enum_617)(carda)(cardb));
                            if (_2370) {
                                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(__dict_Enum_617)(n - runCardinality(carda)));
                            };
                            if (!_2370) {
                                return Data_Maybe.Nothing.value;
                            };
                            throw new Error("Failed pattern match");
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    var div = function (a) {
        return function (b) {
            return floor(a / b);
        };
    };
    
    /**
     *  All of these are as a workaround for ScopedTypeVariables. (not yet supported in Purescript)
     */
    var tupleToEnum = function (__dict_Enum_618) {
        return function (__dict_Enum_619) {
            return function (cardb) {
                return function (n) {
                    return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(__dict_Enum_618)(div(n)(runCardinality(cardb)))))(toEnum(__dict_Enum_619)(n % runCardinality(cardb)));
                };
            };
        };
    };
    
    /**
     *  | Runs in O(n) where n is (fromEnum a)
     *  | defaultToEnum succ firstEnum = toEnum
     */
    var defaultToEnum = function (_635) {
        return function (_636) {
            return function (_637) {
                if (_637 < 0) {
                    return Data_Maybe.Nothing.value;
                };
                if (_637 === 0) {
                    return new Data_Maybe.Just(_636);
                };
                return Prelude[">>="](Data_Maybe.bindMaybe)(defaultToEnum(_635)(_636)(_637 - 1))(_635);
            };
        };
    };
    
    /**
     *  | defaultSucc toEnum fromEnum = succ
     */
    var defaultSucc = function (toEnum$prime) {
        return function (fromEnum$prime) {
            return function (a) {
                return toEnum$prime(fromEnum$prime(a) + 1);
            };
        };
    };
    
    /**
     *  | defaultPred toEnum fromEnum = pred
     */
    var defaultPred = function (toEnum$prime) {
        return function (fromEnum$prime) {
            return function (a) {
                return toEnum$prime(fromEnum$prime(a) - 1);
            };
        };
    };
    
    /**
     *  | Runs in O(n) where n is (fromEnum a)
     *  | defaultFromEnum pred = fromEnum
     */
    var defaultFromEnum = function (pred$prime) {
        return function (e) {
            return Data_Maybe.maybe(0)(function (prd) {
                return defaultFromEnum(pred$prime)(prd) + 1;
            })(pred$prime(e));
        };
    };
    
    /**
     *  To avoid a compiler bug - can't pass self-class functions, workaround: need to make a concrete function.
     */
    var charToEnum = function (_638) {
        if (_638 >= 0 && _638 <= 65535) {
            return Data_Maybe.Just.create(Data_Char.fromCharCode(_638));
        };
        return Data_Maybe.Nothing.value;
    };
    var charFromEnum = Data_Char.toCharCode;
    
    /**
     *  starting value/state.
     *  | Instances
     */
    var enumChar = new Enum(function () {
        return Data_Char.ordChar;
    }, 65535 + 1, Data_Char.fromCharCode(0), charFromEnum, Data_Char.fromCharCode(65535), defaultPred(charToEnum)(charFromEnum), defaultSucc(charToEnum)(charFromEnum), charToEnum);
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var cardinality = function (dict) {
        return dict.cardinality;
    };
    var enumEither = function (__dict_Enum_620) {
        return function (__dict_Enum_621) {
            return new Enum(function () {
                return Data_Either.ordEither(__dict_Enum_620["__superclass_Prelude.Ord_0"]())(__dict_Enum_621["__superclass_Prelude.Ord_0"]());
            }, eitherCardinality(__dict_Enum_620)(__dict_Enum_621)(cardinality(__dict_Enum_620))(cardinality(__dict_Enum_621)), new Data_Either.Left(firstEnum(__dict_Enum_620)), eitherFromEnum(__dict_Enum_620)(__dict_Enum_621)(cardinality(__dict_Enum_620)), new Data_Either.Right(lastEnum(__dict_Enum_621)), function (_653) {
                if (_653 instanceof Data_Either.Left) {
                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_620)(_653.value0));
                };
                if (_653 instanceof Data_Either.Right) {
                    return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(lastEnum(__dict_Enum_620))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_621)(_653.value0));
                };
                throw new Error("Failed pattern match");
            }, function (_652) {
                if (_652 instanceof Data_Either.Left) {
                    return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(firstEnum(__dict_Enum_621))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_620)(_652.value0));
                };
                if (_652 instanceof Data_Either.Right) {
                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_621)(_652.value0));
                };
                throw new Error("Failed pattern match");
            }, eitherToEnum(__dict_Enum_620)(__dict_Enum_621)(cardinality(__dict_Enum_620))(cardinality(__dict_Enum_621)));
        };
    };
    var enumMaybe = function (__dict_Enum_622) {
        return new Enum(function () {
            return Data_Maybe.ordMaybe(__dict_Enum_622["__superclass_Prelude.Ord_0"]());
        }, maybeCardinality(__dict_Enum_622)(cardinality(__dict_Enum_622)), Data_Maybe.Nothing.value, function (_649) {
            if (_649 instanceof Data_Maybe.Nothing) {
                return 0;
            };
            if (_649 instanceof Data_Maybe.Just) {
                return fromEnum(__dict_Enum_622)(_649.value0) + 1;
            };
            throw new Error("Failed pattern match");
        }, Data_Maybe.Just.create(lastEnum(__dict_Enum_622)), function (_648) {
            if (_648 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (_648 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_622)(_648.value0));
            };
            throw new Error("Failed pattern match");
        }, function (_647) {
            if (_647 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Just.create(firstEnum(enumMaybe(__dict_Enum_622)));
            };
            if (_647 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_622)(_647.value0));
            };
            throw new Error("Failed pattern match");
        }, maybeToEnum(__dict_Enum_622)(cardinality(__dict_Enum_622)));
    };
    var enumTuple = function (__dict_Enum_623) {
        return function (__dict_Enum_624) {
            return new Enum(function () {
                return Data_Tuple.ordTuple(__dict_Enum_623["__superclass_Prelude.Ord_0"]())(__dict_Enum_624["__superclass_Prelude.Ord_0"]());
            }, tupleCardinality(__dict_Enum_623)(__dict_Enum_624)(cardinality(__dict_Enum_623))(cardinality(__dict_Enum_624)), new Data_Tuple.Tuple(firstEnum(__dict_Enum_623), firstEnum(__dict_Enum_624)), tupleFromEnum(__dict_Enum_623)(__dict_Enum_624)(cardinality(__dict_Enum_624)), new Data_Tuple.Tuple(lastEnum(__dict_Enum_623), lastEnum(__dict_Enum_624)), function (_651) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_624)))(pred(__dict_Enum_623)(_651.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_651.value0)))(pred(__dict_Enum_624)(_651.value1));
            }, function (_650) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_624)))(succ(__dict_Enum_623)(_650.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_650.value0)))(succ(__dict_Enum_624)(_650.value1));
            }, tupleToEnum(__dict_Enum_623)(__dict_Enum_624)(cardinality(__dict_Enum_624)));
        };
    };
    var booleanSucc = function (_641) {
        if (!_641) {
            return new Data_Maybe.Just(true);
        };
        return Data_Maybe.Nothing.value;
    };
    var booleanPred = function (_642) {
        if (_642) {
            return new Data_Maybe.Just(false);
        };
        return Data_Maybe.Nothing.value;
    };
    var booleanFirstEnum = false;
    var enumBoolean = new Enum(function () {
        return Prelude.ordBoolean;
    }, 2, booleanFirstEnum, defaultFromEnum(booleanPred), true, booleanPred, booleanSucc, defaultToEnum(booleanSucc)(booleanFirstEnum));
    return {
        Cardinality: Cardinality, 
        Enum: Enum, 
        enumFromThenTo: enumFromThenTo, 
        enumFromTo: enumFromTo, 
        intStepFromTo: intStepFromTo, 
        intFromTo: intFromTo, 
        defaultFromEnum: defaultFromEnum, 
        defaultToEnum: defaultToEnum, 
        defaultPred: defaultPred, 
        defaultSucc: defaultSucc, 
        toEnum: toEnum, 
        succ: succ, 
        runCardinality: runCardinality, 
        pred: pred, 
        lastEnum: lastEnum, 
        fromEnum: fromEnum, 
        firstEnum: firstEnum, 
        cardinality: cardinality, 
        enumChar: enumChar, 
        enumMaybe: enumMaybe, 
        enumBoolean: enumBoolean, 
        enumTuple: enumTuple, 
        enumEither: enumEither
    };
})();
var PS = PS || {};
PS.Data_Date = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Enum = PS.Data_Enum;
    var Global = PS.Global;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Maybe = PS.Data_Maybe;
    function jsDateMethod(method) {   return function(date) {     return date[method]();   }; };
    function jsDateConstructor(x) {   return new Date(x); };
    function strictJsDate(Just, Nothing, s) {
    var epoch = Date.parse(s);
    if (isNaN(epoch)) return Nothing;
    var date = new Date(epoch);
    var s2 = date.toISOString();
    var idx = s2.indexOf(s);
    if (idx < 0) return Nothing;
    else return Just(date);
  };
    function jsDateFromRecord(r) {  return new Date(r.year, r.month, r.day, r.hours, r.minutes, r.seconds, r.milliseconds); };
    
  function nowImpl(f) {
    return function(){
      return f(new Date()); 
    };    
  }
  ;
    var January = (function () {
        function January() {

        };
        January.value = new January();
        return January;
    })();
    var February = (function () {
        function February() {

        };
        February.value = new February();
        return February;
    })();
    var March = (function () {
        function March() {

        };
        March.value = new March();
        return March;
    })();
    var April = (function () {
        function April() {

        };
        April.value = new April();
        return April;
    })();
    var May = (function () {
        function May() {

        };
        May.value = new May();
        return May;
    })();
    var June = (function () {
        function June() {

        };
        June.value = new June();
        return June;
    })();
    var July = (function () {
        function July() {

        };
        July.value = new July();
        return July;
    })();
    var August = (function () {
        function August() {

        };
        August.value = new August();
        return August;
    })();
    var September = (function () {
        function September() {

        };
        September.value = new September();
        return September;
    })();
    var October = (function () {
        function October() {

        };
        October.value = new October();
        return October;
    })();
    var November = (function () {
        function November() {

        };
        November.value = new November();
        return November;
    })();
    var December = (function () {
        function December() {

        };
        December.value = new December();
        return December;
    })();
    var Sunday = (function () {
        function Sunday() {

        };
        Sunday.value = new Sunday();
        return Sunday;
    })();
    var Monday = (function () {
        function Monday() {

        };
        Monday.value = new Monday();
        return Monday;
    })();
    var Tuesday = (function () {
        function Tuesday() {

        };
        Tuesday.value = new Tuesday();
        return Tuesday;
    })();
    var Wednesday = (function () {
        function Wednesday() {

        };
        Wednesday.value = new Wednesday();
        return Wednesday;
    })();
    var Thursday = (function () {
        function Thursday() {

        };
        Thursday.value = new Thursday();
        return Thursday;
    })();
    var Friday = (function () {
        function Friday() {

        };
        Friday.value = new Friday();
        return Friday;
    })();
    var Saturday = (function () {
        function Saturday() {

        };
        Saturday.value = new Saturday();
        return Saturday;
    })();
    var DateTime = (function () {
        function DateTime(value0) {
            this.value0 = value0;
        };
        DateTime.create = function (value0) {
            return new DateTime(value0);
        };
        return DateTime;
    })();
    var toJSDate = function (_658) {
        return _658.value0;
    };
    var showMonth = new Prelude.Show(function (_663) {
        if (_663 instanceof January) {
            return "January";
        };
        if (_663 instanceof February) {
            return "February";
        };
        if (_663 instanceof March) {
            return "March";
        };
        if (_663 instanceof April) {
            return "April";
        };
        if (_663 instanceof May) {
            return "May";
        };
        if (_663 instanceof June) {
            return "June";
        };
        if (_663 instanceof July) {
            return "July";
        };
        if (_663 instanceof August) {
            return "August";
        };
        if (_663 instanceof September) {
            return "September";
        };
        if (_663 instanceof October) {
            return "October";
        };
        if (_663 instanceof November) {
            return "November";
        };
        if (_663 instanceof December) {
            return "December";
        };
        throw new Error("Failed pattern match");
    });
    var showDayOfWeek = new Prelude.Show(function (_666) {
        if (_666 instanceof Sunday) {
            return "Sunday";
        };
        if (_666 instanceof Monday) {
            return "Monday";
        };
        if (_666 instanceof Tuesday) {
            return "Tuesday";
        };
        if (_666 instanceof Wednesday) {
            return "Wednesday";
        };
        if (_666 instanceof Thursday) {
            return "Thursday";
        };
        if (_666 instanceof Friday) {
            return "Friday";
        };
        if (_666 instanceof Saturday) {
            return "Saturday";
        };
        throw new Error("Failed pattern match");
    });
    var now = nowImpl(DateTime.create);
    var monthToEnum = function (_654) {
        if (_654 === 0) {
            return new Data_Maybe.Just(January.value);
        };
        if (_654 === 1) {
            return new Data_Maybe.Just(February.value);
        };
        if (_654 === 2) {
            return new Data_Maybe.Just(March.value);
        };
        if (_654 === 3) {
            return new Data_Maybe.Just(April.value);
        };
        if (_654 === 4) {
            return new Data_Maybe.Just(May.value);
        };
        if (_654 === 5) {
            return new Data_Maybe.Just(June.value);
        };
        if (_654 === 6) {
            return new Data_Maybe.Just(July.value);
        };
        if (_654 === 7) {
            return new Data_Maybe.Just(August.value);
        };
        if (_654 === 8) {
            return new Data_Maybe.Just(September.value);
        };
        if (_654 === 9) {
            return new Data_Maybe.Just(October.value);
        };
        if (_654 === 10) {
            return new Data_Maybe.Just(November.value);
        };
        if (_654 === 11) {
            return new Data_Maybe.Just(December.value);
        };
        return Data_Maybe.Nothing.value;
    };
    var monthFromEnum = function (_655) {
        if (_655 instanceof January) {
            return 0;
        };
        if (_655 instanceof February) {
            return 1;
        };
        if (_655 instanceof March) {
            return 2;
        };
        if (_655 instanceof April) {
            return 3;
        };
        if (_655 instanceof May) {
            return 4;
        };
        if (_655 instanceof June) {
            return 5;
        };
        if (_655 instanceof July) {
            return 6;
        };
        if (_655 instanceof August) {
            return 7;
        };
        if (_655 instanceof September) {
            return 8;
        };
        if (_655 instanceof October) {
            return 9;
        };
        if (_655 instanceof November) {
            return 10;
        };
        if (_655 instanceof December) {
            return 11;
        };
        throw new Error("Failed pattern match");
    };
    var liftDate = function (_659) {
        return function (_660) {
            return _659(_660.value0);
        };
    };
    var millisecond = liftDate(jsDateMethod("getMilliseconds"));
    var millisecondUTC = liftDate(jsDateMethod("getUTCMilliseconds"));
    var minute = liftDate(jsDateMethod("getMinutes"));
    var minuteUTC = liftDate(jsDateMethod("getUTCMinutes"));
    var second = liftDate(jsDateMethod("getSeconds"));
    var secondUTC = liftDate(jsDateMethod("getUTCSeconds"));
    var showDate = new Prelude.Show(liftDate(jsDateMethod("toString")));
    var timezoneOffset = liftDate(jsDateMethod("getTimezoneOffset"));
    var toEpochMilliseconds = liftDate(jsDateMethod("getTime"));
    var liftOp = function (op) {
        return function (x) {
            return function (y) {
                return op(toEpochMilliseconds(x))(toEpochMilliseconds(y));
            };
        };
    };
    var year = liftDate(jsDateMethod("getFullYear"));
    var yearUTC = liftDate(jsDateMethod("getUTCFullYear"));
    var hourUTC = liftDate(jsDateMethod("getUTCHours"));
    var hour = liftDate(jsDateMethod("getHours"));
    var fromJSDate = function (d) {
        var _2404 = Global.isNaN(jsDateMethod("getTime")(d));
        if (_2404) {
            return Data_Maybe.Nothing.value;
        };
        if (!_2404) {
            return Data_Maybe.Just.create(new DateTime(d));
        };
        throw new Error("Failed pattern match");
    };
    var fromString = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
    var fromStringStrict = function (s) {
        return Prelude[">>="](Data_Maybe.bindMaybe)(strictJsDate(Data_Maybe.Just.create, Data_Maybe.Nothing.value, s))(fromJSDate);
    };
    var fromEpochMilliseconds = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
    var eqMonth = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqMonth)(a)(b);
        };
    }, function (_661) {
        return function (_662) {
            if (_661 instanceof January && _662 instanceof January) {
                return true;
            };
            if (_661 instanceof February && _662 instanceof February) {
                return true;
            };
            if (_661 instanceof March && _662 instanceof March) {
                return true;
            };
            if (_661 instanceof April && _662 instanceof April) {
                return true;
            };
            if (_661 instanceof May && _662 instanceof May) {
                return true;
            };
            if (_661 instanceof June && _662 instanceof June) {
                return true;
            };
            if (_661 instanceof July && _662 instanceof July) {
                return true;
            };
            if (_661 instanceof August && _662 instanceof August) {
                return true;
            };
            if (_661 instanceof September && _662 instanceof September) {
                return true;
            };
            if (_661 instanceof October && _662 instanceof October) {
                return true;
            };
            if (_661 instanceof November && _662 instanceof November) {
                return true;
            };
            if (_661 instanceof December && _662 instanceof December) {
                return true;
            };
            return false;
        };
    });
    var eqDayOfWeek = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqDayOfWeek)(a)(b);
        };
    }, function (_664) {
        return function (_665) {
            if (_664 instanceof Sunday && _665 instanceof Sunday) {
                return true;
            };
            if (_664 instanceof Monday && _665 instanceof Monday) {
                return true;
            };
            if (_664 instanceof Tuesday && _665 instanceof Tuesday) {
                return true;
            };
            if (_664 instanceof Wednesday && _665 instanceof Wednesday) {
                return true;
            };
            if (_664 instanceof Thursday && _665 instanceof Thursday) {
                return true;
            };
            if (_664 instanceof Friday && _665 instanceof Friday) {
                return true;
            };
            if (_664 instanceof Saturday && _665 instanceof Saturday) {
                return true;
            };
            return false;
        };
    });
    var eqDate = new Prelude.Eq(liftOp(Prelude["/="](Prelude.eqNumber)), liftOp(Prelude["=="](Prelude.eqNumber)));
    var ordDate = new Prelude.Ord(function () {
        return eqDate;
    }, liftOp(Prelude.compare(Prelude.ordNumber)));
    var ordMonth = new Prelude.Ord(function () {
        return eqMonth;
    }, function (a) {
        return function (b) {
            return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumMonth)(a))(Data_Enum.fromEnum(enumMonth)(b));
        };
    });
    var enumMonth = new Data_Enum.Enum(function () {
        return ordMonth;
    }, 12, January.value, monthFromEnum, December.value, Data_Enum.defaultPred(monthToEnum)(monthFromEnum), Data_Enum.defaultSucc(monthToEnum)(monthFromEnum), monthToEnum);
    var month = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getMonth"))));
    var monthUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getUTCMonth"))));
    var dayUTC = liftDate(jsDateMethod("getUTCDate"));
    var dayOfWeekToEnum = function (_656) {
        if (_656 === 0) {
            return new Data_Maybe.Just(Sunday.value);
        };
        if (_656 === 1) {
            return new Data_Maybe.Just(Monday.value);
        };
        if (_656 === 2) {
            return new Data_Maybe.Just(Tuesday.value);
        };
        if (_656 === 3) {
            return new Data_Maybe.Just(Wednesday.value);
        };
        if (_656 === 4) {
            return new Data_Maybe.Just(Thursday.value);
        };
        if (_656 === 5) {
            return new Data_Maybe.Just(Friday.value);
        };
        if (_656 === 6) {
            return new Data_Maybe.Just(Saturday.value);
        };
        return Data_Maybe.Nothing.value;
    };
    var dayOfWeekFromEnum = function (_657) {
        if (_657 instanceof Sunday) {
            return 0;
        };
        if (_657 instanceof Monday) {
            return 1;
        };
        if (_657 instanceof Tuesday) {
            return 2;
        };
        if (_657 instanceof Wednesday) {
            return 3;
        };
        if (_657 instanceof Thursday) {
            return 4;
        };
        if (_657 instanceof Friday) {
            return 5;
        };
        if (_657 instanceof Saturday) {
            return 6;
        };
        throw new Error("Failed pattern match");
    };
    var ordDayOfWeek = new Prelude.Ord(function () {
        return eqDayOfWeek;
    }, function (a) {
        return function (b) {
            return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumDayOfWeek)(a))(Data_Enum.fromEnum(enumDayOfWeek)(b));
        };
    });
    var enumDayOfWeek = new Data_Enum.Enum(function () {
        return ordDayOfWeek;
    }, 7, Sunday.value, dayOfWeekFromEnum, Saturday.value, Data_Enum.defaultPred(dayOfWeekToEnum)(dayOfWeekFromEnum), Data_Enum.defaultSucc(dayOfWeekToEnum)(dayOfWeekFromEnum), dayOfWeekToEnum);
    var dayOfWeekUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getUTCDay"))));
    var dayOfWeek = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getDay"))));
    var day = liftDate(jsDateMethod("getDate"));
    var dateTime = function (y) {
        return function (m) {
            return function (d) {
                return function (h) {
                    return function (n) {
                        return function (s) {
                            return function (ms) {
                                return fromJSDate(jsDateFromRecord({
                                    year: y, 
                                    month: Data_Enum.fromEnum(enumMonth)(m), 
                                    day: d, 
                                    hours: h, 
                                    minutes: n, 
                                    seconds: s, 
                                    milliseconds: ms
                                }));
                            };
                        };
                    };
                };
            };
        };
    };
    var date = function (y) {
        return function (m) {
            return function (d) {
                return dateTime(y)(m)(d)(0)(0)(0)(0);
            };
        };
    };
    return {
        January: January, 
        February: February, 
        March: March, 
        April: April, 
        May: May, 
        June: June, 
        July: July, 
        August: August, 
        September: September, 
        October: October, 
        November: November, 
        December: December, 
        fromStringStrict: fromStringStrict, 
        fromString: fromString, 
        fromEpochMilliseconds: fromEpochMilliseconds, 
        toEpochMilliseconds: toEpochMilliseconds, 
        timezoneOffset: timezoneOffset, 
        millisecondUTC: millisecondUTC, 
        millisecond: millisecond, 
        secondUTC: secondUTC, 
        second: second, 
        minuteUTC: minuteUTC, 
        minute: minute, 
        hourUTC: hourUTC, 
        hour: hour, 
        dayOfWeekUTC: dayOfWeekUTC, 
        dayOfWeek: dayOfWeek, 
        dayUTC: dayUTC, 
        day: day, 
        monthUTC: monthUTC, 
        month: month, 
        yearUTC: yearUTC, 
        year: year, 
        date: date, 
        dateTime: dateTime, 
        now: now, 
        toJSDate: toJSDate, 
        fromJSDate: fromJSDate, 
        eqDate: eqDate, 
        ordDate: ordDate, 
        eqMonth: eqMonth, 
        ordMonth: ordMonth, 
        enumMonth: enumMonth, 
        showMonth: showMonth, 
        eqDayOfWeek: eqDayOfWeek, 
        ordDayOfWeek: ordDayOfWeek, 
        enumDayOfWeek: enumDayOfWeek, 
        showDayOfWeek: showDayOfWeek, 
        showDate: showDate
    };
})();
var PS = PS || {};
PS.Optic_Fold = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Const = PS.Data_Const;
    var Data_Monoid_Endo = PS.Data_Monoid_Endo;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_Any = PS.Data_Monoid_Any;
    var Data_Monoid_All = PS.Data_Monoid_All;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Maybe = PS.Data_Maybe;
    var Optic_Types = PS.Optic_Types;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var foldOf = function (asa) {
        return function (s) {
            return Data_Const.getConst(asa(Data_Const.Const)(s));
        };
    };
    var foldMapOf = function (__dict_Profunctor_625) {
        return function (prsa) {
            return function (par) {
                return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Const.getConst)(prsa(Data_Profunctor.rmap(__dict_Profunctor_625)(Data_Const.Const)(par)));
            };
        };
    };
    var foldlOf = function (pErsa) {
        return function (par2r) {
            return function (r) {
                return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Profunctor.lmap(Data_Profunctor.profunctorArr)(Data_Monoid_Dual.runDual)(Prelude.flip(Data_Monoid_Endo.runEndo)(r)))(foldMapOf(Data_Profunctor.profunctorArr)(pErsa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Monoid_Dual.Dual)(Data_Monoid_Endo.Endo))(Prelude.flip(par2r))));
            };
        };
    };
    var foldrOf = function (__dict_Profunctor_626) {
        return function (pErsa) {
            return function (par2r) {
                return function (r) {
                    return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Prelude.flip(Data_Monoid_Endo.runEndo)(r))(foldMapOf(__dict_Profunctor_626)(pErsa)(Data_Profunctor.rmap(__dict_Profunctor_626)(Data_Monoid_Endo.Endo)(par2r)));
                };
            };
        };
    };
    var toListOf = function (easa) {
        return foldrOf(Data_Profunctor.profunctorArr)(easa)(Prelude[":"])([  ]);
    };
    var $up$dot$dot = Prelude.flip(toListOf);
    var has = function (asa) {
        return function (s) {
            return Data_Monoid_Any.runAny(foldMapOf(Data_Profunctor.profunctorArr)(asa)(Prelude["const"](true))(s));
        };
    };
    var hasn$primet = function (asa) {
        return function (s) {
            return Data_Monoid_All.runAll(foldMapOf(Data_Profunctor.profunctorArr)(asa)(Prelude["const"](false))(s));
        };
    };
    var $up$qmark = function (s) {
        return function (fasa) {
            return Data_Monoid_First.runFirst(foldMapOf(Data_Profunctor.profunctorArr)(fasa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Monoid_First.First)(Data_Maybe.Just.create))(s));
        };
    };
    var filtered = function (__dict_Applicative_627) {
        return function (__dict_Choice_628) {
            return function (p) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(__dict_Choice_628["__superclass_Data.Profunctor.Profunctor_0"]())(function (x) {
                    var _2411 = p(x);
                    if (_2411) {
                        return new Data_Either.Right(x);
                    };
                    if (!_2411) {
                        return new Data_Either.Left(x);
                    };
                    throw new Error("Failed pattern match");
                })(Data_Either.either(Prelude.pure(__dict_Applicative_627))(Prelude.id(Prelude.categoryArr))))(Data_Profunctor_Choice.right(__dict_Choice_628));
            };
        };
    };
    return {
        toListOf: toListOf, 
        "hasn't": hasn$primet, 
        has: has, 
        foldrOf: foldrOf, 
        foldOf: foldOf, 
        foldMapOf: foldMapOf, 
        foldlOf: foldlOf, 
        filtered: filtered, 
        "^?": $up$qmark, 
        "^..": $up$dot$dot
    };
})();
var PS = PS || {};
PS.Optic_Index_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Map = PS.Data_Map;
    var Data_Set = PS.Data_Set;
    var Data_StrMap = PS.Data_StrMap;
    var IndexKey = {};
    var IndexValue = {};
    var indexValueStrMap = IndexValue;
    var indexValueSet = IndexValue;
    var indexValueMaybe = IndexValue;
    var indexValueMap = IndexValue;
    var indexValueIdentity = IndexValue;
    var indexValueArray = IndexValue;
    var indexValueArr = IndexValue;
    var indexKeyStrMap = IndexKey;
    var indexKeySet = IndexKey;
    var indexKeyMaybe = IndexKey;
    var indexKeyMap = IndexKey;
    var indexKeyIdentity = IndexKey;
    var indexKeyArray = IndexKey;
    var indexKeyArr = IndexKey;
    return {
        IndexValue: IndexValue, 
        IndexKey: IndexKey, 
        indexKeyArr: indexKeyArr, 
        indexKeyArray: indexKeyArray, 
        indexKeyIdentity: indexKeyIdentity, 
        indexKeyMap: indexKeyMap, 
        indexKeyMaybe: indexKeyMaybe, 
        indexKeySet: indexKeySet, 
        indexKeyStrMap: indexKeyStrMap, 
        indexValueArr: indexValueArr, 
        indexValueArray: indexValueArray, 
        indexValueIdentity: indexValueIdentity, 
        indexValueMap: indexValueMap, 
        indexValueMaybe: indexValueMaybe, 
        indexValueSet: indexValueSet, 
        indexValueStrMap: indexValueStrMap
    };
})();
var PS = PS || {};
PS.Optic_Contains = (function () {
    "use strict";
    var Data_Set = PS.Data_Set;
    var Prelude = PS.Prelude;
    var Optic_Index_Class = PS.Optic_Index_Class;
    var Optic_Index_Types = PS.Optic_Index_Types;
    var Contains = function (__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, contains) {
        this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
        this.contains = contains;
    };
    var containsSet = function (__dict_Ord_629) {
        return new Contains(function () {
            return Optic_Index_Class.indexKeySet;
        }, function (k) {
            return function (__dict_Functor_630) {
                return function (f) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_630)(function (b) {
                            if (b) {
                                return Data_Set.insert(__dict_Ord_629)(k)(s);
                            };
                            if (!b) {
                                return Data_Set["delete"](__dict_Ord_629)(k)(s);
                            };
                            throw new Error("Failed pattern match");
                        })(f(Data_Set.member(__dict_Ord_629)(k)(s)));
                    };
                };
            };
        });
    };
    var contains = function (dict) {
        return dict.contains;
    };
    return {
        Contains: Contains, 
        contains: contains, 
        containsSet: containsSet
    };
})();
var PS = PS || {};
PS.Optic_Index = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Set = PS.Data_Set;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Identity = PS.Data_Identity;
    var Optic_Index_Class = PS.Optic_Index_Class;
    var Optic_Index_Types = PS.Optic_Index_Types;
    var Index = function (__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, __superclass_Optic$dotIndex$dotClass$dotIndexValue_1, ix) {
        this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
        this["__superclass_Optic.Index.Class.IndexValue_1"] = __superclass_Optic$dotIndex$dotClass$dotIndexValue_1;
        this.ix = ix;
    };
    var ix = function (dict) {
        return dict.ix;
    };
    var indexStrMap = new Index(function () {
        return Optic_Index_Class.indexKeyStrMap;
    }, function () {
        return Optic_Index_Class.indexValueStrMap;
    }, function (str) {
        return function (__dict_Applicative_631) {
            return function (v2fv) {
                return function (sm) {
                    return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_631)(sm))(function (v) {
                        return Prelude["<$>"]((__dict_Applicative_631["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (v$prime) {
                            return Data_StrMap.insert(str)(v$prime)(sm);
                        })(v2fv(v));
                    })(Data_StrMap.lookup(str)(sm));
                };
            };
        };
    });
    var indexSet = function (__dict_Ord_632) {
        return new Index(function () {
            return Optic_Index_Class.indexKeySet;
        }, function () {
            return Optic_Index_Class.indexValueSet;
        }, function (a) {
            return function (__dict_Applicative_633) {
                return function (u2fu) {
                    return function (s) {
                        var _2413 = Data_Set.member(__dict_Ord_632)(a)(s);
                        if (_2413) {
                            return Prelude.pure(__dict_Applicative_633)(Data_Set.insert(__dict_Ord_632)(a)(s));
                        };
                        if (!_2413) {
                            return Prelude.pure(__dict_Applicative_633)(s);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var indexMaybe = new Index(function () {
        return Optic_Index_Class.indexKeyMaybe;
    }, function () {
        return Optic_Index_Class.indexValueMaybe;
    }, function (_667) {
        return function (__dict_Applicative_634) {
            return function (_668) {
                return function (_669) {
                    if (_669 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Applicative_634)(Data_Maybe.Nothing.value);
                    };
                    if (_669 instanceof Data_Maybe.Just) {
                        return Prelude["<$>"]((__dict_Applicative_634["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_668(_669.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    var indexMap = function (__dict_Ord_635) {
        return new Index(function () {
            return Optic_Index_Class.indexKeyMap;
        }, function () {
            return Optic_Index_Class.indexValueMap;
        }, function (k) {
            return function (__dict_Applicative_636) {
                return function (v2fv) {
                    return function (m) {
                        return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_636)(m))(function (v) {
                            return Prelude["<$>"]((__dict_Applicative_636["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (v$prime) {
                                return Data_Map.insert(__dict_Ord_635)(k)(v$prime)(m);
                            })(v2fv(v));
                        })(Data_Map.lookup(__dict_Ord_635)(k)(m));
                    };
                };
            };
        });
    };
    var indexIdentity = new Index(function () {
        return Optic_Index_Class.indexKeyIdentity;
    }, function () {
        return Optic_Index_Class.indexValueIdentity;
    }, function (_670) {
        return function (__dict_Applicative_637) {
            return function (_671) {
                return function (_672) {
                    return Prelude["<$>"]((__dict_Applicative_637["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Identity.Identity)(_671(_672));
                };
            };
        };
    });
    var indexArray = new Index(function () {
        return Optic_Index_Class.indexKeyArray;
    }, function () {
        return Optic_Index_Class.indexValueArray;
    }, function (_673) {
        return function (__dict_Applicative_638) {
            return function (_674) {
                return function (_675) {
                    if (_673 < 0) {
                        return Prelude.pure(__dict_Applicative_638)(_675);
                    };
                    if (_675.length === 0) {
                        return Prelude.pure(__dict_Applicative_638)([  ]);
                    };
                    if (_673 === 0 && _675.length >= 1) {
                        var _2425 = _675.slice(1);
                        return Prelude["<#>"]((__dict_Applicative_638["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(_674(_675[0]))(function (a$prime) {
                            return Prelude[":"](a$prime)(_2425);
                        });
                    };
                    if (_675.length >= 1) {
                        var _2427 = _675.slice(1);
                        return Prelude["<$>"]((__dict_Applicative_638["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"](_675[0]))(ix(indexArray)(_673 - 1)(__dict_Applicative_638)(_674)(_2427));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    var indexArr = function (__dict_Eq_639) {
        return new Index(function () {
            return Optic_Index_Class.indexKeyArr;
        }, function () {
            return Optic_Index_Class.indexValueArr;
        }, function (e) {
            return function (__dict_Applicative_640) {
                return function (a2fa) {
                    return function (e2a) {
                        return Prelude["<$>"]((__dict_Applicative_640["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a) {
                            return function (e$prime) {
                                var _2428 = Prelude["=="](__dict_Eq_639)(e)(e$prime);
                                if (_2428) {
                                    return a;
                                };
                                if (!_2428) {
                                    return e2a(e$prime);
                                };
                                throw new Error("Failed pattern match");
                            };
                        })(a2fa(e2a(e)));
                    };
                };
            };
        });
    };
    return {
        Index: Index, 
        ix: ix, 
        indexArr: indexArr, 
        indexMaybe: indexMaybe, 
        indexIdentity: indexIdentity, 
        indexArray: indexArray, 
        indexSet: indexSet, 
        indexMap: indexMap, 
        indexStrMap: indexStrMap
    };
})();
var PS = PS || {};
PS.Optic_At = (function () {
    "use strict";
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Data_Set = PS.Data_Set;
    var Data_Map = PS.Data_Map;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Identity = PS.Data_Identity;
    var Optic_Index = PS.Optic_Index;
    var Optic_Index_Types = PS.Optic_Index_Types;
    var At = function (__superclass_Optic$dotIndex$dotIndex_0, at) {
        this["__superclass_Optic.Index.Index_0"] = __superclass_Optic$dotIndex$dotIndex_0;
        this.at = at;
    };
    var atStrMap = new At(function () {
        return Optic_Index.indexStrMap;
    }, function (k) {
        return function (__dict_Functor_641) {
            return function (mv2fMv) {
                return function (sm) {
                    var sm$prime = Data_StrMap.lookup(k)(sm);
                    var go = function (_682) {
                        if (_682 instanceof Data_Maybe.Nothing) {
                            return Data_Maybe.maybe(sm)(function (_) {
                                return Data_StrMap["delete"](k)(sm);
                            })(sm$prime);
                        };
                        if (_682 instanceof Data_Maybe.Just) {
                            return Data_StrMap.insert(k)(_682.value0)(sm);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude["<$>"](__dict_Functor_641)(go)(mv2fMv(sm$prime));
                };
            };
        };
    });
    var atSet = function (__dict_Ord_642) {
        return new At(function () {
            return Optic_Index.indexSet(__dict_Ord_642);
        }, function (v) {
            return function (__dict_Functor_643) {
                return function (mu2fMu) {
                    return function (s) {
                        var s$prime = (function () {
                            var _2431 = Data_Set.member(__dict_Ord_642)(v)(s);
                            if (_2431) {
                                return new Data_Maybe.Just(Prelude.unit);
                            };
                            if (!_2431) {
                                return Data_Maybe.Nothing.value;
                            };
                            throw new Error("Failed pattern match");
                        })();
                        var go = function (_680) {
                            if (_680 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.maybe(s)(function (_) {
                                    return Data_Set["delete"](__dict_Ord_642)(v)(s);
                                })(s$prime);
                            };
                            if (_680 instanceof Data_Maybe.Just) {
                                return Data_Set.insert(__dict_Ord_642)(v)(s);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](__dict_Functor_643)(go)(mu2fMu(s$prime));
                    };
                };
            };
        });
    };
    var atMaybe = new At(function () {
        return Optic_Index.indexMaybe;
    }, function (_679) {
        return function (__dict_Functor_644) {
            return Prelude["$"];
        };
    });
    var atMap = function (__dict_Ord_645) {
        return new At(function () {
            return Optic_Index.indexMap(__dict_Ord_645);
        }, function (k) {
            return function (__dict_Functor_646) {
                return function (mv2fMv) {
                    return function (m) {
                        var m$prime = Data_Map.lookup(__dict_Ord_645)(k)(m);
                        var go = function (_681) {
                            if (_681 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.maybe(m)(function (_) {
                                    return Data_Map["delete"](__dict_Ord_645)(k)(m);
                                })(m$prime);
                            };
                            if (_681 instanceof Data_Maybe.Just) {
                                return Data_Map.insert(__dict_Ord_645)(k)(_681.value0)(m);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](__dict_Functor_646)(go)(mv2fMv(m$prime));
                    };
                };
            };
        });
    };
    var atIdentity = new At(function () {
        return Optic_Index.indexIdentity;
    }, function (_676) {
        return function (__dict_Functor_647) {
            return function (_677) {
                return function (_678) {
                    return Prelude["<$>"](__dict_Functor_647)(Data_Maybe.maybe(_678)(Data_Identity.Identity))(_677(new Data_Maybe.Just(_678)));
                };
            };
        };
    });
    var at = function (dict) {
        return dict.at;
    };
    return {
        At: At, 
        at: at, 
        atIdentity: atIdentity, 
        atMaybe: atMaybe, 
        atSet: atSet, 
        atMap: atMap, 
        atStrMap: atStrMap
    };
})();
var PS = PS || {};
PS.Optic_Iso = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Data_Enum = PS.Data_Enum;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Optic_Internal_Iso = PS.Optic_Internal_Iso;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var withIso = function (stab) {
        return function (f) {
            var _2440 = stab(new Optic_Internal_Iso.Exchange(Prelude.id(Prelude.categoryArr), Data_Identity.Identity));
            return f(_2440.value0)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(_2440.value1));
        };
    };
    var under = function (stab) {
        return withIso(stab)(function (s2a) {
            return function (b2t) {
                return function (t2s) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(b2t)(Prelude[">>>"](Prelude.semigroupoidArr)(t2s)(s2a));
                };
            };
        });
    };
    
    /**
     *  iso :: forall s t a b. (s -> a) -> (b -> t) -> Iso s t a b
     */
    var iso = function (__dict_Profunctor_648) {
        return function (__dict_Functor_649) {
            return function (s2a) {
                return function (b2t) {
                    return Data_Profunctor.dimap(__dict_Profunctor_648)(s2a)(Prelude["<$>"](__dict_Functor_649)(b2t));
                };
            };
        };
    };
    var mapping = function (__dict_Functor_650) {
        return function (__dict_Functor_651) {
            return function (__dict_Profunctor_652) {
                return function (stab) {
                    return withIso(stab)(function (s2a) {
                        return function (b2t) {
                            return iso(__dict_Profunctor_652)(__dict_Functor_650)(Prelude["<$>"](__dict_Functor_650)(s2a))(Prelude["<$>"](__dict_Functor_651)(b2t));
                        };
                    });
                };
            };
        };
    };
    var uncurried = function (__dict_Functor_653) {
        return function (__dict_Profunctor_654) {
            return iso(__dict_Profunctor_654)(__dict_Functor_653)(Data_Tuple.uncurry)(Data_Tuple.curry);
        };
    };
    
    /**
     *  from :: forall s t a b. AnIso s t a b -> Iso b a t s
     */
    var from = function (__dict_Profunctor_655) {
        return function (__dict_Functor_656) {
            return function (stab) {
                return withIso(stab)(function (s2a) {
                    return function (b2t) {
                        return iso(__dict_Profunctor_655)(__dict_Functor_656)(b2t)(s2a);
                    };
                });
            };
        };
    };
    var flipped = function (__dict_Functor_657) {
        return function (__dict_Profunctor_658) {
            return iso(__dict_Profunctor_658)(__dict_Functor_657)(Prelude.flip)(Prelude.flip);
        };
    };
    var $$enum = function (__dict_Enum_659) {
        return function (__dict_Monoid_660) {
            return function (__dict_Functor_661) {
                return function (__dict_Profunctor_662) {
                    return iso(__dict_Profunctor_662)(__dict_Functor_661)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Enum.toEnum(__dict_Enum_659))(Data_Maybe.maybe(Data_Monoid.mempty(__dict_Monoid_660))(Prelude.id(Prelude.categoryArr))))(Data_Enum.fromEnum(__dict_Enum_659));
                };
            };
        };
    };
    var curried = function (__dict_Functor_663) {
        return function (__dict_Profunctor_664) {
            return iso(__dict_Profunctor_664)(__dict_Functor_663)(Data_Tuple.curry)(Data_Tuple.uncurry);
        };
    };
    var cloneIso = function (__dict_Profunctor_665) {
        return function (__dict_Functor_666) {
            return function (stab) {
                return withIso(stab)(iso(__dict_Profunctor_665)(__dict_Functor_666));
            };
        };
    };
    var auf = function (__dict_Profunctor_667) {
        return function (stab) {
            return withIso(stab)(function (s2a) {
                return function (b2t) {
                    return function (f) {
                        return function (prs) {
                            return function (e) {
                                return b2t(f(Data_Profunctor.rmap(__dict_Profunctor_667)(s2a)(prs))(e));
                            };
                        };
                    };
                };
            });
        };
    };
    var au = function (stab) {
        return withIso(stab)(function (s2a) {
            return function (b2t) {
                return function (f) {
                    return function (e) {
                        return s2a(f(b2t)(e));
                    };
                };
            };
        });
    };
    return {
        withIso: withIso, 
        under: under, 
        mapping: mapping, 
        iso: iso, 
        from: from, 
        "enum": $$enum, 
        cloneIso: cloneIso, 
        auf: auf, 
        au: au
    };
})();
var PS = PS || {};
PS.Optic_Prism = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Identity = PS.Data_Identity;
    var Optic_Internal_Prism = PS.Optic_Internal_Prism;
    var Optic_Types = PS.Optic_Types;
    var withPrism = function (stab) {
        return function (f) {
            var _2443 = stab(new Optic_Internal_Prism.Market(Data_Identity.Identity, Data_Either.Right.create));
            return f(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(_2443.value0))(Prelude[">>>"](Prelude.semigroupoidArr)(_2443.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Data_Either.Left.create))(Data_Either.Right.create)));
        };
    };
    var prism = function (__dict_Applicative_668) {
        return function (__dict_Choice_669) {
            return function (b2t) {
                return function (s2Eta) {
                    return function (pafb) {
                        return Data_Profunctor.dimap(__dict_Choice_669["__superclass_Data.Profunctor.Profunctor_0"]())(s2Eta)(Data_Either.either(Prelude.pure(__dict_Applicative_668))(Prelude["<$>"]((__dict_Applicative_668["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(b2t)))(Data_Profunctor_Choice.right(__dict_Choice_669)(pafb));
                    };
                };
            };
        };
    };
    var prism$prime = function (b2s) {
        return function (s2Ma) {
            return function (__dict_Applicative_670) {
                return function (__dict_Choice_671) {
                    return prism(__dict_Applicative_670)(__dict_Choice_671)(b2s)(function (s) {
                        return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(s2Ma(s));
                    });
                };
            };
        };
    };
    var nearly = function (x) {
        return function (p) {
            return function (__dict_Applicative_672) {
                return function (__dict_Choice_673) {
                    var guard = function (_683) {
                        if (_683) {
                            return new Data_Maybe.Just(Prelude.unit);
                        };
                        if (!_683) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match");
                    };
                    return prism$prime(Prelude["const"](x))(Prelude["<<<"](Prelude.semigroupoidArr)(guard)(p))(__dict_Applicative_672)(__dict_Choice_673);
                };
            };
        };
    };
    var only = function (__dict_Eq_674) {
        return function (x) {
            return function (__dict_Applicative_675) {
                return function (__dict_Choice_676) {
                    return nearly(x)(Prelude["=="](__dict_Eq_674)(x))(__dict_Applicative_675)(__dict_Choice_676);
                };
            };
        };
    };
    var matching = function (stab) {
        return withPrism(stab)(function (_) {
            return function (s) {
                return s;
            };
        });
    };
    var is = function (stab) {
        return function (s) {
            return Data_Either.either(Prelude["const"](false))(Prelude["const"](true))(matching(stab)(s));
        };
    };
    var isn$primet = function (stab) {
        return function (s) {
            return !is(stab)(s);
        };
    };
    var clonePrism = function (__dict_Applicative_677) {
        return function (__dict_Choice_678) {
            return function (stab) {
                return withPrism(stab)(prism(__dict_Applicative_677)(__dict_Choice_678));
            };
        };
    };
    return {
        withPrism: withPrism, 
        "prism'": prism$prime, 
        prism: prism, 
        only: only, 
        nearly: nearly, 
        matching: matching, 
        "isn't": isn$primet, 
        is: is, 
        clonePrism: clonePrism
    };
})();
var PS = PS || {};
PS.Optic_Setter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Contravariant = PS.Data_Contravariant;
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Optic_Internal_Setter = PS.Optic_Internal_Setter;
    var Data_Maybe = PS.Data_Maybe;
    var Optic_Types = PS.Optic_Types;
    var sets = function (__dict_Profunctor_679) {
        return function (__dict_Profunctor_680) {
            return function (__dict_Settable_681) {
                return function (pab2qst) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Internal_Setter.untaintedDot(__dict_Settable_681)(__dict_Profunctor_679))(Prelude[">>>"](Prelude.semigroupoidArr)(pab2qst)(Optic_Internal_Setter.taintedDot(__dict_Settable_681)(__dict_Profunctor_680)));
                };
            };
        };
    };
    var set$prime = function (sa) {
        return function (a) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(sa(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["const"](a))));
        };
    };
    var set = function (stab) {
        return function (b) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(stab(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["const"](b))));
        };
    };
    var $dot$tilde = set;
    var $qmark$tilde = function (stab) {
        return function (a) {
            return set(stab)(new Data_Maybe.Just(a));
        };
    };
    var over = function (__dict_Profunctor_682) {
        return function (pstab) {
            return function (pab) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(pstab(Data_Profunctor.rmap(__dict_Profunctor_682)(Data_Identity.Identity)(pab)));
            };
        };
    };
    
    /**
     *  Line noise time.
     */
    var $percent$tilde = function (__dict_Profunctor_683) {
        return over(__dict_Profunctor_683);
    };
    var $amp$amp$tilde = function (__dict_BoolLike_684) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["&&"](__dict_BoolLike_684))(a));
            };
        };
    };
    var $times$tilde = function (__dict_Num_685) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["*"](__dict_Num_685))(a));
            };
        };
    };
    var $plus$plus$tilde = function (__dict_Semigroup_686) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["++"](__dict_Semigroup_686))(a));
            };
        };
    };
    var $plus$tilde = function (__dict_Num_687) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["+"](__dict_Num_687))(a));
            };
        };
    };
    var $minus$tilde = function (__dict_Num_688) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["-"](__dict_Num_688))(a));
            };
        };
    };
    var $div$div$tilde = function (__dict_Num_689) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["/"](__dict_Num_689))(a));
            };
        };
    };
    var $less$greater$tilde = function (__dict_Semigroup_690) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["<>"](__dict_Semigroup_690))(a));
            };
        };
    };
    var $bar$bar$tilde = function (__dict_BoolLike_691) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["||"](__dict_BoolLike_691))(a));
            };
        };
    };
    var mapped = function (__dict_Functor_692) {
        return function (__dict_Settable_693) {
            return sets(Data_Profunctor.profunctorArr)(Data_Profunctor.profunctorArr)(__dict_Settable_693)(Prelude["<$>"](__dict_Functor_692));
        };
    };
    var contramapped = function (__dict_Contravariant_694) {
        return function (__dict_Settable_695) {
            return sets(Data_Profunctor.profunctorArr)(Data_Profunctor.profunctorArr)(__dict_Settable_695)(Data_Contravariant[">$<"](__dict_Contravariant_694));
        };
    };
    var argument = function (__dict_Profunctor_696) {
        return function (__dict_Settable_697) {
            return sets(Data_Profunctor.profunctorArr)(Data_Profunctor.profunctorArr)(__dict_Settable_697)(Data_Profunctor.lmap(__dict_Profunctor_696));
        };
    };
    return {
        sets: sets, 
        "set'": set$prime, 
        set: set, 
        over: over, 
        mapped: mapped, 
        contramapped: contramapped, 
        argument: argument, 
        "?~": $qmark$tilde, 
        "++~": $plus$plus$tilde, 
        "<>~": $less$greater$tilde, 
        "&&~": $amp$amp$tilde, 
        "||~": $bar$bar$tilde, 
        "//~": $div$div$tilde, 
        "*~": $times$tilde, 
        "-~": $minus$tilde, 
        "+~": $plus$tilde, 
        ".~": $dot$tilde, 
        "%~": $percent$tilde
    };
})();
var PS = PS || {};
PS.Optic_Core = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Getter = PS.Optic_Getter;
    var Optic_Lens = PS.Optic_Lens;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Setter = PS.Optic_Setter;
    var Optic_Types = PS.Optic_Types;
    var $bar$bar$tilde = Optic_Setter["||~"];
    var $up$dot = Optic_Getter["^."];
    var $qmark$tilde = Optic_Setter["?~"];
    var $qmark$qmark = Optic_Lens["??"];
    var $less$greater$tilde = Optic_Setter["<>~"];
    var $div$div$tilde = Optic_Setter["//~"];
    var $dot$tilde = Optic_Setter[".~"];
    var $dot$dot = Prelude["<<<"];
    var $minus$tilde = Optic_Setter["-~"];
    var $plus$tilde = Optic_Setter["+~"];
    var $plus$plus$tilde = Optic_Setter["++~"];
    var $times$tilde = Optic_Setter["*~"];
    var $amp$amp$tilde = Optic_Setter["&&~"];
    var $percent$tilde = Optic_Setter["%~"];
    var withPrism = Optic_Prism.withPrism;
    var view = Optic_Getter.view;
    var to = Optic_Getter.to;
    var sets = Optic_Setter.sets;
    var set$prime = Optic_Setter["set'"];
    var set = Optic_Setter.set;
    var prism$prime = Optic_Prism["prism'"];
    var prism = Optic_Prism.prism;
    var over = Optic_Setter.over;
    var only = Optic_Prism.only;
    var nearly = Optic_Prism.nearly;
    var matching = Optic_Prism.matching;
    var mapped = Optic_Setter.mapped;
    var lens = Optic_Lens.lens;
    var isn$primet = Optic_Prism["isn't"];
    var is = Optic_Prism.is;
    var contramapped = Optic_Setter.contramapped;
    
    /**
     *  Prism
     */
    var clonePrism = Optic_Prism.clonePrism;
    var argument = Optic_Setter.argument;
    return {
        sets: sets, 
        "set'": set$prime, 
        set: set, 
        over: over, 
        mapped: mapped, 
        contramapped: contramapped, 
        argument: argument, 
        "?~": $qmark$tilde, 
        "++~": $plus$plus$tilde, 
        "<>~": $less$greater$tilde, 
        "&&~": $amp$amp$tilde, 
        "||~": $bar$bar$tilde, 
        "//~": $div$div$tilde, 
        "*~": $times$tilde, 
        "-~": $minus$tilde, 
        "+~": $plus$tilde, 
        ".~": $dot$tilde, 
        "%~": $percent$tilde, 
        withPrism: withPrism, 
        "prism'": prism$prime, 
        prism: prism, 
        only: only, 
        nearly: nearly, 
        matching: matching, 
        "isn't": isn$primet, 
        is: is, 
        clonePrism: clonePrism, 
        lens: lens, 
        "??": $qmark$qmark, 
        "^.": $up$dot, 
        view: view, 
        to: to, 
        "..": $dot$dot
    };
})();
var PS = PS || {};
PS.Optic_Monad_Setter = (function () {
    "use strict";
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Optic_Setter = PS.Optic_Setter;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Profunctor = PS.Data_Profunctor;
    var Optic_Types = PS.Optic_Types;
    var $bar$bar$eq = function (__dict_Monad_698) {
        return function (__dict_MonadState_699) {
            return function (__dict_BoolLike_700) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_698)(__dict_MonadState_699)(Optic_Setter["||~"](__dict_BoolLike_700)(ssab)(b));
                    };
                };
            };
        };
    };
    var $qmark$eq = function (__dict_Monad_701) {
        return function (__dict_MonadState_702) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_701)(__dict_MonadState_702)(Optic_Setter["?~"](ssab)(b));
                };
            };
        };
    };
    var $less$greater$eq = function (__dict_Monad_703) {
        return function (__dict_MonadState_704) {
            return function (__dict_Semigroup_705) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_703)(__dict_MonadState_704)(Optic_Setter["<>~"](__dict_Semigroup_705)(ssab)(b));
                    };
                };
            };
        };
    };
    var $div$div$eq = function (__dict_Monad_706) {
        return function (__dict_MonadState_707) {
            return function (__dict_Num_708) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_706)(__dict_MonadState_707)(Optic_Setter["//~"](__dict_Num_708)(ssab)(b));
                    };
                };
            };
        };
    };
    var $dot$eq = function (__dict_Monad_709) {
        return function (__dict_MonadState_710) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_709)(__dict_MonadState_710)(Optic_Setter[".~"](ssab)(b));
                };
            };
        };
    };
    var $minus$eq = function (__dict_Monad_711) {
        return function (__dict_MonadState_712) {
            return function (__dict_Num_713) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_711)(__dict_MonadState_712)(Optic_Setter["-~"](__dict_Num_713)(ssab)(b));
                    };
                };
            };
        };
    };
    var $plus$eq = function (__dict_Monad_714) {
        return function (__dict_MonadState_715) {
            return function (__dict_Num_716) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_714)(__dict_MonadState_715)(Optic_Setter["+~"](__dict_Num_716)(ssab)(b));
                    };
                };
            };
        };
    };
    var $plus$plus$eq = function (__dict_Monad_717) {
        return function (__dict_MonadState_718) {
            return function (__dict_Semigroup_719) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_717)(__dict_MonadState_718)(Optic_Setter["++~"](__dict_Semigroup_719)(ssab)(b));
                    };
                };
            };
        };
    };
    var $times$eq = function (__dict_Monad_720) {
        return function (__dict_MonadState_721) {
            return function (__dict_Num_722) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_720)(__dict_MonadState_721)(Optic_Setter["*~"](__dict_Num_722)(ssab)(b));
                    };
                };
            };
        };
    };
    var $amp$amp$eq = function (__dict_Monad_723) {
        return function (__dict_MonadState_724) {
            return function (__dict_BoolLike_725) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_723)(__dict_MonadState_724)(Optic_Setter["&&~"](__dict_BoolLike_725)(ssab)(b));
                    };
                };
            };
        };
    };
    
    /**
     *  Line noise with State!
     */
    var $percent$eq = function (__dict_Monad_726) {
        return function (__dict_MonadState_727) {
            return function (__dict_Profunctor_728) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_726)(__dict_MonadState_727)(Optic_Setter["%~"](__dict_Profunctor_728)(ssab)(b));
                    };
                };
            };
        };
    };
    var assign = function (__dict_Monad_729) {
        return function (__dict_MonadState_730) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_729)(__dict_MonadState_730)(Optic_Setter.set(ssab)(b));
                };
            };
        };
    };
    return {
        "?=": $qmark$eq, 
        "++=": $plus$plus$eq, 
        "<>=": $less$greater$eq, 
        "&&=": $amp$amp$eq, 
        "||=": $bar$bar$eq, 
        "//=": $div$div$eq, 
        "*=": $times$eq, 
        "-=": $minus$eq, 
        "+=": $plus$eq, 
        ".=": $dot$eq, 
        "%=": $percent$eq, 
        assign: assign
    };
})();
var PS = PS || {};
PS.Optic_Extended = (function () {
    "use strict";
    var Optic_Equality = PS.Optic_Equality;
    var Optic_Fold = PS.Optic_Fold;
    var Optic_Iso = PS.Optic_Iso;
    var Optic_Monad = PS.Optic_Monad;
    var Optic_Monad_Getter = PS.Optic_Monad_Getter;
    var Optic_Monad_Setter = PS.Optic_Monad_Setter;
    var Optic_Review = PS.Optic_Review;
    var Optic_Traversal = PS.Optic_Traversal;
    var Prelude = PS.Prelude;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var $bar$bar$eq = Optic_Monad_Setter["||="];
    var $up$qmark = Optic_Fold["^?"];
    var $up$dot$dot = Optic_Fold["^.."];
    var $qmark$eq = Optic_Monad_Setter["?="];
    var $less$greater$eq = Optic_Monad_Setter["<>="];
    var $div$div$eq = Optic_Monad_Setter["//="];
    var $dot$eq = Optic_Monad_Setter[".="];
    var $minus$eq = Optic_Monad_Setter["-="];
    var $plus$eq = Optic_Monad_Setter["+="];
    var $plus$plus$eq = Optic_Monad_Setter["++="];
    var $times$eq = Optic_Monad_Setter["*="];
    var $amp$amp$eq = Optic_Monad_Setter["&&="];
    var $percent$eq = Optic_Monad_Setter["%="];
    var $hash$tilde = Optic_Monad["#~"];
    var $hash$hash = Optic_Review["##"];
    var withIso = Optic_Iso.withIso;
    
    /**
     *  Monad.Getter
     */
    var use = Optic_Monad_Getter.use;
    var unto = Optic_Review.unto;
    var under = Optic_Iso.under;
    var un = Optic_Review.un;
    var traverseOf = Optic_Traversal.traverseOf;
    var toListOf = Optic_Fold.toListOf;
    var simply = Optic_Equality.simply;
    
    /**
     *  Equality
     */
    var simple = Optic_Equality.simple;
    var sequenceOf = Optic_Traversal.sequenceOf;
    var reuses = Optic_Review.reuses;
    var reuse = Optic_Review.reuse;
    var relooks = Optic_Review.relooks;
    var relook = Optic_Review.relook;
    var re = Optic_Review.re;
    var mapping = Optic_Iso.mapping;
    var look = Optic_Monad_Getter.look;
    var iso = Optic_Iso.iso;
    var hasn$primet = Optic_Fold["hasn't"];
    var has = Optic_Fold.has;
    var from = Optic_Iso.from;
    var forOf = Optic_Traversal.forOf;
    var foldrOf = Optic_Fold.foldrOf;
    var foldlOf = Optic_Fold.foldlOf;
    var foldOf = Optic_Fold.foldOf;
    var foldMapOf = Optic_Fold.foldMapOf;
    var filtered = Optic_Fold.filtered;
    var $$enum = Optic_Iso["enum"];
    var cloneIso = Optic_Iso.cloneIso;
    
    /**
     *  Traversal
     */
    var both = Optic_Traversal.both;
    var auf = Optic_Iso.auf;
    
    /**
     *  Iso
     */
    var au = Optic_Iso.au;
    var assign = Optic_Monad_Setter.assign;
    return {
        traverseOf: traverseOf, 
        sequenceOf: sequenceOf, 
        forOf: forOf, 
        both: both, 
        un: un, 
        unto: unto, 
        relooks: relooks, 
        relook: relook, 
        reuses: reuses, 
        reuse: reuse, 
        re: re, 
        "##": $hash$hash, 
        assign: assign, 
        "?=": $qmark$eq, 
        "++=": $plus$plus$eq, 
        "<>=": $less$greater$eq, 
        "&&=": $amp$amp$eq, 
        "||=": $bar$bar$eq, 
        "//=": $div$div$eq, 
        "*=": $times$eq, 
        "-=": $minus$eq, 
        "+=": $plus$eq, 
        ".=": $dot$eq, 
        "%=": $percent$eq, 
        look: look, 
        use: use, 
        "#~": $hash$tilde, 
        withIso: withIso, 
        under: under, 
        mapping: mapping, 
        iso: iso, 
        from: from, 
        "enum": $$enum, 
        cloneIso: cloneIso, 
        auf: auf, 
        au: au, 
        toListOf: toListOf, 
        "hasn't": hasn$primet, 
        has: has, 
        foldrOf: foldrOf, 
        foldOf: foldOf, 
        foldMapOf: foldMapOf, 
        foldlOf: foldlOf, 
        filtered: filtered, 
        "^?": $up$qmark, 
        "^..": $up$dot$dot, 
        simply: simply, 
        simple: simple
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Core = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Fold = PS.Optic_Fold;
    var Optic_Core = PS.Optic_Core;
    var Optic_Extended = PS.Optic_Extended;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    function fromNull(_){return null;};
    function fromBoolean(b){return b;};
    function fromNumber(n){return n;};
    function fromString(s){return s;};
    function fromArray(a){return a;};
    function fromObject(o){return o;};
    var jsonNull = null;;
    function _stringify(j){ return JSON.stringify(j); };
    function _foldJson(isNull, isBool, isNum, isStr, isArr, isObj, j) {   if (j == null) return isNull(null);                                else if (typeof j === 'boolean') return isBool(j);                 else if (typeof j === 'number') return isNum(j);                   else if (typeof j === 'string') return isStr(j);                   else if (Object.prototype.toString.call(j) === '[object Array]') return isArr(j);    else return isObj(j);                                           };
    
    function _compare(EQ, GT, LT, a, b) {
      function isArray(a) {
        return Object.prototype.toString.call(a) === '[object Array]';
      }
      function keys(o) {
        var a = [];
        for (var k in o) {
          a.push(k);
        }
        return a;
      }

      if (a == null) {
        if (b == null) return EQ;
        else return LT;
      } else if (typeof a === 'boolean') {
        if (typeof b === 'boolean') {
          // boolean / boolean
          if (a === b) return EQ;
          else if (a == false) return LT;
          else return GT;
        } else if (b == null) return GT;
        else return LT;
      } else if (typeof a === 'number') {
        if (typeof b === 'number') {
          if (a === b) return EQ;
          else if (a < b) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else return LT;
      } else if (typeof a === 'string') {
        if (typeof b === 'string') {
          if (a === b) return EQ;
          else if (a < b) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else return LT;
      } else if (isArray(a)) {
        if (isArray(b)) {
          for (var i = 0; i < Math.min(a.length, b.length); i++) {
            var c = _compare(EQ, GT, LT, a[i], b[i]);

            if (c !== EQ) return c;
          }
          if (a.length === b.length) return EQ;
          else if (a.length < b.length) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else return LT;
      }
      else {
        if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else if (isArray(b)) return GT;
        else {
          var akeys = keys(a);
          var bkeys = keys(b);

          var keys = akeys.concat(bkeys).sort();

          for (var i = 0; i < keys.length; i++) {
            var k = keys[i];

            if (a[k] === undefined) return LT;
            else if (b[k] === undefined) return GT;

            var c = _compare(EQ, GT, LT, a[k], b[k]);

            if (c !== EQ) return c;
          }

          if (akeys.length === bkeys.length) return EQ;
          else if (akeys.length < bkeys.length) return LT;
          else return GT;
        }
      }
    }
    ;
    var verbJsonType = function (def) {
        return function (f) {
            return function (fold) {
                return fold(def)(f);
            };
        };
    };
    
    /**
     *  Decoding
     */
    var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var showJsonNull = new Prelude.Show(Prelude["const"]("null"));
    var showJson = new Prelude.Show(_stringify);
    var jsonZero = fromNumber(0);
    
    /**
     *  Default values
     */
    var jsonTrue = fromBoolean(true);
    var jsonSingletonObject = function (key) {
        return function (val) {
            return fromObject(Data_StrMap.singleton(key)(val));
        };
    };
    var jsonSingletonArray = function (j) {
        return fromArray([ j ]);
    };
    var jsonFalse = fromBoolean(false);
    var jsonEmptyString = fromString("");
    var jsonEmptyObject = fromObject(Data_StrMap.empty);
    var jsonEmptyArray = fromArray([  ]);
    
    /**
     *  Tests
     */
    var isJsonType = verbJsonType(false)(Prelude["const"](true));
    var foldJsonString = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isString = isJsonType(foldJsonString);
    var jsonStringL = function (__dict_Applicative_731) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_731)(Data_Profunctor_Choice.choiceArr)(isString));
    };
    var toString = toJsonType(foldJsonString);
    var stringL = function (__dict_Applicative_732) {
        return function (__dict_Choice_733) {
            return Optic_Prism["prism'"](fromString)(toString)(__dict_Applicative_732)(__dict_Choice_733);
        };
    };
    var foldJsonObject = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
            };
        };
    };
    var isObject = isJsonType(foldJsonObject);
    var jsonObjectL = function (__dict_Applicative_734) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_734)(Data_Profunctor_Choice.choiceArr)(isObject));
    };
    var toObject = toJsonType(foldJsonObject);
    var objectL = function (__dict_Applicative_735) {
        return function (__dict_Choice_736) {
            return Optic_Prism["prism'"](fromObject)(toObject)(__dict_Applicative_735)(__dict_Choice_736);
        };
    };
    var foldJsonNumber = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isNumber = isJsonType(foldJsonNumber);
    var jsonNumberL = function (__dict_Applicative_737) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_737)(Data_Profunctor_Choice.choiceArr)(isNumber));
    };
    var toNumber = toJsonType(foldJsonNumber);
    var numberL = function (__dict_Applicative_738) {
        return function (__dict_Choice_739) {
            return Optic_Prism["prism'"](fromNumber)(toNumber)(__dict_Applicative_738)(__dict_Choice_739);
        };
    };
    var foldJsonNull = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isNull = isJsonType(foldJsonNull);
    
    /**
     *  Traversals
     */
    var jsonNullL = function (__dict_Applicative_740) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_740)(Data_Profunctor_Choice.choiceArr)(isNull));
    };
    var toNull = toJsonType(foldJsonNull);
    
    /**
     *  Prisms
     */
    var nullL = function (__dict_Applicative_741) {
        return function (__dict_Choice_742) {
            return Optic_Prism["prism'"](fromNull)(toNull)(__dict_Applicative_741)(__dict_Choice_742);
        };
    };
    var foldJsonBoolean = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isBoolean = isJsonType(foldJsonBoolean);
    var jsonBooleanL = function (__dict_Applicative_743) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_743)(Data_Profunctor_Choice.choiceArr)(isBoolean));
    };
    var toBoolean = toJsonType(foldJsonBoolean);
    var foldJsonArray = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
            };
        };
    };
    var isArray = isJsonType(foldJsonArray);
    var jsonArrayL = function (__dict_Applicative_744) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_744)(Data_Profunctor_Choice.choiceArr)(isArray));
    };
    var toArray = toJsonType(foldJsonArray);
    
    /**
     *  Folds
     */
    var foldJson = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (json) {
                                return _foldJson(a, b, c, d, e, f, json);
                            };
                        };
                    };
                };
            };
        };
    };
    var ordJson = new Prelude.Ord(function () {
        return eqJson;
    }, function (a) {
        return function (b) {
            return _compare(Prelude.EQ.value, Prelude.GT.value, Prelude.LT.value, a, b);
        };
    });
    var eqJson = new Prelude.Eq(function (j) {
        return function (j$prime) {
            return !Prelude["=="](eqJson)(j)(j$prime);
        };
    }, function (j1) {
        return function (j2) {
            return Prelude["=="](Prelude.eqOrdering)(Prelude.compare(ordJson)(j1)(j2))(Prelude.EQ.value);
        };
    });
    var eqJNull = new Prelude.Eq(function (n1) {
        return function (n2) {
            return false;
        };
    }, function (n1) {
        return function (n2) {
            return true;
        };
    });
    var ordJNull = new Prelude.Ord(function () {
        return eqJNull;
    }, Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["const"])(Prelude["const"](Prelude.EQ.value)));
    var booleanL = function (__dict_Applicative_745) {
        return function (__dict_Choice_746) {
            return Optic_Prism["prism'"](fromBoolean)(toBoolean)(__dict_Applicative_745)(__dict_Choice_746);
        };
    };
    var arrayL = function (__dict_Applicative_747) {
        return function (__dict_Choice_748) {
            return Optic_Prism["prism'"](fromArray)(toArray)(__dict_Applicative_747)(__dict_Choice_748);
        };
    };
    return {
        toString: toString, 
        toObject: toObject, 
        toNumber: toNumber, 
        toNull: toNull, 
        toBoolean: toBoolean, 
        toArray: toArray, 
        stringL: stringL, 
        objectL: objectL, 
        numberL: numberL, 
        nullL: nullL, 
        jsonZero: jsonZero, 
        jsonTrue: jsonTrue, 
        jsonStringL: jsonStringL, 
        jsonSingletonObject: jsonSingletonObject, 
        jsonSingletonArray: jsonSingletonArray, 
        jsonObjectL: jsonObjectL, 
        jsonNumberL: jsonNumberL, 
        jsonNullL: jsonNullL, 
        jsonNull: jsonNull, 
        jsonFalse: jsonFalse, 
        jsonEmptyString: jsonEmptyString, 
        jsonEmptyObject: jsonEmptyObject, 
        jsonEmptyArray: jsonEmptyArray, 
        jsonBooleanL: jsonBooleanL, 
        jsonArrayL: jsonArrayL, 
        isString: isString, 
        isObject: isObject, 
        isNumber: isNumber, 
        isNull: isNull, 
        isJsonType: isJsonType, 
        isBoolean: isBoolean, 
        isArray: isArray, 
        fromString: fromString, 
        fromObject: fromObject, 
        fromNumber: fromNumber, 
        fromNull: fromNull, 
        fromBoolean: fromBoolean, 
        fromArray: fromArray, 
        foldJsonString: foldJsonString, 
        foldJsonObject: foldJsonObject, 
        foldJsonNumber: foldJsonNumber, 
        foldJsonNull: foldJsonNull, 
        foldJsonBoolean: foldJsonBoolean, 
        foldJsonArray: foldJsonArray, 
        booleanL: booleanL, 
        arrayL: arrayL, 
        foldJson: foldJson, 
        eqJNull: eqJNull, 
        ordJNull: ordJNull, 
        showJson: showJson, 
        showJsonNull: showJsonNull, 
        eqJson: eqJson, 
        ordJson: ordJson
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Encode = (function () {
    "use strict";
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Prelude = PS.Prelude;
    var Data_Char = PS.Data_Char;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Array = PS.Data_Array;
    var EncodeJson = function (encodeJson) {
        this.encodeJson = encodeJson;
    };
    var encodeJsonUnit = new EncodeJson(Prelude["const"](Data_Argonaut_Core.jsonNull));
    var encodeJsonJson = new EncodeJson(Prelude.id(Prelude.categoryArr));
    var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
    var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Core.fromNumber);
    var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
    var encodeJson = function (dict) {
        return dict.encodeJson;
    };
    var encodeJsonArray = function (__dict_EncodeJson_749) {
        return new EncodeJson(function (json) {
            return Data_Argonaut_Core.fromArray(Prelude["<$>"](Data_Array.functorArray)(encodeJson(__dict_EncodeJson_749))(json));
        });
    };
    var encodeJsonChar = new EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(encodeJson(encodeJsonJString))(Data_Char.charString));
    var encodeJsonEither = function (__dict_EncodeJson_750) {
        return function (__dict_EncodeJson_751) {
            return new EncodeJson(function (_686) {
                if (_686 instanceof Data_Either.Left) {
                    return encodeJson(__dict_EncodeJson_750)(_686.value0);
                };
                if (_686 instanceof Data_Either.Right) {
                    return encodeJson(__dict_EncodeJson_751)(_686.value0);
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var encodeJsonMaybe = function (__dict_EncodeJson_752) {
        return new EncodeJson(function (_684) {
            if (_684 instanceof Data_Maybe.Nothing) {
                return Data_Argonaut_Core.jsonNull;
            };
            if (_684 instanceof Data_Maybe.Just) {
                return encodeJson(__dict_EncodeJson_752)(_684.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var encodeJsonTuple = function (__dict_EncodeJson_753) {
        return function (__dict_EncodeJson_754) {
            return new EncodeJson(function (_685) {
                return encodeJson(encodeJsonArray(encodeJsonJson))([ encodeJson(__dict_EncodeJson_753)(_685.value0), encodeJson(__dict_EncodeJson_754)(_685.value1) ]);
            });
        };
    };
    var encodeMap = function (__dict_Ord_755) {
        return function (__dict_EncodeJson_756) {
            return function (__dict_EncodeJson_757) {
                return new EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(encodeJson(encodeJsonArray(encodeJsonTuple(__dict_EncodeJson_756)(__dict_EncodeJson_757))))(Data_Map.toList));
            };
        };
    };
    var encodeStrMap = function (__dict_EncodeJson_758) {
        return new EncodeJson(function (m) {
            return Data_Argonaut_Core.fromObject(Prelude["<$>"](Data_StrMap.functorStrMap)(encodeJson(__dict_EncodeJson_758))(m));
        });
    };
    return {
        EncodeJson: EncodeJson, 
        encodeJson: encodeJson, 
        encodeJsonMaybe: encodeJsonMaybe, 
        encodeJsonTuple: encodeJsonTuple, 
        encodeJsonEither: encodeJsonEither, 
        encodeJsonUnit: encodeJsonUnit, 
        encodeJsonJBoolean: encodeJsonJBoolean, 
        encodeJsonJNumber: encodeJsonJNumber, 
        encodeJsonJString: encodeJsonJString, 
        encodeJsonJson: encodeJsonJson, 
        encodeJsonChar: encodeJsonChar, 
        encodeJsonArray: encodeJsonArray, 
        encodeStrMap: encodeStrMap, 
        encodeMap: encodeMap
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Parser = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Either = PS.Data_Either;
    function _jsonParser(fail, succ, s) {   try { return succ(JSON.parse(s)); } catch (e) { return fail(e.message); }};
    var jsonParser = function (j) {
        return _jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
    };
    return {
        jsonParser: jsonParser
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Printer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Function = PS.Data_Function;
    var Printer = function (printJson) {
        this.printJson = printJson;
    };
    var printerString = new Printer(Prelude.show(Data_Argonaut_Core.showJson));
    var printJson = function (dict) {
        return dict.printJson;
    };
    return {
        Printer: Printer, 
        printJson: printJson, 
        printerString: printerString
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Decode = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_String = PS.Data_String;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Map = PS.Data_Map;
    var Data_Either = PS.Data_Either;
    var Optic_Prism = PS.Optic_Prism;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Optic_Index = PS.Optic_Index;
    var Optic_Core = PS.Optic_Core;
    var Optic_Extended = PS.Optic_Extended;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Char = PS.Data_Char;
    var Control_Alt = PS.Control_Alt;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var DecodeJson = function (decodeJson) {
        this.decodeJson = decodeJson;
    };
    var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Not a String."))(Data_Either.Right.create));
    var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number."))(Data_Either.Right.create));
    var decodeJsonNull = new DecodeJson(Data_Argonaut_Core.foldJsonNull(new Data_Either.Left("Not null."))(Prelude["const"](new Data_Either.Right(Prelude.unit))));
    var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
    var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Not a Boolean."))(Data_Either.Right.create));
    var decodeJson = function (dict) {
        return dict.decodeJson;
    };
    var decodeJsonChar = new DecodeJson(function (j) {
        var go = function (_688) {
            if (_688 instanceof Data_Maybe.Nothing) {
                return Data_Either.Left.create("Expected character but found: " + Prelude.show(Data_Argonaut_Core.showJson)(j));
            };
            if (_688 instanceof Data_Maybe.Just) {
                return new Data_Either.Right(_688.value0);
            };
            throw new Error("Failed pattern match");
        };
        return Prelude[">>="](Data_Either.bindEither)(Prelude["<$>"](Data_Either.functorEither)(Data_String.charAt(0))(decodeJson(decodeJsonString)(j)))(go);
    });
    var decodeJsonEither = function (__dict_DecodeJson_759) {
        return function (__dict_DecodeJson_760) {
            return new DecodeJson(function (j) {
                return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Left.create)(decodeJson(__dict_DecodeJson_759)(j)))(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Right.create)(decodeJson(__dict_DecodeJson_760)(j)));
            });
        };
    };
    var decodeJsonMaybe = function (__dict_DecodeJson_761) {
        return new DecodeJson(function (j) {
            return Control_Alt["<|>"](Data_Either.altEither)(decodeJson(decodeJsonMaybe(__dict_DecodeJson_761))(j))(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value));
        });
    };
    var decodeMaybe = function (__dict_DecodeJson_767) {
        return function (json) {
            return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(decodeJson(__dict_DecodeJson_767)(json));
        };
    };
    var decodeL = function (__dict_DecodeJson_768) {
        return function (__dict_EncodeJson_769) {
            return function (__dict_Applicative_770) {
                return function (__dict_Choice_771) {
                    return Optic_Prism["prism'"](Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_769))(decodeMaybe(__dict_DecodeJson_768))(__dict_Applicative_770)(__dict_Choice_771);
                };
            };
        };
    };
    var objectFieldL = function (__dict_DecodeJson_772) {
        return function (__dict_EncodeJson_773) {
            return function (key) {
                return function (__dict_Applicative_774) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(decodeL(__dict_DecodeJson_772)(__dict_EncodeJson_773)(__dict_Applicative_774)(Data_Profunctor_Choice.choiceArr))(Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexStrMap)(key)(__dict_Applicative_774))(Data_Argonaut_Core.objectL(__dict_Applicative_774)(Data_Profunctor_Choice.choiceArr)));
                };
            };
        };
    };
    var decodeStrMap = function (__dict_DecodeJson_775) {
        return new DecodeJson(function (json) {
            return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toObject(json))(function (_31) {
                return Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_775))(_31);
            }));
        });
    };
    var decodeArray = function (__dict_DecodeJson_776) {
        return new DecodeJson(function (json) {
            return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (_32) {
                return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_776))(_32);
            }));
        });
    };
    var decodeJsonTuple = function (__dict_DecodeJson_762) {
        return function (__dict_DecodeJson_763) {
            return new DecodeJson(function (j) {
                var f = function (_687) {
                    if (_687.length >= 2) {
                        var _2462 = _687.slice(2);
                        if (_2462.length === 0) {
                            return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeJson(__dict_DecodeJson_762)(_687[0])))(decodeJson(__dict_DecodeJson_763)(_687[1]));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude[">>="](Data_Either.bindEither)(decodeJson(decodeArray(decodeJsonJson))(j))(f);
            });
        };
    };
    var decodeMap = function (__dict_Ord_764) {
        return function (__dict_DecodeJson_765) {
            return function (__dict_DecodeJson_766) {
                return new DecodeJson(function (j) {
                    return Prelude["<$>"](Data_Either.functorEither)(Data_Map.fromList(__dict_Ord_764))(decodeJson(decodeArray(decodeJsonTuple(__dict_DecodeJson_765)(__dict_DecodeJson_766)))(j));
                });
            };
        };
    };
    var arrayIndexL = function (__dict_DecodeJson_777) {
        return function (__dict_EncodeJson_778) {
            return function (i) {
                return function (__dict_Applicative_779) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(decodeL(__dict_DecodeJson_777)(__dict_EncodeJson_778)(__dict_Applicative_779)(Data_Profunctor_Choice.choiceArr))(Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexArray)(i)(__dict_Applicative_779))(Data_Argonaut_Core.arrayL(__dict_Applicative_779)(Data_Profunctor_Choice.choiceArr)));
                };
            };
        };
    };
    return {
        DecodeJson: DecodeJson, 
        objectFieldL: objectFieldL, 
        arrayIndexL: arrayIndexL, 
        decodeL: decodeL, 
        decodeMaybe: decodeMaybe, 
        decodeJson: decodeJson, 
        decodeJsonMaybe: decodeJsonMaybe, 
        decodeJsonTuple: decodeJsonTuple, 
        decodeJsonEither: decodeJsonEither, 
        decodeJsonNull: decodeJsonNull, 
        decodeJsonBoolean: decodeJsonBoolean, 
        decodeJsonNumber: decodeJsonNumber, 
        decodeJsonString: decodeJsonString, 
        decodeJsonJson: decodeJsonJson, 
        decodeJsonChar: decodeJsonChar, 
        decodeStrMap: decodeStrMap, 
        decodeArray: decodeArray, 
        decodeMap: decodeMap
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Combinators = (function () {
    "use strict";
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var $tilde$greater = function (__dict_EncodeJson_780) {
        return function (_689) {
            return function (_690) {
                return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(_689.value0)(_689.value1))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_StrMap.insert(_689.value0)(_689.value1))(Data_Argonaut_Core.fromObject))(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_780)(_690));
            };
        };
    };
    var $qmark$greater$greater$eq = function (_691) {
        return function (_692) {
            if (_691 instanceof Data_Maybe.Just) {
                return new Data_Either.Right(_691.value0);
            };
            return Data_Either.Left.create("Couldn't decode " + _692);
        };
    };
    var $colon$eq = function (__dict_EncodeJson_781) {
        return function (k) {
            return function (v) {
                return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_781)(v));
            };
        };
    };
    
    /**
     *  obj .? "foo"
     */
    var $dot$qmark = function (__dict_DecodeJson_782) {
        return function (o) {
            return function (s) {
                return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Prelude.show(Prelude.showString)(s)))(Data_Argonaut_Decode.decodeJson(__dict_DecodeJson_782))(Data_StrMap.lookup(s)(o));
            };
        };
    };
    return {
        ".?": $dot$qmark, 
        "?>>=": $qmark$greater$greater$eq, 
        "~>": $tilde$greater, 
        ":=": $colon$eq
    };
})();
var PS = PS || {};
PS.Data_Argonaut_JCursor = (function () {
    "use strict";
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_StrMap = PS.Data_StrMap;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Monoid = PS.Data_Monoid;
    var Data_String = PS.Data_String;
    var Data_Either = PS.Data_Either;
    var jsonNull0 = null;;
    var JsonPrim = function (x) {
        return x;
    };
    var JCursorTop = (function () {
        function JCursorTop() {

        };
        JCursorTop.value = new JCursorTop();
        return JCursorTop;
    })();
    var JField = (function () {
        function JField(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        JField.create = function (value0) {
            return function (value1) {
                return new JField(value0, value1);
            };
        };
        return JField;
    })();
    var JIndex = (function () {
        function JIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        JIndex.create = function (value0) {
            return function (value1) {
                return new JIndex(value0, value1);
            };
        };
        return JIndex;
    })();
    var showJCursor = new Prelude.Show(function (_705) {
        if (_705 instanceof JCursorTop) {
            return "";
        };
        if (_705 instanceof JField) {
            return "." + (_705.value0 + Prelude.show(showJCursor)(_705.value1));
        };
        if (_705 instanceof JIndex) {
            return "[" + (Prelude.show(Prelude.showNumber)(_705.value0) + ("]" + Prelude.show(showJCursor)(_705.value1)));
        };
        throw new Error("Failed pattern match");
    });
    var semigroupJCursor = new Prelude.Semigroup(function (_710) {
        return function (_711) {
            if (_711 instanceof JCursorTop) {
                return _710;
            };
            if (_710 instanceof JCursorTop) {
                return _711;
            };
            if (_710 instanceof JField) {
                return new JField(_710.value0, Prelude["<>"](semigroupJCursor)(_710.value1)(_711));
            };
            if (_710 instanceof JIndex) {
                return new JIndex(_710.value0, Prelude["<>"](semigroupJCursor)(_710.value1)(_711));
            };
            throw new Error("Failed pattern match");
        };
    });
    var runJsonPrim = function (_693) {
        return _693;
    };
    var showJsonPrim = new Prelude.Show(function (p) {
        return runJsonPrim(p)(Prelude.show(Data_Argonaut_Core.showJsonNull))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.show(Prelude.showString));
    });
    var primToJson = function (p) {
        return runJsonPrim(p)(Data_Argonaut_Core.fromNull)(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString);
    };
    var primStr = function (v) {
        return function (_) {
            return function (__1) {
                return function (__2) {
                    return function (f) {
                        return f(v);
                    };
                };
            };
        };
    };
    var primNum = function (v) {
        return function (_) {
            return function (__1) {
                return function (f) {
                    return function (__2) {
                        return f(v);
                    };
                };
            };
        };
    };
    var primNull = function (f) {
        return function (_) {
            return function (__1) {
                return function (__2) {
                    return f(jsonNull0);
                };
            };
        };
    };
    var primBool = function (v) {
        return function (_) {
            return function (f) {
                return function (__1) {
                    return function (__2) {
                        return f(v);
                    };
                };
            };
        };
    };
    var toPrims = Data_Argonaut_Core.foldJson(Prelude["const"]([ new Data_Tuple.Tuple(JCursorTop.value, primNull) ]))(function (b) {
        return [ Data_Tuple.Tuple.create(JCursorTop.value)(primBool(b)) ];
    })(function (n) {
        return [ Data_Tuple.Tuple.create(JCursorTop.value)(primNum(n)) ];
    })(function (s) {
        return [ Data_Tuple.Tuple.create(JCursorTop.value)(primStr(s)) ];
    })(function (a) {
        var zipped = Data_Array.zipWith(Data_Tuple.Tuple.create)(Data_Array.range(0)(Data_Array.length(a) - 1))(a);
        var f = function (_701) {
            return Prelude["<$>"](Data_Array.functorArray)(function (t) {
                return new Data_Tuple.Tuple(new JIndex(_701.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
            })(toPrims(_701.value1));
        };
        return Prelude[">>="](Data_Array.bindArray)(zipped)(f);
    })(function (o) {
        var f = function (_702) {
            return Prelude["<$>"](Data_Array.functorArray)(function (t) {
                return new Data_Tuple.Tuple(new JField(_702.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
            })(toPrims(_702.value1));
        };
        return Prelude[">>="](Data_Array.bindArray)(Data_StrMap.toList(o))(f);
    });
    var monoidJCursor = new Data_Monoid.Monoid(function () {
        return semigroupJCursor;
    }, JCursorTop.value);
    var inferEmpty = function (_696) {
        if (_696 instanceof JCursorTop) {
            return Data_Argonaut_Core.jsonNull;
        };
        if (_696 instanceof JField) {
            return Data_Argonaut_Core.jsonEmptyObject;
        };
        if (_696 instanceof JIndex) {
            return Data_Argonaut_Core.jsonEmptyArray;
        };
        throw new Error("Failed pattern match");
    };
    var fail = function (__dict_Show_783) {
        return function (x) {
            return Data_Either.Left.create("Expected String or Number but found: " + Prelude.show(__dict_Show_783)(x));
        };
    };
    var eqJCursor = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqJCursor)(a)(b);
        };
    }, function (_706) {
        return function (_707) {
            if (_706 instanceof JCursorTop && _707 instanceof JCursorTop) {
                return true;
            };
            if (_706 instanceof JField && _707 instanceof JField) {
                return _706.value0 === _707.value0 && Prelude["=="](eqJCursor)(_706.value1)(_707.value1);
            };
            if (_706 instanceof JIndex && _707 instanceof JIndex) {
                return _706.value0 === _707.value0 && Prelude["=="](eqJCursor)(_706.value1)(_707.value1);
            };
            return false;
        };
    });
    var ordJCursor = new Prelude.Ord(function () {
        return eqJCursor;
    }, function (_708) {
        return function (_709) {
            if (_708 instanceof JCursorTop && _709 instanceof JCursorTop) {
                return Prelude.EQ.value;
            };
            if (_708 instanceof JCursorTop) {
                return Prelude.LT.value;
            };
            if (_709 instanceof JCursorTop) {
                return Prelude.GT.value;
            };
            if (_708 instanceof JField && _709 instanceof JIndex) {
                return Prelude.LT.value;
            };
            if (_708 instanceof JIndex && _709 instanceof JField) {
                return Prelude.GT.value;
            };
            if (_708 instanceof JField && _709 instanceof JField) {
                var _2513 = Prelude.compare(Prelude.ordString)(_708.value0)(_709.value0);
                if (_2513 instanceof Prelude.EQ) {
                    return Prelude.compare(ordJCursor)(_708.value1)(_709.value1);
                };
                return _2513;
            };
            if (_708 instanceof JIndex && _709 instanceof JIndex) {
                var _2518 = Prelude.compare(Prelude.ordNumber)(_708.value0)(_709.value0);
                if (_2518 instanceof Prelude.EQ) {
                    return Prelude.compare(ordJCursor)(_708.value1)(_709.value1);
                };
                return _2518;
            };
            throw new Error("Failed pattern match");
        };
    });
    var encodeJsonJCursor = new Data_Argonaut_Encode.EncodeJson((function () {
        var loop = function (_712) {
            if (_712 instanceof JCursorTop) {
                return [  ];
            };
            if (_712 instanceof JField) {
                return Prelude["<>"](Data_Array.semigroupArray)([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_712.value0) ])(loop(_712.value1));
            };
            if (_712 instanceof JIndex) {
                return Prelude["<>"](Data_Array.semigroupArray)([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_712.value0) ])(loop(_712.value1));
            };
            throw new Error("Failed pattern match");
        };
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJson)))(loop);
    })());
    var downIndex = function (i) {
        var downIndex$prime = function (_700) {
            if (_700 instanceof JCursorTop) {
                return new JIndex(i, JCursorTop.value);
            };
            if (_700 instanceof JField) {
                return new JField(_700.value0, downIndex$prime(_700.value1));
            };
            if (_700 instanceof JIndex) {
                return new JIndex(_700.value0, downIndex$prime(_700.value1));
            };
            throw new Error("Failed pattern match");
        };
        return downIndex$prime;
    };
    var downField = function (i) {
        var downField$prime = function (_699) {
            if (_699 instanceof JCursorTop) {
                return new JField(i, JCursorTop.value);
            };
            if (_699 instanceof JField) {
                return new JField(_699.value0, downField$prime(_699.value1));
            };
            if (_699 instanceof JIndex) {
                return new JIndex(_699.value0, downField$prime(_699.value1));
            };
            throw new Error("Failed pattern match");
        };
        return downField$prime;
    };
    var insideOut = function (_694) {
        if (_694 instanceof JCursorTop) {
            return JCursorTop.value;
        };
        if (_694 instanceof JField) {
            return downField(_694.value0)(insideOut(_694.value1));
        };
        if (_694 instanceof JIndex) {
            return downIndex(_694.value0)(insideOut(_694.value1));
        };
        throw new Error("Failed pattern match");
    };
    var decodeJsonJCursor = new Data_Argonaut_Decode.DecodeJson(function (j) {
        var loop = function (_713) {
            if (_713.length === 0) {
                return new Data_Either.Right(JCursorTop.value);
            };
            if (_713.length >= 1) {
                var _2546 = _713.slice(1);
                return Prelude[">>="](Data_Either.bindEither)(loop(_2546))(function (_33) {
                    return Data_Argonaut_Core.foldJson(fail(Data_Argonaut_Core.showJsonNull))(fail(Prelude.showBoolean))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude.flip(JIndex.create)(_33)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude.flip(JField.create)(_33)))(fail(Prelude.showArray(Data_Argonaut_Core.showJson)))(fail(Data_StrMap.showStrMap(Data_Argonaut_Core.showJson)))(_713[0]);
                });
            };
            throw new Error("Failed pattern match");
        };
        return Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonJson))(j))(loop);
    });
    var cursorSet = function (_697) {
        return function (_698) {
            if (_697 instanceof JCursorTop) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Prelude["const"](_698));
            };
            if (_697 instanceof JField) {
                var g = function (m) {
                    return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromObject)(Prelude.flip(Data_StrMap.insert(_697.value0))(m)))(cursorSet(_697.value1)(_698)(Data_Maybe.fromMaybe(inferEmpty(_697.value1))(Data_StrMap.lookup(_697.value0)(m))));
                };
                var d = Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromObject)(Data_StrMap.singleton(_697.value0)))(cursorSet(_697.value1)(_698)(inferEmpty(_697.value1)));
                return Data_Argonaut_Core.foldJson(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(g);
            };
            if (_697 instanceof JIndex) {
                var setArr = function (__copy_xs) {
                    return function (__copy_i_2) {
                        return function (__copy_v_3) {
                            var xs = __copy_xs;
                            var i_2 = __copy_i_2;
                            var v_3 = __copy_v_3;
                            tco: while (true) {
                                var len = Data_Array.length(xs);
                                var _2551 = i_2 < 0;
                                if (_2551) {
                                    return Data_Maybe.Nothing.value;
                                };
                                if (!_2551) {
                                    var _2552 = i_2 >= len;
                                    if (_2552) {
                                        var __tco_xs = Prelude["<>"](Data_Array.semigroupArray)(xs)(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](Data_Argonaut_Core.jsonNull))(Data_Array.range(0)(i_2 - len)));
                                        var __tco_i_2 = i_2;
                                        var __tco_v_3 = v_3;
                                        xs = __tco_xs;
                                        i_2 = __tco_i_2;
                                        v_3 = __tco_v_3;
                                        continue tco;
                                    };
                                    if (!_2552) {
                                        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Argonaut_Core.fromArray)(Data_Array.updateAt(i_2)(v_3)(xs));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
                var g = function (a) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(cursorSet(_697.value1)(_698)(Data_Maybe.fromMaybe(inferEmpty(_697.value1))(Data_Array["!!"](a)(_697.value0))))(setArr(a)(_697.value0));
                };
                var d = Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromArray)(Prelude.flip(Data_Array.updateAt(_697.value0))(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](Data_Argonaut_Core.jsonNull))(Data_Array.range(0)(_697.value0)))))(cursorSet(_697.value1)(_698)(inferEmpty(_697.value1)));
                return Data_Argonaut_Core.foldJson(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(g)(Prelude["const"](d));
            };
            throw new Error("Failed pattern match");
        };
    };
    var fromPrims = function (a) {
        var f = function (_703) {
            return function (_704) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(_703)(cursorSet(_704.value0)(runJsonPrim(_704.value1)(Data_Argonaut_Core.fromNull)(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString)));
            };
        };
        return Data_Foldable.foldlArray(f)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(inferEmpty)(Data_Tuple.fst))(Data_Array.head(a)))(a);
    };
    var cursorGet = function (_695) {
        if (_695 instanceof JCursorTop) {
            return Data_Maybe.Just.create;
        };
        if (_695 instanceof JField) {
            var g = function (m) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(Data_StrMap.lookup(_695.value0)(m))(cursorGet(_695.value1));
            };
            return Data_Argonaut_Core.foldJsonObject(Data_Maybe.Nothing.value)(g);
        };
        if (_695 instanceof JIndex) {
            var g = function (a) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](a)(_695.value0))(cursorGet(_695.value1));
            };
            return Data_Argonaut_Core.foldJsonArray(Data_Maybe.Nothing.value)(g);
        };
        throw new Error("Failed pattern match");
    };
    return {
        JsonPrim: JsonPrim, 
        JCursorTop: JCursorTop, 
        JField: JField, 
        JIndex: JIndex, 
        toPrims: toPrims, 
        runJsonPrim: runJsonPrim, 
        primToJson: primToJson, 
        primStr: primStr, 
        primNum: primNum, 
        primBool: primBool, 
        primNull: primNull, 
        insideOut: insideOut, 
        downIndex: downIndex, 
        downField: downField, 
        fromPrims: fromPrims, 
        cursorSet: cursorSet, 
        cursorGet: cursorGet, 
        showJCursor: showJCursor, 
        showJsonPrim: showJsonPrim, 
        eqJCursor: eqJCursor, 
        ordJCursor: ordJCursor, 
        semigroupJCursor: semigroupJCursor, 
        monoidJCursor: monoidJCursor, 
        encodeJsonJCursor: encodeJsonJCursor, 
        decodeJsonJCursor: decodeJsonJCursor
    };
})();
var PS = PS || {};
PS.Data_Argonaut = (function () {
    "use strict";
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    var Data_Argonaut_Printer = PS.Data_Argonaut_Printer;
    var Prelude = PS.Prelude;
    var $tilde$greater = Data_Argonaut_Combinators["~>"];
    var $qmark$greater$greater$eq = Data_Argonaut_Combinators["?>>="];
    var $colon$eq = Data_Argonaut_Combinators[":="];
    var $dot$qmark = Data_Argonaut_Combinators[".?"];
    var toString = Data_Argonaut_Core.toString;
    var toPrims = Data_Argonaut_JCursor.toPrims;
    var toObject = Data_Argonaut_Core.toObject;
    var toNumber = Data_Argonaut_Core.toNumber;
    
    /**
     *  Decoding
     */
    var toNull = Data_Argonaut_Core.toNull;
    var toBoolean = Data_Argonaut_Core.toBoolean;
    var toArray = Data_Argonaut_Core.toArray;
    var stringL = Data_Argonaut_Core.stringL;
    var runJsonPrim = Data_Argonaut_JCursor.runJsonPrim;
    
    /**
     *  | Printer
     */
    var printJson = Data_Argonaut_Printer.printJson;
    var primToJson = Data_Argonaut_JCursor.primToJson;
    var primStr = Data_Argonaut_JCursor.primStr;
    var primNum = Data_Argonaut_JCursor.primNum;
    
    /**
     *  Prims
     */
    var primNull = Data_Argonaut_JCursor.primNull;
    var primBool = Data_Argonaut_JCursor.primBool;
    var objectL = Data_Argonaut_Core.objectL;
    var objectFieldL = Data_Argonaut_Decode.objectFieldL;
    var numberL = Data_Argonaut_Core.numberL;
    
    /**
     *  Prisms
     */
    var nullL = Data_Argonaut_Core.nullL;
    var jsonZero = Data_Argonaut_Core.jsonZero;
    
    /**
     *  Defaults
     */
    var jsonTrue = Data_Argonaut_Core.jsonTrue;
    var jsonStringL = Data_Argonaut_Core.jsonStringL;
    var jsonSingletonObject = Data_Argonaut_Core.jsonSingletonObject;
    var jsonSingletonArray = Data_Argonaut_Core.jsonSingletonArray;
    
    /**
     *  | Parser
     */
    var jsonParser = Data_Argonaut_Parser.jsonParser;
    var jsonObjectL = Data_Argonaut_Core.jsonObjectL;
    var jsonNumberL = Data_Argonaut_Core.jsonNumberL;
    
    /**
     *  Traversals
     */
    var jsonNullL = Data_Argonaut_Core.jsonNullL;
    var jsonNull = Data_Argonaut_Core.jsonNull;
    var jsonFalse = Data_Argonaut_Core.jsonFalse;
    var jsonEmptyString = Data_Argonaut_Core.jsonEmptyString;
    var jsonEmptyObject = Data_Argonaut_Core.jsonEmptyObject;
    var jsonEmptyArray = Data_Argonaut_Core.jsonEmptyArray;
    var jsonBooleanL = Data_Argonaut_Core.jsonBooleanL;
    var jsonArrayL = Data_Argonaut_Core.jsonArrayL;
    var isString = Data_Argonaut_Core.isString;
    var isObject = Data_Argonaut_Core.isObject;
    var isNumber = Data_Argonaut_Core.isNumber;
    
    /**
     *  Tests
     */
    var isNull = Data_Argonaut_Core.isNull;
    var isBoolean = Data_Argonaut_Core.isBoolean;
    var isArray = Data_Argonaut_Core.isArray;
    var insideOut = Data_Argonaut_JCursor.insideOut;
    var fromString = Data_Argonaut_Core.fromString;
    var fromPrims = Data_Argonaut_JCursor.fromPrims;
    var fromObject = Data_Argonaut_Core.fromObject;
    var fromNumber = Data_Argonaut_Core.fromNumber;
    
    /**
     *  Encoding
     */
    var fromNull = Data_Argonaut_Core.fromNull;
    var fromBoolean = Data_Argonaut_Core.fromBoolean;
    var fromArray = Data_Argonaut_Core.fromArray;
    var foldJsonString = Data_Argonaut_Core.foldJsonString;
    var foldJsonObject = Data_Argonaut_Core.foldJsonObject;
    var foldJsonNumber = Data_Argonaut_Core.foldJsonNumber;
    var foldJsonNull = Data_Argonaut_Core.foldJsonNull;
    var foldJsonBoolean = Data_Argonaut_Core.foldJsonBoolean;
    var foldJsonArray = Data_Argonaut_Core.foldJsonArray;
    
    /**
     *  Folds
     */
    var foldJson = Data_Argonaut_Core.foldJson;
    
    /**
     *  | Encode
     */
    var encodeJson = Data_Argonaut_Encode.encodeJson;
    var downIndex = Data_Argonaut_JCursor.downIndex;
    var downField = Data_Argonaut_JCursor.downField;
    var decodeMaybe = Data_Argonaut_Decode.decodeMaybe;
    
    /**
     *  Lenses
     */
    var decodeL = Data_Argonaut_Decode.decodeL;
    
    /**
     *  | Decode
     */
    var decodeJson = Data_Argonaut_Decode.decodeJson;
    var cursorSet = Data_Argonaut_JCursor.cursorSet;
    
    /**
     *  Cursors
     */
    var cursorGet = Data_Argonaut_JCursor.cursorGet;
    var booleanL = Data_Argonaut_Core.booleanL;
    var arrayL = Data_Argonaut_Core.arrayL;
    var arrayIndexL = Data_Argonaut_Decode.arrayIndexL;
    return {
        printJson: printJson, 
        jsonParser: jsonParser, 
        encodeJson: encodeJson, 
        objectFieldL: objectFieldL, 
        arrayIndexL: arrayIndexL, 
        decodeL: decodeL, 
        decodeMaybe: decodeMaybe, 
        decodeJson: decodeJson, 
        jsonObjectL: jsonObjectL, 
        jsonArrayL: jsonArrayL, 
        jsonStringL: jsonStringL, 
        jsonNumberL: jsonNumberL, 
        jsonBooleanL: jsonBooleanL, 
        jsonNullL: jsonNullL, 
        objectL: objectL, 
        arrayL: arrayL, 
        stringL: stringL, 
        numberL: numberL, 
        booleanL: booleanL, 
        nullL: nullL, 
        jsonSingletonObject: jsonSingletonObject, 
        jsonSingletonArray: jsonSingletonArray, 
        jsonEmptyObject: jsonEmptyObject, 
        jsonEmptyArray: jsonEmptyArray, 
        jsonEmptyString: jsonEmptyString, 
        jsonNull: jsonNull, 
        jsonZero: jsonZero, 
        jsonFalse: jsonFalse, 
        jsonTrue: jsonTrue, 
        fromObject: fromObject, 
        fromArray: fromArray, 
        fromString: fromString, 
        fromNumber: fromNumber, 
        fromBoolean: fromBoolean, 
        fromNull: fromNull, 
        toObject: toObject, 
        toArray: toArray, 
        toString: toString, 
        toNumber: toNumber, 
        toBoolean: toBoolean, 
        toNull: toNull, 
        isObject: isObject, 
        isArray: isArray, 
        isString: isString, 
        isNumber: isNumber, 
        isBoolean: isBoolean, 
        isNull: isNull, 
        foldJsonObject: foldJsonObject, 
        foldJsonArray: foldJsonArray, 
        foldJsonString: foldJsonString, 
        foldJsonNumber: foldJsonNumber, 
        foldJsonBoolean: foldJsonBoolean, 
        foldJsonNull: foldJsonNull, 
        foldJson: foldJson, 
        ".?": $dot$qmark, 
        "?>>=": $qmark$greater$greater$eq, 
        "~>": $tilde$greater, 
        ":=": $colon$eq
    };
})();
var PS = PS || {};
PS.Data_Json_JSemantic = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String_Regex = PS.Data_String_Regex;
    var Math = PS.Math;
    var Data_Date = PS.Data_Date;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Maybe = PS.Data_Maybe;
    function parsePercent (s) {
  return o.replace("%", "") * 1};
    function parseCurrency (s) {
  return s.replace(",", "").replace("$", "") * 1};
    var Integral = (function () {
        function Integral(value0) {
            this.value0 = value0;
        };
        Integral.create = function (value0) {
            return new Integral(value0);
        };
        return Integral;
    })();
    var Fractional = (function () {
        function Fractional(value0) {
            this.value0 = value0;
        };
        Fractional.create = function (value0) {
            return new Fractional(value0);
        };
        return Fractional;
    })();
    var Date = (function () {
        function Date(value0) {
            this.value0 = value0;
        };
        Date.create = function (value0) {
            return new Date(value0);
        };
        return Date;
    })();
    var DateTime = (function () {
        function DateTime(value0) {
            this.value0 = value0;
        };
        DateTime.create = function (value0) {
            return new DateTime(value0);
        };
        return DateTime;
    })();
    var Time = (function () {
        function Time(value0) {
            this.value0 = value0;
        };
        Time.create = function (value0) {
            return new Time(value0);
        };
        return Time;
    })();
    var Interval = (function () {
        function Interval(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Interval.create = function (value0) {
            return function (value1) {
                return new Interval(value0, value1);
            };
        };
        return Interval;
    })();
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var Bool = (function () {
        function Bool(value0) {
            this.value0 = value0;
        };
        Bool.create = function (value0) {
            return new Bool(value0);
        };
        return Bool;
    })();
    var Percent = (function () {
        function Percent(value0) {
            this.value0 = value0;
        };
        Percent.create = function (value0) {
            return new Percent(value0);
        };
        return Percent;
    })();
    var Currency = (function () {
        function Currency(value0) {
            this.value0 = value0;
        };
        Currency.create = function (value0) {
            return new Currency(value0);
        };
        return Currency;
    })();
    var NA = (function () {
        function NA() {

        };
        NA.value = new NA();
        return NA;
    })();
    var showSemantic = new Prelude.Show(function (_715) {
        if (_715 instanceof Integral) {
            return Prelude.show(Prelude.showNumber)(_715.value0);
        };
        if (_715 instanceof Fractional) {
            return Prelude.show(Prelude.showNumber)(_715.value0);
        };
        if (_715 instanceof Date) {
            return Prelude.show(Data_Date.showDate)(_715.value0);
        };
        if (_715 instanceof DateTime) {
            return Prelude.show(Data_Date.showDate)(_715.value0);
        };
        if (_715 instanceof Time) {
            return Prelude.show(Data_Date.showDate)(_715.value0);
        };
        if (_715 instanceof Interval) {
            return Prelude.show(Data_Date.showDate)(_715.value0) + (" - " + Prelude.show(Data_Date.showDate)(_715.value1));
        };
        if (_715 instanceof Text) {
            return _715.value0;
        };
        if (_715 instanceof Bool) {
            return Prelude.show(Prelude.showBoolean)(_715.value0);
        };
        if (_715 instanceof Percent) {
            return Prelude.show(Prelude.showNumber)(_715.value0) + "%";
        };
        if (_715 instanceof Currency) {
            return "$" + Prelude.show(Prelude.showNumber)(_715.value0);
        };
        if (_715 instanceof NA) {
            return "";
        };
        throw new Error("Failed pattern match");
    });
    var noFlags = {
        global: false, 
        ignoreCase: false, 
        multiline: false, 
        sticky: false, 
        unicode: false
    };
    var percentRegex = Data_String_Regex.test(Data_String_Regex.regex("^\\d+[%]$")(noFlags));
    var currencyRegex = Data_String_Regex.test(Data_String_Regex.regex("^\\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?$")(noFlags));
    var analyzeStr = function (s) {
        var _2576 = Data_Date.fromString(s);
        if (_2576 instanceof Data_Maybe.Nothing) {
            var _2577 = percentRegex(s);
            if (_2577) {
                return Percent.create(parsePercent(s));
            };
            if (!_2577) {
                var _2578 = currencyRegex(s);
                if (_2578) {
                    return Currency.create(parseCurrency(s));
                };
                if (!_2578) {
                    return new Text(s);
                };
                throw new Error("Failed pattern match");
            };
            throw new Error("Failed pattern match");
        };
        if (_2576 instanceof Data_Maybe.Just) {
            return new DateTime(_2576.value0);
        };
        throw new Error("Failed pattern match");
    };
    var analyzeNum = function (_714) {
        if (Math.floor(_714) === _714) {
            return new Integral(_714);
        };
        return new Fractional(_714);
    };
    var toSemantic = function (p) {
        return Data_Argonaut_JCursor.runJsonPrim(p)(Prelude["const"](NA.value))(Bool.create)(analyzeNum)(analyzeStr);
    };
    return {
        Integral: Integral, 
        Fractional: Fractional, 
        Date: Date, 
        DateTime: DateTime, 
        Time: Time, 
        Interval: Interval, 
        Text: Text, 
        Bool: Bool, 
        Percent: Percent, 
        Currency: Currency, 
        NA: NA, 
        toSemantic: toSemantic, 
        showSemantic: showSemantic
    };
})();
var PS = PS || {};
PS.Text_Smolder_Markup = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Apply = PS.Control_Apply;
    var Data_Array = PS.Data_Array;
    var Attr = (function () {
        function Attr(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Attr.create = function (value0) {
            return function (value1) {
                return new Attr(value0, value1);
            };
        };
        return Attr;
    })();
    var Attribute = (function () {
        function Attribute(value0) {
            this.value0 = value0;
        };
        Attribute.create = function (value0) {
            return new Attribute(value0);
        };
        return Attribute;
    })();
    var Element = (function () {
        function Element(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Element(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Element;
    })();
    var Content = (function () {
        function Content(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Content.create = function (value0) {
            return function (value1) {
                return new Content(value0, value1);
            };
        };
        return Content;
    })();
    var Return = (function () {
        function Return(value0) {
            this.value0 = value0;
        };
        Return.create = function (value0) {
            return new Return(value0);
        };
        return Return;
    })();
    var Attributable = function ($bang) {
        this["!"] = $bang;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var $bang$qmark = function (__dict_Attributable_784) {
        return function (h) {
            return function (c) {
                return function (a) {
                    if (c) {
                        return $bang(__dict_Attributable_784)(h)(a);
                    };
                    if (!c) {
                        return h;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var text = function (s) {
        return new Content(s, new Return(Prelude.unit));
    };
    var semigroupAttribute = new Prelude.Semigroup(function (_720) {
        return function (_721) {
            return new Attribute(Prelude["<>"](Data_Array.semigroupArray)(_720.value0)(_721.value0));
        };
    });
    var parent = function (el) {
        return function (kids) {
            return new Element(el, new Data_Maybe.Just(kids), [  ], new Return(Prelude.unit));
        };
    };
    var monoidAttribute = new Data_Monoid.Monoid(function () {
        return semigroupAttribute;
    }, new Attribute(Data_Monoid.mempty(Data_Monoid.monoidArray)));
    var leaf = function (el) {
        return new Element(el, Data_Maybe.Nothing.value, [  ], new Return(Prelude.unit));
    };
    var functorMarkupM = new Prelude.Functor(function (_716) {
        return function (_717) {
            if (_717 instanceof Element) {
                return new Element(_717.value0, _717.value1, _717.value2, Prelude["<$>"](functorMarkupM)(_716)(_717.value3));
            };
            if (_717 instanceof Content) {
                return new Content(_717.value0, Prelude["<$>"](functorMarkupM)(_716)(_717.value1));
            };
            if (_717 instanceof Return) {
                return new Return(_716(_717.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var attribute = function (key) {
        return function (value) {
            return new Attribute([ new Attr(key, value) ]);
        };
    };
    var attributableMarkupM = new Attributable(function (_722) {
        return function (_723) {
            if (_722 instanceof Element) {
                return new Element(_722.value0, _722.value1, Prelude["<>"](Data_Array.semigroupArray)(_722.value2)(_723.value0), _722.value3);
            };
            throw new Error("Failed pattern match");
        };
    });
    var attributableMarkupMF = new Attributable(function (k) {
        return function (xs) {
            return function (m) {
                return $bang(attributableMarkupM)(k(m))(xs);
            };
        };
    });
    var monadMarkupM = new Prelude.Monad(function () {
        return applicativeMarkupM;
    }, function () {
        return bindMarkupM;
    });
    var bindMarkupM = new Prelude.Bind(function (_718) {
        return function (_719) {
            if (_718 instanceof Element) {
                return new Element(_718.value0, _718.value1, _718.value2, Prelude[">>="](bindMarkupM)(_718.value3)(_719));
            };
            if (_718 instanceof Content) {
                return new Content(_718.value0, Prelude[">>="](bindMarkupM)(_718.value1)(_719));
            };
            if (_718 instanceof Return) {
                return _719(_718.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMarkupM;
    });
    var applyMarkupM = new Prelude.Apply(Prelude.ap(monadMarkupM), function () {
        return functorMarkupM;
    });
    var applicativeMarkupM = new Prelude.Applicative(function () {
        return applyMarkupM;
    }, Return.create);
    var semigroupMarkupM = new Prelude.Semigroup(function (x) {
        return function (y) {
            return Control_Apply["*>"](applyMarkupM)(x)(y);
        };
    });
    var monoidMarkup = new Data_Monoid.Monoid(function () {
        return semigroupMarkupM;
    }, new Return(Prelude.unit));
    return {
        Attr: Attr, 
        Element: Element, 
        Content: Content, 
        Return: Return, 
        Attributable: Attributable, 
        "!?": $bang$qmark, 
        "!": $bang, 
        attribute: attribute, 
        text: text, 
        leaf: leaf, 
        parent: parent, 
        semigroupMarkupM: semigroupMarkupM, 
        monoidMarkup: monoidMarkup, 
        functorMarkupM: functorMarkupM, 
        applyMarkupM: applyMarkupM, 
        applicativeMarkupM: applicativeMarkupM, 
        bindMarkupM: bindMarkupM, 
        monadMarkupM: monadMarkupM, 
        semigroupAttribute: semigroupAttribute, 
        monoidAttribute: monoidAttribute, 
        attributableMarkupM: attributableMarkupM, 
        attributableMarkupMF: attributableMarkupMF
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var wbr = Text_Smolder_Markup.leaf("wbr");
    var video = Text_Smolder_Markup.parent("video");
    var $$var = Text_Smolder_Markup.parent("var");
    var ul = Text_Smolder_Markup.parent("ul");
    var track = Text_Smolder_Markup.leaf("track");
    var tr = Text_Smolder_Markup.parent("tr");
    var title = Text_Smolder_Markup.parent("title");
    var time = Text_Smolder_Markup.parent("time");
    var thead = Text_Smolder_Markup.parent("thead");
    var th = Text_Smolder_Markup.parent("th");
    var tfoot = Text_Smolder_Markup.parent("tfoot");
    var textarea = Text_Smolder_Markup.parent("textarea");
    var td = Text_Smolder_Markup.parent("td");
    var tbody = Text_Smolder_Markup.parent("tbody");
    var table = Text_Smolder_Markup.parent("table");
    var sup = Text_Smolder_Markup.parent("sup");
    var summary = Text_Smolder_Markup.parent("summary");
    var sub = Text_Smolder_Markup.parent("sub");
    var style = Text_Smolder_Markup.parent("style");
    var strong = Text_Smolder_Markup.parent("strong");
    var span = Text_Smolder_Markup.parent("span");
    var source = Text_Smolder_Markup.leaf("source");
    var small = Text_Smolder_Markup.parent("small");
    var select = Text_Smolder_Markup.parent("select");
    var section = Text_Smolder_Markup.parent("section");
    var script = Text_Smolder_Markup.parent("script");
    var samp = Text_Smolder_Markup.parent("samp");
    var ruby = Text_Smolder_Markup.parent("ruby");
    var rt = Text_Smolder_Markup.parent("rt");
    var rp = Text_Smolder_Markup.parent("rp");
    var q = Text_Smolder_Markup.parent("q");
    var progress = Text_Smolder_Markup.parent("progress");
    var pre = Text_Smolder_Markup.parent("pre");
    var param = Text_Smolder_Markup.leaf("param");
    var p = Text_Smolder_Markup.parent("p");
    var output = Text_Smolder_Markup.parent("output");
    var option = Text_Smolder_Markup.parent("option");
    var optgroup = Text_Smolder_Markup.parent("optgroup");
    var ol = Text_Smolder_Markup.parent("ol");
    var object = Text_Smolder_Markup.parent("object");
    var noscript = Text_Smolder_Markup.parent("noscript");
    var nav = Text_Smolder_Markup.parent("nav");
    var meter = Text_Smolder_Markup.parent("meter");
    var meta = Text_Smolder_Markup.leaf("meta");
    var menuitem = Text_Smolder_Markup.leaf("menuitem");
    var menu = Text_Smolder_Markup.parent("menu");
    var mark = Text_Smolder_Markup.parent("mark");
    var map = Text_Smolder_Markup.parent("map");
    var link = Text_Smolder_Markup.leaf("link");
    var li = Text_Smolder_Markup.parent("li");
    var legend = Text_Smolder_Markup.parent("legend");
    var label = Text_Smolder_Markup.parent("label");
    var keygen = Text_Smolder_Markup.leaf("keygen");
    var kbd = Text_Smolder_Markup.parent("kbd");
    var ins = Text_Smolder_Markup.parent("ins");
    var input = Text_Smolder_Markup.leaf("input");
    var img = Text_Smolder_Markup.leaf("img");
    var iframe = Text_Smolder_Markup.parent("iframe");
    var i = Text_Smolder_Markup.parent("i");
    var html = Text_Smolder_Markup.parent("html");
    var hr = Text_Smolder_Markup.leaf("hr");
    var hgroup = Text_Smolder_Markup.parent("hgroup");
    var header = Text_Smolder_Markup.parent("header");
    var head = Text_Smolder_Markup.parent("head");
    var h6 = Text_Smolder_Markup.parent("h6");
    var h5 = Text_Smolder_Markup.parent("h5");
    var h4 = Text_Smolder_Markup.parent("h4");
    var h3 = Text_Smolder_Markup.parent("h3");
    var h2 = Text_Smolder_Markup.parent("h2");
    var h1 = Text_Smolder_Markup.parent("h1");
    var form = Text_Smolder_Markup.parent("form");
    var footer = Text_Smolder_Markup.parent("footer");
    var figure = Text_Smolder_Markup.parent("figure");
    var figcaption = Text_Smolder_Markup.parent("figcaption");
    var fieldset = Text_Smolder_Markup.parent("fieldset");
    var embed = Text_Smolder_Markup.leaf("embed");
    var em = Text_Smolder_Markup.parent("em");
    var dt = Text_Smolder_Markup.parent("dt");
    var dl = Text_Smolder_Markup.parent("dl");
    var div = Text_Smolder_Markup.parent("div");
    var dfn = Text_Smolder_Markup.parent("dfn");
    var details = Text_Smolder_Markup.parent("details");
    var del = Text_Smolder_Markup.parent("del");
    var dd = Text_Smolder_Markup.parent("dd");
    var datalist = Text_Smolder_Markup.parent("datalist");
    var command = Text_Smolder_Markup.parent("command");
    var colgroup = Text_Smolder_Markup.parent("colgroup");
    var col = Text_Smolder_Markup.leaf("col");
    var code = Text_Smolder_Markup.parent("code");
    var cite = Text_Smolder_Markup.parent("cite");
    var caption = Text_Smolder_Markup.parent("caption");
    var canvas = Text_Smolder_Markup.parent("canvas");
    var button = Text_Smolder_Markup.parent("button");
    var br = Text_Smolder_Markup.leaf("br");
    var body = Text_Smolder_Markup.parent("body");
    var blockquote = Text_Smolder_Markup.parent("blockquote");
    var bdo = Text_Smolder_Markup.parent("bdo");
    var base = Text_Smolder_Markup.leaf("base");
    var b = Text_Smolder_Markup.parent("b");
    var audio = Text_Smolder_Markup.parent("audio");
    var aside = Text_Smolder_Markup.parent("aside");
    var article = Text_Smolder_Markup.parent("article");
    var area = Text_Smolder_Markup.leaf("area");
    var address = Text_Smolder_Markup.parent("address");
    var abbr = Text_Smolder_Markup.parent("abbr");
    var a = Text_Smolder_Markup.parent("a");
    return {
        wbr: wbr, 
        track: track, 
        source: source, 
        param: param, 
        meta: meta, 
        menuitem: menuitem, 
        link: link, 
        keygen: keygen, 
        input: input, 
        img: img, 
        hr: hr, 
        embed: embed, 
        col: col, 
        br: br, 
        base: base, 
        area: area, 
        video: video, 
        "var": $$var, 
        ul: ul, 
        tr: tr, 
        title: title, 
        time: time, 
        thead: thead, 
        th: th, 
        tfoot: tfoot, 
        textarea: textarea, 
        td: td, 
        tbody: tbody, 
        table: table, 
        sup: sup, 
        summary: summary, 
        sub: sub, 
        style: style, 
        strong: strong, 
        span: span, 
        small: small, 
        select: select, 
        section: section, 
        script: script, 
        samp: samp, 
        ruby: ruby, 
        rt: rt, 
        rp: rp, 
        q: q, 
        progress: progress, 
        pre: pre, 
        p: p, 
        output: output, 
        option: option, 
        optgroup: optgroup, 
        ol: ol, 
        object: object, 
        noscript: noscript, 
        nav: nav, 
        meter: meter, 
        menu: menu, 
        mark: mark, 
        map: map, 
        li: li, 
        legend: legend, 
        label: label, 
        kbd: kbd, 
        ins: ins, 
        iframe: iframe, 
        i: i, 
        html: html, 
        hgroup: hgroup, 
        header: header, 
        head: head, 
        h6: h6, 
        h5: h5, 
        h4: h4, 
        h3: h3, 
        h2: h2, 
        h1: h1, 
        form: form, 
        footer: footer, 
        figure: figure, 
        figcaption: figcaption, 
        fieldset: fieldset, 
        em: em, 
        dt: dt, 
        dl: dl, 
        div: div, 
        dfn: dfn, 
        details: details, 
        del: del, 
        dd: dd, 
        datalist: datalist, 
        command: command, 
        colgroup: colgroup, 
        code: code, 
        cite: cite, 
        caption: caption, 
        canvas: canvas, 
        button: button, 
        body: body, 
        blockquote: blockquote, 
        bdo: bdo, 
        b: b, 
        audio: audio, 
        aside: aside, 
        article: article, 
        address: address, 
        abbr: abbr, 
        a: a
    };
})();
var PS = PS || {};
PS.Data_Json_JTable_Internal = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Prelude = PS.Prelude;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Array_Unsafe = PS.Data_Array_Unsafe;
    var Math = PS.Math;
    var Data_StrMap = PS.Data_StrMap;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Set = PS.Data_Set;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    var jnull = null;;
    var localeCompare =
function (s1) { return function (s2) {
  return s1.localeCompare(s2) } };
    var T = (function () {
        function T(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        T.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new T(value0, value1, value2, value3);
                    };
                };
            };
        };
        return T;
    })();
    var C = (function () {
        function C(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        C.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new C(value0, value1, value2, value3);
                    };
                };
            };
        };
        return C;
    })();
    var widthOfPrimTuple = function (ja) {
        var _2611 = Data_Array.length(ja) <= 1;
        if (_2611) {
            return Data_Maybe.Nothing.value;
        };
        if (!_2611) {
            var f = Data_Argonaut_Core.foldJson(Prelude["const"](0))(Prelude["const"](1))(Prelude["const"](2))(Prelude["const"](3))(Prelude["const"](4))(Prelude["const"](5));
            var types = Prelude["<#>"](Data_Array.functorArray)(ja)(f);
            var has_arr_or_obj = Data_Foldable.any(Data_Foldable.foldableArray)(function (x) {
                return x >= 4;
            })(types);
            var all_eq = Data_Foldable.all(Data_Foldable.foldableArray)(Prelude["=="](Prelude.eqNumber)(Data_Array_Unsafe.head(types)))(types);
            var _2612 = has_arr_or_obj || all_eq && Data_Array.length(ja) > 2;
            if (_2612) {
                return Data_Maybe.Nothing.value;
            };
            if (!_2612) {
                return Data_Maybe.Just.create(Data_Array.length(ja));
            };
            throw new Error("Failed pattern match");
        };
        throw new Error("Failed pattern match");
    };
    var tWidth = function (_727) {
        return _727.value1;
    };
    var tPath = function (_726) {
        return _726.value0;
    };
    var tKids = function (_729) {
        return _729.value3;
    };
    var tMergeArray = function (_734) {
        return function (_735) {
            var i = Data_Array.findIndex(function (n) {
                return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(Data_Array.last(_735.value0))(Data_Array.last(tPath(n)));
            })(_734.value3);
            var _2630 = Data_Array["!!"](_734.value3)(i);
            if (_2630 instanceof Data_Maybe.Just) {
                var w$prime = (_734.value1 - _2630.value0.value1) + Math.max(_735.value1)(_2630.value0.value1);
                var k2$prime = tKids(Data_Foldable.foldl(Data_Foldable.foldableArray)(tMergeArray)(_2630.value0)(_735.value3));
                var k$prime = Data_Array.updateAt(i)(new T(_2630.value0.value0, Math.max(_735.value1)(_2630.value0.value1), _2630.value0.value2, k2$prime))(_734.value3);
                var h$prime = Math.max(_734.value2)(_2630.value0.value2 + 1);
                return new T(_734.value0, w$prime, h$prime, k$prime);
            };
            if (_2630 instanceof Data_Maybe.Nothing) {
                return new T(_734.value0, _734.value1 + _735.value1, 1, Data_Array.snoc(_734.value3)(new T(_735.value0, _735.value1, _735.value2, _735.value3)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var tHeight = function (_728) {
        return _728.value2;
    };
    var tFromJson = function (path) {
        return function (json) {
            var _2649 = Data_Argonaut_Core.toObject(json);
            if (_2649 instanceof Data_Maybe.Just) {
                var k = Data_Array.map(function (_724) {
                    return tFromJson(Data_Array.snoc(path)(_724.value0))(_724.value1);
                })(Data_StrMap.toList(_2649.value0));
                var w = Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude["+"](Prelude.numNumber))(0)(Prelude["<#>"](Data_Array.functorArray)(k)(tWidth));
                var h = 1 + Data_Foldable.foldl(Data_Foldable.foldableArray)(Math.max)(0)(Prelude["<#>"](Data_Array.functorArray)(k)(tHeight));
                return new T(path, w, h, k);
            };
            if (_2649 instanceof Data_Maybe.Nothing) {
                var _2654 = Data_Argonaut_Core.toArray(json);
                if (_2654 instanceof Data_Maybe.Nothing) {
                    return new T(path, 1, 0, [  ]);
                };
                if (_2654 instanceof Data_Maybe.Just) {
                    var _2655 = widthOfPrimTuple(_2654.value0);
                    if (_2655 instanceof Data_Maybe.Just) {
                        return new T(path, _2655.value0, 0, [  ]);
                    };
                    if (_2655 instanceof Data_Maybe.Nothing) {
                        var ts = Prelude["<#>"](Data_Array.functorArray)(_2654.value0)(tFromJson(path));
                        var tk = Prelude[">>="](Data_Array.bindArray)(ts)(tKids);
                        var t$prime = Data_Foldable.foldl(Data_Foldable.foldableArray)(tMergeArray)(new T(path, 0, 0, [  ]))(tk);
                        var w = Data_Foldable.foldl(Data_Foldable.foldableArray)(Math.max)(tWidth(t$prime))(Prelude["<#>"](Data_Array.functorArray)(ts)(tWidth));
                        var h = 1 + Data_Foldable.foldl(Data_Foldable.foldableArray)(Math.max)(0)(Prelude["<#>"](Data_Array.functorArray)(tk)(tHeight));
                        var h$prime = (function () {
                            var _2657 = Data_Array["null"](tKids(t$prime));
                            if (_2657) {
                                return 0;
                            };
                            if (!_2657) {
                                return h;
                            };
                            throw new Error("Failed pattern match");
                        })();
                        return new T(path, w, h$prime, tKids(t$prime));
                    };
                    throw new Error("Failed pattern match");
                };
                throw new Error("Failed pattern match");
            };
            throw new Error("Failed pattern match");
        };
    };
    var strcmp = function (s1) {
        return function (s2) {
            return Prelude.compare(Prelude.ordNumber)(localeCompare(s1)(s2))(0);
        };
    };
    var sortTree = function (_742) {
        return function (_743) {
            return new T(_743.value0, _743.value1, _743.value2, Data_Array.sortBy(function (t1) {
                return function (t2) {
                    return _742(tPath(t1))(tPath(t2));
                };
            })(Prelude["<#>"](Data_Array.functorArray)(_743.value3)(sortTree(_742))));
        };
    };
    var showTree = new Prelude.Show(function (_744) {
        return Data_String.joinWith(" ")([ "<T", Prelude.show(Prelude.showArray(Prelude.showString))(_744.value0), Prelude.show(Prelude.showNumber)(_744.value1), Prelude.show(Prelude.showNumber)(_744.value2), Prelude.show(Prelude.showArray(showTree))(_744.value3), ">" ]);
    });
    var showCell = new Prelude.Show(function (_745) {
        return Data_String.joinWith(" ")([ "<T", Prelude.show(Prelude.showNumber)(_745.value1), Prelude.show(Prelude.showNumber)(_745.value2), Prelude.show(Data_Argonaut_JCursor.showJCursor)(_745.value0), Prelude.show(Data_Argonaut_JCursor.showJsonPrim)(_745.value3), ">" ]);
    });
    var cWidth = function (_731) {
        return _731.value1;
    };
    var cMergeObj = function (rss) {
        var maxh = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (n) {
            return function (l) {
                return Math.max(n)(Data_Array.length(l));
            };
        })(0)(rss);
        var fol = function (n) {
            return function (cs) {
                return Math.max(n)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude["+"](Prelude.numNumber))(0)(Prelude["<#>"](Data_Array.functorArray)(cs)(cWidth)));
            };
        };
        var maxws = Prelude["<#>"](Data_Array.functorArray)(rss)(function (rs) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(fol)(0)(rs);
        });
        return Prelude[">>="](Data_Array.bindArray)(Data_Array[".."](0)(maxh - 1))(function (_37) {
            return Prelude["return"](Data_Array.monadArray)(Data_Array.concat(Prelude[">>="](Data_Array.bindArray)(Data_Tuple.zip(rss)(maxws))(function (_36) {
                return Prelude["return"](Data_Array.monadArray)((function () {
                    var _2682 = Data_Array.length(_36.value0) === 1;
                    if (_2682) {
                        var _2683 = _37 === 0;
                        if (_2683) {
                            return Data_Array.map(function (_725) {
                                return new C(_725.value0, _725.value1, maxh, _725.value3);
                            })(Data_Array_Unsafe.head(_36.value0));
                        };
                        if (!_2683) {
                            return Data_Maybe.fromMaybe([  ])(Data_Array["!!"](_36.value0)(_37));
                        };
                        throw new Error("Failed pattern match");
                    };
                    if (!_2682) {
                        return Data_Maybe.fromMaybe([ new C(Data_Argonaut_JCursor.JCursorTop.value, _36.value1, 1, Data_Argonaut_JCursor.primNull) ])(Data_Array["!!"](_36.value0)(_37));
                    };
                    throw new Error("Failed pattern match");
                })());
            })));
        });
    };
    var cJsonPrim = function (_733) {
        return _733.value3;
    };
    var cHeight = function (_732) {
        return _732.value2;
    };
    var cCursor = function (_730) {
        return _730.value0;
    };
    var _nattr = function (attr) {
        return function (n) {
            return function (m) {
                var _2706 = n > 1;
                if (_2706) {
                    return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupM)(m)(Text_Smolder_Markup.attribute(attr)(Prelude.show(Prelude.showNumber)(n)));
                };
                if (!_2706) {
                    return m;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var _rspan = _nattr("rowspan");
    var _cspan = _nattr("colspan");
    var renderThead = function (tr$prime) {
        return function (thf) {
            return function (root) {
                return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)((function () {
                    var height = tHeight(root);
                    var toRows = function (ts) {
                        var _2707 = Data_Array["null"](ts);
                        if (_2707) {
                            return [  ];
                        };
                        if (!_2707) {
                            return Prelude[":"](ts)(toRows(Prelude[">>="](Data_Array.bindArray)(ts)(tKids)));
                        };
                        throw new Error("Failed pattern match");
                    };
                    var rows = toRows(tKids(root));
                    return Prelude[">>="](Data_Array.bindArray)(Data_Tuple.zip(rows)(Data_Array[".."](0)(height)))(function (_35) {
                        return Prelude["return"](Data_Array.monadArray)(tr$prime(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(_35.value0)(function (_34) {
                            var rs = (function () {
                                var _2710 = Data_Array["null"](_34.value3);
                                if (_2710) {
                                    return height - _35.value1;
                                };
                                if (!_2710) {
                                    return 1;
                                };
                                throw new Error("Failed pattern match");
                            })();
                            return Prelude["return"](Data_Array.monadArray)(Prelude[">>>"](Prelude.semigroupoidArr)(_cspan(_34.value1))(_rspan(rs))(thf(_34)));
                        }))));
                    });
                })());
            };
        };
    };
    var _cN = Prelude["const"](Data_Argonaut_JCursor.primNull);
    var toPrim = Data_Argonaut_Core.foldJson(_cN)(Data_Argonaut_JCursor.primBool)(Data_Argonaut_JCursor.primNum)(Data_Argonaut_JCursor.primStr)(_cN)(_cN);
    var mergeObjTuple = function (_736) {
        return function (_737) {
            return function (_738) {
                var joms = Prelude["<#>"](Data_Array.functorArray)(_738)(Data_Argonaut_Core.toObject);
                var _2720 = !Data_Foldable.all(Data_Foldable.foldableArray)(Data_Maybe.isJust)(joms);
                if (_2720) {
                    return Data_Maybe.Nothing.value;
                };
                if (!_2720) {
                    var jos = Data_Array.catMaybes(joms);
                    var keyss = Prelude["<#>"](Data_Array.functorArray)(jos)(Data_StrMap.keys);
                    var all_keys = Data_Array.concat(keyss);
                    var _2721 = Data_Array.length(Data_Set.toList(Data_Set.fromList(Prelude.ordString)(all_keys))) !== Data_Array.length(all_keys);
                    if (_2721) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (!_2721) {
                        return Data_Maybe.Just.create(cMergeObj(Prelude[">>="](Data_Array.bindArray)(_736.value3)(function (_38) {
                            var label = Data_Array_Unsafe.last(_38.value0);
                            var i = Data_Array.findIndex(function (ks) {
                                return Data_Array.elemIndex(Prelude.eqString)(label)(ks) > (-1);
                            })(keyss);
                            var jo = Data_Maybe.fromMaybe(Data_StrMap.empty)(Data_Array["!!"](jos)(i));
                            var j = Data_Maybe.fromMaybe(jnull)(Data_StrMap.lookup(label)(jo));
                            return Prelude["return"](Data_Array.monadArray)(cFromJson(_38)(Data_Argonaut_JCursor.downField(label)(Data_Argonaut_JCursor.downIndex(i)(_737)))(j));
                        })));
                    };
                    throw new Error("Failed pattern match");
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var cFromJson = function (_739) {
        return function (_740) {
            return function (_741) {
                var _2734 = Data_Argonaut_Core.toObject(_741);
                if (_2734 instanceof Data_Maybe.Just) {
                    return cMergeObj(Prelude[">>="](Data_Array.bindArray)(_739.value3)(function (_39) {
                        var label = Data_Array_Unsafe.last(_39.value0);
                        var j = Data_Maybe.fromMaybe(jnull)(Data_StrMap.lookup(label)(_2734.value0));
                        return Prelude["return"](Data_Array.monadArray)(cFromJson(_39)(Data_Argonaut_JCursor.downField(label)(_740))(j));
                    }));
                };
                if (_2734 instanceof Data_Maybe.Nothing) {
                    var _2741 = Data_Argonaut_Core.toArray(_741);
                    if (_2741 instanceof Data_Maybe.Nothing) {
                        return [ [ C.create(_740)(_739.value1)(1)(toPrim(_741)) ] ];
                    };
                    if (_2741 instanceof Data_Maybe.Just) {
                        var _2742 = mergeObjTuple(_739)(_740)(_2741.value0);
                        if (_2742 instanceof Data_Maybe.Just) {
                            return _2742.value0;
                        };
                        if (_2742 instanceof Data_Maybe.Nothing) {
                            var _2744 = _739.value2 <= 0 && (_739.value1 > 1 && Data_Maybe.isJust(widthOfPrimTuple(_2741.value0)));
                            if (_2744) {
                                return Data_Array.singleton(Prelude[">>="](Data_Array.bindArray)(Data_Array[".."](0)(_739.value1 - 1))(function (_40) {
                                    var j = Data_Maybe.fromMaybe(jnull)(Data_Array["!!"](_2741.value0)(_40));
                                    return Prelude["return"](Data_Array.monadArray)(C.create(Data_Argonaut_JCursor.downIndex(_40)(_740))(1)(1)(toPrim(j)));
                                }));
                            };
                            if (!_2744) {
                                return Data_Array.concat(Prelude[">>="](Data_Array.bindArray)(Data_Tuple.zip(_2741.value0)(Data_Array[".."](0)(Data_Array.length(_2741.value0))))(function (_41) {
                                    return Prelude["return"](Data_Array.monadArray)(cFromJson(_739)(Data_Argonaut_JCursor.downIndex(_41.value1)(_740))(_41.value0));
                                }));
                            };
                            throw new Error("Failed pattern match");
                        };
                        throw new Error("Failed pattern match");
                    };
                    throw new Error("Failed pattern match");
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var renderTbody = function (tr$prime) {
        return function (tdf) {
            return function (t) {
                return function (json) {
                    return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(cFromJson(t)(Data_Argonaut_JCursor.JCursorTop.value)(json))(function (_43) {
                        return Prelude["return"](Data_Array.monadArray)(tr$prime(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(_43)(function (_42) {
                            return Prelude["return"](Data_Array.monadArray)(Prelude[">>>"](Prelude.semigroupoidArr)(_cspan(_42.value1))(_rspan(_42.value2))(tdf(_42)));
                        }))));
                    }));
                };
            };
        };
    };
    
    /**
     *  renderJTableRaw :: {...} -> Json
     */
    var renderJTableRaw = function (o) {
        return function (json) {
            return o.style.table((function () {
                var t = sortTree(o.columnOrdering)(tFromJson([  ])(json));
                return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_HTML.thead(renderThead(o.style.tr)(o.style.th)(t)))(function () {
                    return Text_Smolder_HTML.tbody(renderTbody(o.style.tr)(o.style.td)(t)(json));
                });
            })());
        };
    };
    return {
        C: C, 
        T: T, 
        renderJTableRaw: renderJTableRaw, 
        strcmp: strcmp, 
        localeCompare: localeCompare, 
        sortTree: sortTree, 
        renderTbody: renderTbody, 
        cFromJson: cFromJson, 
        mergeObjTuple: mergeObjTuple, 
        cMergeObj: cMergeObj, 
        renderThead: renderThead, 
        _rspan: _rspan, 
        _cspan: _cspan, 
        _nattr: _nattr, 
        tFromJson: tFromJson, 
        tMergeArray: tMergeArray, 
        widthOfPrimTuple: widthOfPrimTuple, 
        toPrim: toPrim, 
        _cN: _cN, 
        jnull: jnull, 
        cJsonPrim: cJsonPrim, 
        cHeight: cHeight, 
        cWidth: cWidth, 
        cCursor: cCursor, 
        tKids: tKids, 
        tHeight: tHeight, 
        tWidth: tWidth, 
        tPath: tPath, 
        showTree: showTree, 
        showCell: showCell
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML_Attributes = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var xmlns = Text_Smolder_Markup.attribute("xmlns");
    var wrap = Text_Smolder_Markup.attribute("wrap");
    var width = Text_Smolder_Markup.attribute("width");
    var value = Text_Smolder_Markup.attribute("value");
    var usemap = Text_Smolder_Markup.attribute("usemap");
    var type$prime = Text_Smolder_Markup.attribute("type");
    var title = Text_Smolder_Markup.attribute("title");
    var target = Text_Smolder_Markup.attribute("target");
    var tabindex = Text_Smolder_Markup.attribute("tabindex");
    var summary = Text_Smolder_Markup.attribute("summary");
    var subject = Text_Smolder_Markup.attribute("subject");
    var style = Text_Smolder_Markup.attribute("style");
    var step = Text_Smolder_Markup.attribute("step");
    var start = Text_Smolder_Markup.attribute("start");
    var srcdoc = Text_Smolder_Markup.attribute("srcdoc");
    var src = Text_Smolder_Markup.attribute("src");
    var spellcheck = Text_Smolder_Markup.attribute("spellcheck");
    var span = Text_Smolder_Markup.attribute("span");
    var sizes = Text_Smolder_Markup.attribute("sizes");
    var size = Text_Smolder_Markup.attribute("size");
    var shape = Text_Smolder_Markup.attribute("shape");
    var selected = Text_Smolder_Markup.attribute("selected");
    var seamless = Text_Smolder_Markup.attribute("seamless");
    var scoped = Text_Smolder_Markup.attribute("scoped");
    var scope = Text_Smolder_Markup.attribute("scope");
    var sandbox = Text_Smolder_Markup.attribute("sandbox");
    var rowspan = Text_Smolder_Markup.attribute("rowspan");
    var rows = Text_Smolder_Markup.attribute("rows");
    var reversed = Text_Smolder_Markup.attribute("reversed");
    var required = Text_Smolder_Markup.attribute("required");
    var rel = Text_Smolder_Markup.attribute("rel");
    var readonly = Text_Smolder_Markup.attribute("readonly");
    var radiogroup = Text_Smolder_Markup.attribute("radiogroup");
    var pubdate = Text_Smolder_Markup.attribute("pubdate");
    var preload = Text_Smolder_Markup.attribute("preload");
    var placeholder = Text_Smolder_Markup.attribute("placeholder");
    var ping = Text_Smolder_Markup.attribute("ping");
    var pattern = Text_Smolder_Markup.attribute("pattern");
    var optimum = Text_Smolder_Markup.attribute("optimum");
    var open = Text_Smolder_Markup.attribute("open");
    var onwaiting = Text_Smolder_Markup.attribute("onwaiting");
    var onvolumechange = Text_Smolder_Markup.attribute("onvolumechange");
    var onunload = Text_Smolder_Markup.attribute("onunload");
    var onundo = Text_Smolder_Markup.attribute("onundo");
    var ontimeupdate = Text_Smolder_Markup.attribute("ontimeupdate");
    var onsuspend = Text_Smolder_Markup.attribute("onsuspend");
    var onsubmit = Text_Smolder_Markup.attribute("onsubmit");
    var onstorage = Text_Smolder_Markup.attribute("onstorage");
    var onstalled = Text_Smolder_Markup.attribute("onstalled");
    var onselect = Text_Smolder_Markup.attribute("onselect");
    var onseeking = Text_Smolder_Markup.attribute("onseeking");
    var onseeked = Text_Smolder_Markup.attribute("onseeked");
    var onscroll = Text_Smolder_Markup.attribute("onscroll");
    var onresize = Text_Smolder_Markup.attribute("onresize");
    var onredo = Text_Smolder_Markup.attribute("onredo");
    var onreadystatechange = Text_Smolder_Markup.attribute("onreadystatechange");
    var onratechange = Text_Smolder_Markup.attribute("onratechange");
    var onpropstate = Text_Smolder_Markup.attribute("onpropstate");
    var onprogress = Text_Smolder_Markup.attribute("onprogress");
    var onplaying = Text_Smolder_Markup.attribute("onplaying");
    var onplay = Text_Smolder_Markup.attribute("onplay");
    var onpause = Text_Smolder_Markup.attribute("onpause");
    var onpageshow = Text_Smolder_Markup.attribute("onpageshow");
    var onpagehide = Text_Smolder_Markup.attribute("onpagehide");
    var ononline = Text_Smolder_Markup.attribute("ononline");
    var onmousewheel = Text_Smolder_Markup.attribute("onmousewheel");
    var onmouseup = Text_Smolder_Markup.attribute("onmouseup");
    var onmouseover = Text_Smolder_Markup.attribute("onmouseover");
    var onmouseout = Text_Smolder_Markup.attribute("onmouseout");
    var onmousemove = Text_Smolder_Markup.attribute("onmousemove");
    var onmousedown = Text_Smolder_Markup.attribute("onmousedown");
    var onmessage = Text_Smolder_Markup.attribute("onmessage");
    var onloadstart = Text_Smolder_Markup.attribute("onloadstart");
    var onloadedmetadata = Text_Smolder_Markup.attribute("onloadedmetadata");
    var onloadeddata = Text_Smolder_Markup.attribute("onloadeddata");
    var onload = Text_Smolder_Markup.attribute("onload");
    var onkeyup = Text_Smolder_Markup.attribute("onkeyup");
    var onkeydown = Text_Smolder_Markup.attribute("onkeydown");
    var oninvalid = Text_Smolder_Markup.attribute("oninvalid");
    var oninput = Text_Smolder_Markup.attribute("oninput");
    var onhaschange = Text_Smolder_Markup.attribute("onhaschange");
    var onforminput = Text_Smolder_Markup.attribute("onforminput");
    var onformchange = Text_Smolder_Markup.attribute("onformchange");
    var onfocus = Text_Smolder_Markup.attribute("onfocus");
    var onerror = Text_Smolder_Markup.attribute("onerror");
    var onended = Text_Smolder_Markup.attribute("onended");
    var onemptied = Text_Smolder_Markup.attribute("onemptied");
    var ondurationchange = Text_Smolder_Markup.attribute("ondurationchange");
    var ondrop = Text_Smolder_Markup.attribute("ondrop");
    var ondragstart = Text_Smolder_Markup.attribute("ondragstart");
    var ondragover = Text_Smolder_Markup.attribute("ondragover");
    var ondragleave = Text_Smolder_Markup.attribute("ondragleave");
    var ondragenter = Text_Smolder_Markup.attribute("ondragenter");
    var ondragend = Text_Smolder_Markup.attribute("ondragend");
    var ondrag = Text_Smolder_Markup.attribute("ondrag");
    var ondblclick = Text_Smolder_Markup.attribute("ondblclick");
    var oncontextmenu = Text_Smolder_Markup.attribute("oncontextmenu");
    var onclick = Text_Smolder_Markup.attribute("onclick");
    var onchange = Text_Smolder_Markup.attribute("onchange");
    var oncanplaythrough = Text_Smolder_Markup.attribute("oncanplaythrough");
    var oncanplay = Text_Smolder_Markup.attribute("oncanplay");
    var onblur = Text_Smolder_Markup.attribute("onblur");
    var onbeforeprint = Text_Smolder_Markup.attribute("onbeforeprint");
    var onbeforeonload = Text_Smolder_Markup.attribute("onbeforeonload");
    var novalidate = Text_Smolder_Markup.attribute("novalidate");
    var name = Text_Smolder_Markup.attribute("name");
    var multiple = Text_Smolder_Markup.attribute("multiple");
    var min = Text_Smolder_Markup.attribute("min");
    var method = Text_Smolder_Markup.attribute("method");
    var media = Text_Smolder_Markup.attribute("media");
    var maxlength = Text_Smolder_Markup.attribute("maxlength");
    var max = Text_Smolder_Markup.attribute("max");
    var manifest = Text_Smolder_Markup.attribute("manifest");
    var low = Text_Smolder_Markup.attribute("low");
    var loop = Text_Smolder_Markup.attribute("loop");
    var list = Text_Smolder_Markup.attribute("list");
    var lang = Text_Smolder_Markup.attribute("lang");
    var label = Text_Smolder_Markup.attribute("label");
    var keytype = Text_Smolder_Markup.attribute("keytype");
    var itemprop = Text_Smolder_Markup.attribute("itemprop");
    var item = Text_Smolder_Markup.attribute("item");
    var ismap = Text_Smolder_Markup.attribute("ismap");
    var id = Text_Smolder_Markup.attribute("id");
    var icon = Text_Smolder_Markup.attribute("icon");
    var httpEquiv = Text_Smolder_Markup.attribute("http-equiv");
    var hreflang = Text_Smolder_Markup.attribute("hreflang");
    var href = Text_Smolder_Markup.attribute("href");
    var high = Text_Smolder_Markup.attribute("high");
    var hidden = Text_Smolder_Markup.attribute("hidden");
    var height = Text_Smolder_Markup.attribute("height");
    var headers = Text_Smolder_Markup.attribute("headers");
    var formtarget = Text_Smolder_Markup.attribute("formtarget");
    var formnovalidate = Text_Smolder_Markup.attribute("formnovalidate");
    var formmethod = Text_Smolder_Markup.attribute("formmethod");
    var formenctype = Text_Smolder_Markup.attribute("formenctype");
    var formaction = Text_Smolder_Markup.attribute("formaction");
    var form = Text_Smolder_Markup.attribute("form");
    var $$for = Text_Smolder_Markup.attribute("for");
    var enctype = Text_Smolder_Markup.attribute("enctype");
    var draggable = Text_Smolder_Markup.attribute("draggable");
    var disabled = Text_Smolder_Markup.attribute("disabled");
    var dir = Text_Smolder_Markup.attribute("dir");
    var defer = Text_Smolder_Markup.attribute("defer");
    var datetime = Text_Smolder_Markup.attribute("datetime");
    var data$prime = Text_Smolder_Markup.attribute("data");
    var coords = Text_Smolder_Markup.attribute("coords");
    var controls = Text_Smolder_Markup.attribute("controls");
    var contextmenu = Text_Smolder_Markup.attribute("contextmenu");
    var contenteditable = Text_Smolder_Markup.attribute("contenteditable");
    var content = Text_Smolder_Markup.attribute("content");
    var colspan = Text_Smolder_Markup.attribute("colspan");
    var cols = Text_Smolder_Markup.attribute("cols");
    var className = Text_Smolder_Markup.attribute("class");
    var cite = Text_Smolder_Markup.attribute("cite");
    var checked = Text_Smolder_Markup.attribute("checked");
    var charset = Text_Smolder_Markup.attribute("charset");
    var challenge = Text_Smolder_Markup.attribute("challenge");
    var autoplay = Text_Smolder_Markup.attribute("autoplay");
    var autofocus = Text_Smolder_Markup.attribute("autofocus");
    var autocomplete = Text_Smolder_Markup.attribute("autocomplete");
    var async = Text_Smolder_Markup.attribute("async");
    var alt = Text_Smolder_Markup.attribute("alt");
    var action = Text_Smolder_Markup.attribute("action");
    var accesskey = Text_Smolder_Markup.attribute("accesskey");
    var acceptCharset = Text_Smolder_Markup.attribute("accept-charset");
    var accept = Text_Smolder_Markup.attribute("accept");
    return {
        xmlns: xmlns, 
        wrap: wrap, 
        width: width, 
        value: value, 
        usemap: usemap, 
        "type'": type$prime, 
        title: title, 
        target: target, 
        tabindex: tabindex, 
        summary: summary, 
        subject: subject, 
        style: style, 
        step: step, 
        start: start, 
        srcdoc: srcdoc, 
        src: src, 
        spellcheck: spellcheck, 
        span: span, 
        sizes: sizes, 
        size: size, 
        shape: shape, 
        selected: selected, 
        seamless: seamless, 
        scoped: scoped, 
        scope: scope, 
        sandbox: sandbox, 
        rowspan: rowspan, 
        rows: rows, 
        reversed: reversed, 
        required: required, 
        rel: rel, 
        readonly: readonly, 
        radiogroup: radiogroup, 
        pubdate: pubdate, 
        preload: preload, 
        placeholder: placeholder, 
        ping: ping, 
        pattern: pattern, 
        optimum: optimum, 
        open: open, 
        onwaiting: onwaiting, 
        onvolumechange: onvolumechange, 
        onunload: onunload, 
        onundo: onundo, 
        ontimeupdate: ontimeupdate, 
        onsuspend: onsuspend, 
        onsubmit: onsubmit, 
        onstorage: onstorage, 
        onstalled: onstalled, 
        onselect: onselect, 
        onseeking: onseeking, 
        onseeked: onseeked, 
        onscroll: onscroll, 
        onresize: onresize, 
        onredo: onredo, 
        onreadystatechange: onreadystatechange, 
        onratechange: onratechange, 
        onpropstate: onpropstate, 
        onprogress: onprogress, 
        onplaying: onplaying, 
        onplay: onplay, 
        onpause: onpause, 
        onpageshow: onpageshow, 
        onpagehide: onpagehide, 
        ononline: ononline, 
        onmousewheel: onmousewheel, 
        onmouseup: onmouseup, 
        onmouseover: onmouseover, 
        onmouseout: onmouseout, 
        onmousemove: onmousemove, 
        onmousedown: onmousedown, 
        onmessage: onmessage, 
        onloadstart: onloadstart, 
        onloadedmetadata: onloadedmetadata, 
        onloadeddata: onloadeddata, 
        onload: onload, 
        onkeyup: onkeyup, 
        onkeydown: onkeydown, 
        oninvalid: oninvalid, 
        oninput: oninput, 
        onhaschange: onhaschange, 
        onforminput: onforminput, 
        onformchange: onformchange, 
        onfocus: onfocus, 
        onerror: onerror, 
        onended: onended, 
        onemptied: onemptied, 
        ondurationchange: ondurationchange, 
        ondrop: ondrop, 
        ondragstart: ondragstart, 
        ondragover: ondragover, 
        ondragleave: ondragleave, 
        ondragenter: ondragenter, 
        ondragend: ondragend, 
        ondrag: ondrag, 
        ondblclick: ondblclick, 
        onclick: onclick, 
        oncontextmenu: oncontextmenu, 
        onchange: onchange, 
        oncanplaythrough: oncanplaythrough, 
        oncanplay: oncanplay, 
        onblur: onblur, 
        onbeforeprint: onbeforeprint, 
        onbeforeonload: onbeforeonload, 
        novalidate: novalidate, 
        name: name, 
        multiple: multiple, 
        min: min, 
        method: method, 
        media: media, 
        maxlength: maxlength, 
        max: max, 
        manifest: manifest, 
        low: low, 
        loop: loop, 
        list: list, 
        lang: lang, 
        label: label, 
        keytype: keytype, 
        itemprop: itemprop, 
        item: item, 
        ismap: ismap, 
        id: id, 
        icon: icon, 
        httpEquiv: httpEquiv, 
        hreflang: hreflang, 
        href: href, 
        high: high, 
        hidden: hidden, 
        height: height, 
        headers: headers, 
        formtarget: formtarget, 
        formnovalidate: formnovalidate, 
        formmethod: formmethod, 
        formenctype: formenctype, 
        formaction: formaction, 
        form: form, 
        "for": $$for, 
        enctype: enctype, 
        draggable: draggable, 
        disabled: disabled, 
        dir: dir, 
        defer: defer, 
        datetime: datetime, 
        "data'": data$prime, 
        coords: coords, 
        controls: controls, 
        contextmenu: contextmenu, 
        contenteditable: contenteditable, 
        content: content, 
        colspan: colspan, 
        cols: cols, 
        className: className, 
        cite: cite, 
        checked: checked, 
        charset: charset, 
        challenge: challenge, 
        autoplay: autoplay, 
        autofocus: autofocus, 
        autocomplete: autocomplete, 
        async: async, 
        alt: alt, 
        action: action, 
        accesskey: accesskey, 
        acceptCharset: acceptCharset, 
        accept: accept
    };
})();
var PS = PS || {};
PS.Data_Json_JTable = (function () {
    "use strict";
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Prelude = PS.Prelude;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Array_Unsafe = PS.Data_Array_Unsafe;
    var Data_String = PS.Data_String;
    var Data_Foldable = PS.Data_Foldable;
    var Text_Smolder_HTML_Attributes = PS.Text_Smolder_HTML_Attributes;
    var Data_Json_JTable_Internal = PS.Data_Json_JTable_Internal;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var renderJsonSimple = function (j) {
        return Data_Argonaut_JCursor.runJsonPrim(j)(Prelude["const"]("&nbsp;"))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.id(Prelude.categoryArr));
    };
    var renderJsonSemantic = function (c) {
        return function (j) {
            return Prelude.show(Data_Argonaut_JCursor.showJsonPrim)(j);
        };
    };
    var renderJTable = function (o) {
        return Data_Json_JTable_Internal.renderJTableRaw((function () {
            var _2762 = {};
            for (var _2763 in o) {
                if (o.hasOwnProperty(_2763)) {
                    _2762[_2763] = o[_2763];
                };
            };
            _2762.style = (function () {
                var _2760 = {};
                for (var _2761 in o.style) {
                    if (o.style.hasOwnProperty(_2761)) {
                        _2760[_2761] = o.style[_2761];
                    };
                };
                _2760.th = function (t) {
                    return o.style.th(Data_Json_JTable_Internal.tPath(t));
                };
                _2760.td = function (c) {
                    return o.style.td(Data_Json_JTable_Internal.cCursor(c))(Data_Json_JTable_Internal.cJsonPrim(c));
                };
                return _2760;
            })();
            return _2762;
        })());
    };
    var renderJTableArray = function (opt) {
        return function (ja) {
            return renderJTable(opt)(Data_Argonaut_Core.fromArray(ja));
        };
    };
    var noStyle = {
        table: Text_Smolder_HTML.table, 
        tr: Text_Smolder_HTML.tr, 
        th: function (p) {
            return Text_Smolder_HTML.th(Text_Smolder_Markup.text(Data_Array_Unsafe.last(p)));
        }, 
        td: function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Text_Smolder_Markup.text(renderJsonSimple(j)));
            };
        }
    };
    var semanticStyle = (function () {
        var _2764 = {};
        for (var _2765 in noStyle) {
            if (noStyle.hasOwnProperty(_2765)) {
                _2764[_2765] = noStyle[_2765];
            };
        };
        _2764.td = function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Text_Smolder_Markup.text(renderJsonSemantic(c)(j)));
            };
        };
        return _2764;
    })();
    var inOrdering = function (p1) {
        return function (p2) {
            return Prelude.EQ.value;
        };
    };
    var defJTableOpts = {
        style: noStyle, 
        columnOrdering: inOrdering, 
        insertHeaderCells: false
    };
    var renderJTableDef = renderJTable(defJTableOpts);
    var debugStyle = (function () {
        var _2766 = {};
        for (var _2767 in noStyle) {
            if (noStyle.hasOwnProperty(_2767)) {
                _2766[_2767] = noStyle[_2767];
            };
        };
        _2766.th = function (p) {
            return Text_Smolder_HTML.th(Text_Smolder_Markup.text(Data_String.joinWith(".")(p)));
        };
        _2766.td = function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)([ Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.small)(Text_Smolder_HTML_Attributes.className("grey"))(Text_Smolder_Markup.text(Prelude.show(Data_Argonaut_JCursor.showJCursor)(c))), Text_Smolder_HTML.br, Text_Smolder_Markup.text(Prelude.show(Data_Argonaut_JCursor.showJsonPrim)(j)) ]));
            };
        };
        return _2766;
    })();
    var bootstrapStyle = (function () {
        var _2768 = {};
        for (var _2769 in noStyle) {
            if (noStyle.hasOwnProperty(_2769)) {
                _2768[_2769] = noStyle[_2769];
            };
        };
        _2768.table = function (m) {
            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.table)(Text_Smolder_Markup.attribute("class")("table"))(m);
        };
        return _2768;
    })();
    var alphaOrdering = function (p1) {
        return function (p2) {
            return Data_Json_JTable_Internal.strcmp(Data_Array_Unsafe.last(p1))(Data_Array_Unsafe.last(p2));
        };
    };
    return {
        renderJTableDef: renderJTableDef, 
        renderJTableArray: renderJTableArray, 
        renderJTable: renderJTable, 
        defJTableOpts: defJTableOpts, 
        alphaOrdering: alphaOrdering, 
        inOrdering: inOrdering, 
        debugStyle: debugStyle, 
        semanticStyle: semanticStyle, 
        renderJsonSemantic: renderJsonSemantic, 
        bootstrapStyle: bootstrapStyle, 
        noStyle: noStyle, 
        renderJsonSimple: renderJsonSimple
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_Util = (function () {
    "use strict";
    var Data_Map = PS.Data_Map;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Array = PS.Data_Array;
    var Element = (function () {
        function Element(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new Element(value0, value1, value2);
                };
            };
        };
        return Element;
    })();
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var renderAttrs = function (xs) {
        var toTuple = function (_747) {
            return new Data_Tuple.Tuple(_747.value0, _747.value1);
        };
        return Data_Map.fromList(Prelude.ordString)(Prelude["<$>"](Data_Array.functorArray)(toTuple)(xs));
    };
    var renderMarkup = function (_746) {
        if (_746 instanceof Text_Smolder_Markup.Element && _746.value1 instanceof Data_Maybe.Just) {
            return Prelude[":"](new Element(_746.value0, renderAttrs(_746.value2), renderMarkup(_746.value1.value0)))(renderMarkup(_746.value3));
        };
        if (_746 instanceof Text_Smolder_Markup.Element && _746.value1 instanceof Data_Maybe.Nothing) {
            return Prelude[":"](new Element(_746.value0, renderAttrs(_746.value2), [  ]))(renderMarkup(_746.value3));
        };
        if (_746 instanceof Text_Smolder_Markup.Content) {
            return Prelude[":"](new Text(_746.value0))(renderMarkup(_746.value1));
        };
        if (_746 instanceof Text_Smolder_Markup.Return) {
            return [  ];
        };
        throw new Error("Failed pattern match");
    };
    return {
        Element: Element, 
        Text: Text, 
        renderMarkup: renderMarkup
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_String = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Text_Smolder_Renderer_Util = PS.Text_Smolder_Renderer_Util;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var renderNode = function (_748) {
        if (_748 instanceof Text_Smolder_Renderer_Util.Element) {
            var showTail = function (_749) {
                if (_749.length === 0) {
                    return "/>";
                };
                return ">" + (Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(Prelude.show(showNode))(_749)) + ("</" + (_748.value0 + ">")));
            };
            var showAttrs = function (a_1) {
                var pair = function (k) {
                    return " " + (k + (function () {
                        var _2788 = Data_Map.lookup(Prelude.ordString)(k)(a_1);
                        if (_2788 instanceof Data_Maybe.Just) {
                            return "=\"" + (_2788.value0 + "\"");
                        };
                        if (_2788 instanceof Data_Maybe.Nothing) {
                            return "";
                        };
                        throw new Error("Failed pattern match");
                    })());
                };
                return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(pair)(Data_Map.keys(a_1)));
            };
            return "<" + (_748.value0 + (showAttrs(_748.value1) + showTail(_748.value2)));
        };
        if (_748 instanceof Text_Smolder_Renderer_Util.Text) {
            return _748.value0;
        };
        throw new Error("Failed pattern match");
    };
    var showNode = new Prelude.Show(renderNode);
    var render = function (m) {
        return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(renderNode)(Text_Smolder_Renderer_Util.renderMarkup(m)));
    };
    var showMarkup = new Prelude.Show(render);
    return {
        renderNode: renderNode, 
        render: render, 
        showNode: showNode, 
        showMarkup: showMarkup
    };
})();

